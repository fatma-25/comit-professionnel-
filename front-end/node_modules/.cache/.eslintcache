[{"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/index.js":"1","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/App.js":"2","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/redux/reducers/rootReducer.js":"3","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/navbar.js":"4","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/ApprouveUser.js":"5","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/UploadFile.js":"6","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/redux/action/auth-action.js":"7","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/home.js":"8","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/routes/privateRoute.js":"9","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/dashboard.js":"10","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/redux/reducers/auth-reducer.js":"11","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/redux/action-types/auth-action-types.js":"12","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/EditProfile.js":"13","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/SharedDocument.js":"14","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/ReadAndDownold.js":"15","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/Test.js":"16","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/Calendar.js":"17","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/ListContact.js":"18","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/Search.js":"19","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/Contact.js":"20","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/server/firebase.js":"21","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/store/actioncreator.js":"22","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/store/reducer.js":"23","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/AppLoader/AppLoader.component.jsx":"24","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/store/actiontypes.js":"25","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/Messages/Messages.component.jsx":"26","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/SideBar/SideBar.component.jsx":"27","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/SideBar/Channels/Channels.component.jsx":"28","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/SideBar/UserInfo/UserInfo.component.jsx":"29","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/SideBar/PrivateChat/PrivateChat.component.jsx":"30","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/SideBar/FavouriteChannels/FavouriteChannels.component.jsx":"31","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/Messages/MessageHeader/MessageHeader.component.jsx":"32","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/Messages/MessageContent/MessageContent.component.jsx":"33","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/Messages/MessageInput/MessageInput.component.jsx":"34","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/SideBar/Notification/Notification.component.jsx":"35","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/Messages/ImageUpload/ImageUpload.component.jsx":"36","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/serviceWorker.js":"37","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/Auth /Login/Login.component.jsx":"38","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/Auth /Register/Register.component.jsx":"39"},{"size":2966,"mtime":1640384158411,"results":"40","hashOfConfig":"41"},{"size":4550,"mtime":1640377330658,"results":"42","hashOfConfig":"41"},{"size":153,"mtime":1636046128000,"results":"43","hashOfConfig":"41"},{"size":5006,"mtime":1640376798639,"results":"44","hashOfConfig":"41"},{"size":6822,"mtime":1640376567752,"results":"45","hashOfConfig":"41"},{"size":2756,"mtime":1638042824553,"results":"46","hashOfConfig":"41"},{"size":1484,"mtime":1636046128000,"results":"47","hashOfConfig":"41"},{"size":465,"mtime":1636046128000,"results":"48","hashOfConfig":"41"},{"size":372,"mtime":1636046128000,"results":"49","hashOfConfig":"41"},{"size":746,"mtime":1638001136930,"results":"50","hashOfConfig":"41"},{"size":826,"mtime":1636046128000,"results":"51","hashOfConfig":"41"},{"size":193,"mtime":1636046128000,"results":"52","hashOfConfig":"41"},{"size":9475,"mtime":1640376696133,"results":"53","hashOfConfig":"41"},{"size":2927,"mtime":1638059156943,"results":"54","hashOfConfig":"41"},{"size":1043,"mtime":1638048172820,"results":"55","hashOfConfig":"41"},{"size":11568,"mtime":1640353701207,"results":"56","hashOfConfig":"41"},{"size":3316,"mtime":1640296508880,"results":"57","hashOfConfig":"41"},{"size":11279,"mtime":1640367351394,"results":"58","hashOfConfig":"41"},{"size":683,"mtime":1639767305522,"results":"59","hashOfConfig":"41"},{"size":2266,"mtime":1640296350182,"results":"60","hashOfConfig":"41"},{"size":889,"mtime":1640377414604,"results":"61","hashOfConfig":"41"},{"size":750,"mtime":1640205772728,"results":"62","hashOfConfig":"41"},{"size":1790,"mtime":1640260084180,"results":"63","hashOfConfig":"41"},{"size":256,"mtime":1640205652293,"results":"64","hashOfConfig":"41"},{"size":202,"mtime":1640205772728,"results":"65","hashOfConfig":"41"},{"size":4809,"mtime":1640209845704,"results":"66","hashOfConfig":"41"},{"size":8535,"mtime":1640376739293,"results":"67","hashOfConfig":"41"},{"size":6164,"mtime":1640344826223,"results":"68","hashOfConfig":"41"},{"size":1772,"mtime":1640377455556,"results":"69","hashOfConfig":"41"},{"size":4624,"mtime":1640342452838,"results":"70","hashOfConfig":"41"},{"size":1579,"mtime":1640205738624,"results":"71","hashOfConfig":"41"},{"size":999,"mtime":1640205724249,"results":"72","hashOfConfig":"41"},{"size":875,"mtime":1640205724247,"results":"73","hashOfConfig":"41"},{"size":2734,"mtime":1640207104349,"results":"74","hashOfConfig":"41"},{"size":2299,"mtime":1640281456454,"results":"75","hashOfConfig":"41"},{"size":1359,"mtime":1640205724246,"results":"76","hashOfConfig":"41"},{"size":5086,"mtime":1640206157959,"results":"77","hashOfConfig":"41"},{"size":3416,"mtime":1640353252085,"results":"78","hashOfConfig":"41"},{"size":7208,"mtime":1640377444725,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},"y1531e",{"filePath":"83","messages":"84","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"128"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"86"},"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/index.js",["179","180"],"// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./index.css\";\n// import App from \"./App\";\n// import { createStore, compose, applyMiddleware } from \"redux\";\n// import { Provider } from \"react-redux\";\n// import { rootReducer } from \"./redux/reducers/rootReducer\";\n// import thunk from \"redux-thunk\";\n\n// const middleware = [thunk];\n\n// const store = createStore(\n//   rootReducer,\n//   compose(\n//     applyMiddleware(...middleware)\n//     // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//   )\n// );\n// ReactDOM.render(\n//   <Provider store={store}>\n//     <App />\n//   </Provider>,\n//   document.getElementById(\"root\")\n// );\n\nimport React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  withRouter,\n} from \"react-router-dom\";\nimport { Provider, connect } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport Register from \"./components/Auth /Register/Register.component\";\nimport Login from \"./components/Auth /Login/Login.component\";\nimport firebase from \"./server/firebase\";\nimport { combinedReducers } from \"./store/reducer\";\nimport { setUser } from \"./store/actioncreator\";\nimport { AppLoader } from \"./components/AppLoader/AppLoader.component\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nlet store;\nexport default store = createStore(combinedReducers);\n\nconst Index = (props) => {\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        props.setUser(user);\n        props.history.push(\"/\");\n      } else {\n        props.setUser(null);\n        props.history.push(\"/login\");\n      }\n    });\n  }, []);\n\n  console.log(\"Debug\", props.currentUser);\n  return (\n    <>\n      {/* <AppLoader loading={props.loading && props.location.pathname === \"/\"} /> */}\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/\" component={App} />\n        {console.log(store.getState().user.currentUser, \"rrrr\")}\n      </Switch>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.user.currentUser,\n    loading: state.channel.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setUser: (user) => {\n      dispatch(setUser(user));\n    },\n  };\n};\n\nconst IndexWithRouter = withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(Index)\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <IndexWithRouter />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/App.js",["181","182","183","184","185","186","187","188","189","190","191","192","193"],"// import \"./App.css\";\n// import { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\n// import Navbar from \"./components/navbar\";\n// import Home from \"./components/views/home\";\n// import Dashboard from \"./components/views/dashboard\";\n// import { useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { getAuthUser } from \"./redux/action/auth-action\";\n// import PrivateRoute from \"./components/routes/privateRoute\";\n// import ApprouveUser from \"./components/views/ApprouveUser\";\n// import UploadFile from \"./components/UploadFile\";\n// import EditProfile from \"./components/views/EditProfile\";\n// import SharedDocument from \"./components/views/SharedDocument\";\n// import Calendar from \"./components/views/Calendar\";\n// import Test from \"./components/views/Test\";\n// import ListContact from \"./components/views/ListContact\";\n// function App() {\n//   const dispatch = useDispatch();\n//   useEffect(() => {\n//     dispatch(getAuthUser());\n//   }, []);\n\n//   const user = useSelector((state) => state.auth.user);\n\n//   return (\n//     <div className=\"App\">\n//       <Router>\n//         <Navbar />\n\n//         <Route exact path=\"/\" component={Home} />\n//         <Route path=\"/test\" component={Test} />\n//         {/* <PrivateRoute path=\"/test\" component={Test} /> */}\n//         <PrivateRoute path=\"/listcontact\" component={ListContact} />\n//         <PrivateRoute path=\"/Dashboard\" component={Dashboard} />\n//         <PrivateRoute path=\"/ApprouveUser\" component={ApprouveUser} />\n//         <PrivateRoute path=\"/upload\" component={UploadFile} />\n//         <PrivateRoute path=\"/edit\" component={EditProfile} />\n//         <PrivateRoute path=\"/shared\" component={SharedDocument} />\n//         <PrivateRoute path=\"/calendar\" component={Calendar} />\n//       </Router>\n//       {/* <UploadFile /> */}\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React from \"react\";\nimport { SideBar } from \"./components/SideBar/SideBar.component\";\nimport Messages from \"./components/Messages/Messages.component\";\nimport ListContact from \"./components/views/ListContact\";\nimport \"./App.css\";\nimport { Grid } from \"semantic-ui-react\";\nimport { useLocation } from \"react-router-dom\";\nimport PrivateRoute from \"./components/routes/privateRoute\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport Navbar from \"./components/navbar\";\nimport Home from \"./components/views/home\";\nimport Dashboard from \"./components/views/dashboard\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAuthUser } from \"./redux/action/auth-action\";\nimport ApprouveUser from \"./components/views/ApprouveUser\";\nimport UploadFile from \"./components/UploadFile\";\nimport EditProfile from \"./components/views/EditProfile\";\nimport SharedDocument from \"./components/views/SharedDocument\";\nimport Calendar from \"./components/views/Calendar\";\nimport Test from \"./components/views/Test\";\n\nfunction App() {\n  const location = useLocation();\n  console.log(location.pathname);\n\n  return (\n    <Grid columns=\"equal\">\n      <SideBar />\n      <Grid.Column className=\"messagepanel\">\n        {/* <Messages /> */}\n        {location.pathname === \"/listcontact\" ? (\n          <Route path=\"/listcontact\" component={ListContact} />\n        ) : location.pathname === \"/calendar\" ? (\n          <Route path=\"/calendar\" component={Calendar} />\n        ) : location.pathname === \"/upload\" ? (\n          <Route path=\"/upload\" component={UploadFile} />\n        ) : location.pathname === \"/shared\" ? (\n          <Route path=\"/shared\" component={SharedDocument} />\n        ) : // : location.pathname === \"/edit\" ? (\n        //   <Route path=\"/edit\" component={EditProfile} />\n        // )\n        location.pathname === \"/ApprouveUser\" ? (\n          <Route path=\"/ApprouveUser\" component={ApprouveUser} />\n        ) : location.pathname === \"/message\" ? (\n          // <Messages />\n          <Route path=\"/message\" component={Messages} />\n        ) : (\n          // <div>Welcome to SoftCommunity Dashbord</div>\n          <img\n            style={{ margin: 200, marginTop: 50 }}\n            src=\"https://media.istockphoto.com/vectors/welcome-inscription-hand-drawn-lettering-greeting-card-with-design-vector-id816807384?k=20&m=816807384&s=612x612&w=0&h=QRjPUJ-vhr50lkeJx5j1QKY1n3lakksxrodVf1rEZ4I=\"\n          />\n        )}\n      </Grid.Column>\n\n      <Grid.Column width={3}>\n        <span></span>\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nexport default App;\n",["194","195"],"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/redux/reducers/rootReducer.js",[],["196","197"],"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/navbar.js",[],"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/ApprouveUser.js",["198","199","200","201","202","203","204"],"// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n\n// const ApprouveUser = () => {\n//   const [data, setData] = useState([]);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const result = await axios(\"http://localhost:2000/api/auth/all\");\n\n//       setData(result.data);\n//     };\n\n//     fetchData();\n//   }, []);\n//   return (\n//     <div>\n//       <table className=\"table\">\n//         <tbody className=\"table\">\n//           {data.map((user) => (\n//             <div\n//               style={{\n//                 display: \"flex\",\n//                 justifyContent: \"space-around\",\n//                 alignSelf: \"stretch\",\n//               }}\n//             >\n//               <a style={user?.account === \"true\" ? { color: \"red\" } : null}>\n//                 {user._id}\n//               </a>\n//               <a style={user?.account === \"true\" ? { color: \"red\" } : null}>\n//                 {user.name}\n//               </a>\n//               <a style={user?.account === \"true\" ? { color: \"red\" } : null}>\n//                 {user.email}\n//               </a>\n//               {/* <a style={{ color: \"red\" }}>{user.account}</a> */}\n//               <button\n//                 type=\"button\"\n//                 class=\"btn btn-link\"\n//                 onClick={() => {\n//                   alert(` user approved`);\n//                   axios.put(`http://localhost:2000/api/auth/${user._id}`, {\n//                     account: true,\n//                   });\n//                 }}\n//               >\n//                 approuve user\n//               </button>\n//             </div>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default ApprouveUser;\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n// import firebase from \"../../server/firebase\";\nimport firebase from \"../../server/firebase\";\n\nconst ApprouveUser = (props) => {\n  const [usersState, setUsersState] = useState([]);\n\n  const [connectedUsersState, setConnectedUsersState] = useState([]);\n\n  const usersRef = firebase.database().ref(\"users\");\n\n  const connectedRef = firebase.database().ref(\".info/connected\");\n\n  const statusRef = firebase.database().ref(\"status\");\n\n  useEffect(() => {\n    usersRef.on(\"child_added\", (snap) => {\n      setUsersState((currentState) => {\n        let updatedState = [...currentState];\n\n        let user = snap.val();\n        user.name = user.displayName;\n        user.email = user.email;\n        user.status = user.status;\n        user.id = snap.key;\n        user.isPrivateChat = true;\n        updatedState.push(user);\n\n        return updatedState;\n      });\n    });\n\n    connectedRef.on(\"value\", (snap) => {\n      if (props.user && snap.val()) {\n        const userStatusRef = statusRef.child(props.user.uid);\n        userStatusRef.set(true);\n        userStatusRef.onDisconnect().remove();\n      }\n    });\n\n    return () => {\n      usersRef.off();\n      connectedRef.off();\n    };\n  }, [props.user]);\n\n  useEffect(() => {\n    statusRef.on(\"child_added\", (snap) => {\n      setConnectedUsersState((currentState) => {\n        let updatedState = [...currentState];\n        updatedState.push(snap.key);\n        return updatedState;\n      });\n    });\n\n    statusRef.on(\"child_removed\", (snap) => {\n      setConnectedUsersState((currentState) => {\n        let updatedState = [...currentState];\n\n        let index = updatedState.indexOf(snap.key);\n        updatedState.splice(index, 1);\n        return updatedState;\n      });\n    });\n\n    return () => statusRef.off();\n  }, [usersState]);\n\n  const displayUsers = () => {\n    if (usersState.length > 0) {\n      return usersState\n        .filter((user) => user.id !== props.user.uid)\n        .map((user) => {\n          return (\n            // <div\n            //   style={{\n            //     display: \"flex\",\n            //     justifyContent: \"space-around\",\n            //     marginBottom: 20,\n            //   }}\n            // >\n            //   <div>\n            //     {console.log(user, \"uuuuusre\")}\n            //     {user.name}\n            //   </div>\n            //   <div>\n            //     {/* {user.name}@SoftCommunity.com */}\n            //     {user.email}\n            //   </div>\n            //   <button\n            //     type=\"button\"\n            //     class=\"btn btn-link\"\n            //     onClick={() => {\n            //       alert(` user approved`);\n\n            //       const accountStatus = usersRef.child(user.id);\n\n            //       accountStatus.update({ status: true });\n            //       // axios.put(`http://localhost:2000/api/auth/${user._id}`, {\n            //       //   account: true,\n            //       // });\n            //     }}\n            //   >\n            //     approuve user\n            //   </button>\n            // </div>\n\n            <ul class=\"list-group\" style={{ marginLeft: 100 }}>\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                <a style={user.status === true ? { color: \"red\" } : null}>\n                  {user.email}\n                </a>\n                <span class=\"badge badge-primary badge-pill\">\n                  {user.status === false ? (\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-link\"\n                      onClick={() => {\n                        alert(` user approved`);\n\n                        const accountStatus = usersRef.child(user.id);\n\n                        accountStatus.update({ status: true });\n                        // axios.put(`http://localhost:2000/api/auth/${user._id}`, {\n                        //   account: true,\n                        // });\n                      }}\n                    >\n                      Approuve User\n                    </button>\n                  ) : (\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-white\"\n                      onClick={() => {\n                        alert(` Active User`);\n                      }}\n                    >\n                      <a style={{ color: \"red\", textDecoration: \"none\" }}>\n                        Active User\n                      </a>\n                    </button>\n                  )}\n                </span>\n              </li>\n            </ul>\n          );\n        });\n    }\n  };\n\n  return <div style={{ marginTop: 100 }}>{displayUsers()}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.currentUser,\n    channel: state.channel.currentChannel,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // selectChannel: (channel) => dispatch(setChannel(channel)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ApprouveUser);\n","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/UploadFile.js",[],"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/redux/action/auth-action.js",[],"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/home.js",["205"],"import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nexport default function Home() {\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/api/auth/all\")\n      .then((res) => console.log(res.data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <div style={{paddingTop:100}}>\n\n      <img  src=\"https://e-communautes.cnfpt.fr/sites/all/themes/cnfpt/assets/images/ecommunaute-multi-plateforme.png\" />\n    </div>\n  );\n}\n\n","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/routes/privateRoute.js",[],"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/dashboard.js",[],"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/redux/reducers/auth-reducer.js",[],"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/redux/action-types/auth-action-types.js",[],"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/EditProfile.js",["206","207","208","209","210","211","212"],"// import React, { useEffect } from \"react\";\n// import { Button, Form } from \"react-bootstrap\";\n// import { useState } from \"react\";\n// import { useHistory } from \"react-router\";\n// import axios from \"axios\";\n\n// const EditProfile = () => {\n//   const [data, setData] = useState([]);\n//   const [name, setname] = useState(\"\");\n//   const [lastName, setlastName] = useState(\"\");\n//   const [email, setemail] = useState(\"\");\n//   const history = useHistory();\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const userId = localStorage.getItem(\"id\");\n//       const result = await axios(`http://localhost:2000/api/auth/${userId}`);\n//       console.log(result.data, \"useerrr\");\n//       setData(result.data);\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <>\n//       <section id=\"cover\" class=\"min-vh-100\">\n//         <div id=\"cover-caption\" style={{ marginTop: \"100px\" }}>\n//           <div class=\"container\">\n//             <div class=\"row text-white\">\n//               <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\n//                 <div class=\"px-2\">\n//                   <Form>\n//                     <Form.Group controlId=\"formBasicEmail\">\n//                       <Form.Label className=\"itemlabel\">Name</Form.Label>\n//                       <Form.Control\n//                         className=\"itemStyle\"\n//                         type=\"name\"\n//                         placeholder={data.name}\n//                         name=\"name\"\n//                         value={name}\n//                         onChange={(e) => setname(e.target.value)}\n//                       />\n//                     </Form.Group>\n\n//                     <Form.Group controlId=\"formBasicPassword\">\n//                       <Form.Label className=\"itemlabel\">lastName</Form.Label>\n//                       <Form.Control\n//                         type=\"lastName\"\n//                         placeholder={data.lastName}\n//                         name=\"lastName\"\n//                         value={lastName}\n//                         className=\"itemStyle\"\n//                         onChange={(e) => setlastName(e.target.value)}\n//                       />\n//                     </Form.Group>\n\n//                     <Form.Group controlId=\"formBasicPassword\">\n//                       <Form.Label className=\"itemlabel\">Email</Form.Label>\n//                       <Form.Control\n//                         type=\"email\"\n//                         placeholder={data.email}\n//                         name=\"email\"\n//                         value={email}\n//                         className=\"itemStyle\"\n//                         onChange={(e) => setemail(e.target.value)}\n//                       />\n//                     </Form.Group>\n//                     <div\n//                       style={{\n//                         justifyContent: \"space-between\",\n//                         padding: \"5% 14%\",\n//                       }}\n//                     >\n//                       <Button\n//                         className=\"buttonStyle\"\n//                         variant=\"primary\"\n//                         type=\"submit\"\n//                         style={{ backgroundColor: \"#00AAEE\" }}\n//                         onClick={() =>\n//                           //  UpdateUser()\n//                           {\n//                             const editUser = { name, lastName, email };\n\n//                             console.log(editUser, \"editUser\");\n//                             const userId = localStorage.getItem(\"id\");\n//                             axios.put(\n//                               `http://localhost:2000/api/auth/${userId}`,\n//                               editUser\n//                             );\n//                             alert(\"edit user profile with success\");\n//                           }\n//                         }\n//                       >\n//                         Submit\n//                       </Button>\n//                     </div>\n//                   </Form>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </section>\n//     </>\n//   );\n// };\n\n// export default EditProfile;\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n// import firebase from \"../../server/firebase\";\nimport firebase from \"../../server/firebase\";\n// import { Button, Form } from \"react-bootstrap\";\nimport store from \"../../index\";\n// import { Nav, Navbar, Container, Button } from \"react-bootstrap\";\nimport { Menu, Icon, Modal, Button, Form, Segment } from \"semantic-ui-react\";\nconst EditProfile = (props) => {\n  const [usersState, setUsersState] = useState([]);\n  const [modalOpenState, setModalOpenState] = useState(false);\n  const [connectedUsersState, setConnectedUsersState] = useState([]);\n\n  const usersRef = firebase.database().ref(\"users\");\n\n  const connectedRef = firebase.database().ref(\".info/connected\");\n\n  const statusRef = firebase.database().ref(\"status\");\n  const [name, setname] = useState(\"\");\n  const [lastName, setlastName] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n\n  const openModal = () => {\n    setModalOpenState(true);\n  };\n\n  const closeModal = () => {\n    setModalOpenState(false);\n  };\n  useEffect(() => {\n    usersRef.on(\"child_added\", (snap) => {\n      setUsersState((currentState) => {\n        let updatedState = [...currentState];\n\n        let user = snap.val();\n        user.name = user.displayName;\n        user.email = user.email;\n        user.status = user.status;\n        user.id = snap.key;\n        user.isPrivateChat = true;\n        updatedState.push(user);\n\n        return updatedState;\n      });\n    });\n\n    connectedRef.on(\"value\", (snap) => {\n      if (props.user && snap.val()) {\n        const userStatusRef = statusRef.child(props.user.uid);\n        userStatusRef.set(true);\n        userStatusRef.onDisconnect().remove();\n      }\n    });\n\n    return () => {\n      usersRef.off();\n      connectedRef.off();\n    };\n  }, [props.user]);\n\n  useEffect(() => {\n    statusRef.on(\"child_added\", (snap) => {\n      setConnectedUsersState((currentState) => {\n        let updatedState = [...currentState];\n        updatedState.push(snap.key);\n        return updatedState;\n      });\n    });\n\n    statusRef.on(\"child_removed\", (snap) => {\n      setConnectedUsersState((currentState) => {\n        let updatedState = [...currentState];\n\n        let index = updatedState.indexOf(snap.key);\n        updatedState.splice(index, 1);\n        return updatedState;\n      });\n    });\n\n    return () => statusRef.off();\n  }, [usersState]);\n\n  const displayUser = () => {\n    if (usersState.length > 0) {\n      return usersState\n        .filter((user) => user.id === store.getState().user.currentUser.uid)\n        .map((user) => {\n          return (\n            <>\n              <Menu.Menu style={{ marginTop: \"10px\" }}>\n                <Menu.Item>\n                  <span\n                    className=\"clickable\"\n                    style={{ fontSize: 16 }}\n                    onClick={openModal}\n                  >\n                    <Icon name=\"edit\" /> EditProfile\n                  </span>\n                </Menu.Item>\n              </Menu.Menu>\n              <Modal open={modalOpenState} onClose={closeModal}>\n                <Modal.Header>EditProfile</Modal.Header>\n                <Modal.Content>\n                  <Form\n                  // onSubmit={onSubmit}\n                  >\n                    <Segment stacked>\n                      <Form.Input\n                        name=\"name\"\n                        // value={channelAddState.name}\n                        // onChange={handleInput}\n                        type=\"text\"\n                        placeholder={user.displayName}\n                        onChange={(e) => setname(e.target.value)}\n                      />\n                      <Form.Input\n                        name=\"description\"\n                        value={user.email}\n                        // onChange={handleInput}\n                        type=\"text\"\n                        // placeholder=\"Email\"\n                        // placeholder={user.email}\n                        onChange={(e) => setemail(e.target.value)}\n                        disabled={true}\n                      />\n                    </Segment>\n                  </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                  <Button\n                    // loading={isLoadingState}\n                    onClick={() => {\n                      const accountStatus = usersRef.child(user.id);\n\n                      accountStatus.update({\n                        email: email,\n                        displayName: name,\n                      });\n                    }}\n                  >\n                    <Icon name=\"checkmark\" /> Save\n                  </Button>\n                  <Button onClick={closeModal}>\n                    <Icon name=\"remove\" /> Cancel\n                  </Button>\n                </Modal.Actions>\n              </Modal>\n            </>\n          );\n        });\n    }\n  };\n\n  return <div>{displayUser()}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.currentUser,\n    channel: state.channel.currentChannel,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfile);\n","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/SharedDocument.js",["213","214","215"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ReadAndDownold from \"../ReadAndDownold\";\nconst SharedDocument = () => {\n  const [data, setData] = useState([]);\n  //   const [url, seturl] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\"http://localhost:2000/file\");\n\n      setData(result.data);\n    };\n\n    fetchData();\n  }, []);\n\n  let url;\n  const viewHandler = async (file) => {\n    console.log(file, \"file\");\n    axios({\n      url: `http://localhost:2000/pdf/${file.filename}`,\n      method: \"GET\",\n      responseType: \"blob\", // important\n    }).then((response) => {\n      url = window.URL.createObjectURL(\n        new Blob([response.data], { type: \"application/pdf\" })\n      );\n      window.open(url);\n    });\n  };\n  const download = async (file) => {\n    // console.log(\"dow\", file);\n    // axios({\n    //   url: `http://localhost:2000/pdf/${file.filename}`,\n    //   method: \"GET\",\n    //   responseType: \"blob\", // important\n    // })\n    //   .then((response) => response.blob())\n\n    //   .then((blob) => {\n    //     const url = window.URL.createObjectURL(new Blob([blob]));\n\n    //     const link = document.createElement(\"a\");\n    //     link.href = url;\n    //     link.setAttribute(\"download\", \"file.pdf\");\n    //     document.body.appendChild(link);\n    //     link.click();\n    //   });\n    const link = document.createElement(\"a\");\n    link.href = `${file.filename}.pdf`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n      {data.map((e) => (\n        <div class=\"card\" style={{ margin: 30 }}>\n          <div style={{ display: \"flex\" }}>\n            <img\n              class=\"card-img-top\"\n              style={{ width: 100, height: 100 }}\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0c/File_alt_font_awesome.svg/1024px-File_alt_font_awesome.svg.png\"\n              alt=\"Card image cap\"\n            />\n            <h5 class=\"card-title\" style={{ marginTop: 50, marginLeft: 20 }}>\n              {e.filename}\n            </h5>\n          </div>\n          <div class=\"card-body\">\n            <p class=\"card-text\">\n              Some quick example text to build on the card title and make up the\n              bulk of the card's content.\n            </p>\n\n            <button\n              type=\"button\"\n              class=\"btn btn-link\"\n              onClick={() => viewHandler(e)}\n            >\n              {\" \"}\n              View Document{\" \"}\n            </button>\n            {/* <button\n              type=\"button\"\n              class=\"btn btn-link\"\n              onClick={() => download(e.filename)}\n            >\n              download\n            </button> */}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SharedDocument;\n","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/ReadAndDownold.js",[],"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/Test.js",["216","217","218","219","220"],"// import React, { useEffect } from \"react\";\n// import { Button, Form } from \"react-bootstrap\";\n// import { useState } from \"react\";\n// import axios from \"axios\";\n\n// const Test = () => {\n//   const [data, setData] = useState([]);\n//   const [name, setname] = useState(\"\");\n//   const [lastName, setlastName] = useState(\"\");\n//   const [email, setemail] = useState(\"\");\n//   const [text, setText] = useState(\"\");\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const userId = localStorage.getItem(\"id\");\n//       const result = await axios(`http://localhost:2000/api/auth/${userId}`);\n//       console.log(result.data, \"useerrr\");\n//       setData(result.data);\n//       setname(data.name);\n//       setlastName(data.lastName);\n//       setemail(data.email);\n//     };\n\n//     fetchData();\n//   });\n\n//   return (\n//     <>\n//       <section id=\"cover\" class=\"min-vh-100\">\n//         <div id=\"cover-caption\" style={{ marginTop: \"100px\" }}>\n//           <div class=\"container\">\n//             <div class=\"row text-white\">\n//               <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\n//                 <div class=\"px-2\">\n//                   <Form>\n//                     <Form.Group controlId=\"formBasicPassword\">\n//                       <Form.Label className=\"itemlabel\">text</Form.Label>\n//                       {/* <Form.Control */}\n//                       <textarea\n//                         type=\"text\"\n//                         name=\"text\"\n//                         value={text}\n//                         className=\"itemStyle\"\n//                         onChange={(e) => setText(e.target.value)}\n//                       ></textarea>\n//                     </Form.Group>\n//                     <div\n//                       style={{\n//                         justifyContent: \"space-between\",\n//                         padding: \"5% 14%\",\n//                       }}\n//                     >\n//                       <Button\n//                         className=\"buttonStyle\"\n//                         variant=\"primary\"\n//                         type=\"submit\"\n//                         style={{ backgroundColor: \"#00AAEE\" }}\n//                         onClick={() =>\n//                           //  UpdateUser()\n//                           {\n//                             const editUser = {\n//                               name: name,\n//                               lastName: lastName,\n//                               email: email,\n//                               text,\n//                             };\n\n//                             console.log(editUser, \"editUser\");\n//                             const userId = localStorage.getItem(\"id\");\n//                             axios.put(\n//                               `http://localhost:2000/api/auth/${userId}/contact`,\n//                               editUser\n//                             );\n//                             alert(\"mesg sent with success\");\n//                           }\n//                         }\n//                       >\n//                         Submit\n//                       </Button>\n//                     </div>\n//                   </Form>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </section>\n//     </>\n//   );\n// };\n\n// export default Test;\n\nimport React, { useEffect } from \"react\";\n// import { Button, Form } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { Menu, Icon, Modal, Button, Form, Segment } from \"semantic-ui-react\";\nconst ContactSupport = () => {\n  const history = useHistory();\n  const [data, setData] = useState([]);\n  const [name, setname] = useState(\"\");\n  const [lastName, setlastName] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [modalOpenState, setModalOpenState] = useState(false);\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     const userId = localStorage.getItem(\"id\");\n  //     const result = await axios(`http://localhost:2000/api/auth/${userId}`);\n  //     console.log(result.data, \"useerrr\");\n  //     setData(result.data);\n  //     setname(data.name);\n  //     setlastName(data.lastName);\n  //     setemail(data.email);\n  //   };\n\n  //   fetchData();\n  // });\n  const openModal = () => {\n    setModalOpenState(true);\n  };\n\n  const closeModal = () => {\n    setModalOpenState(false);\n  };\n  return (\n    // <>\n    //   <section id=\"cover\" class=\"min-vh-100\">\n    //     <div id=\"cover-caption\" style={{ marginTop: \"100px\" }}>\n    //       <div class=\"container\">\n    //         <div class=\"row text-white\">\n    //           <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\n    //             <div class=\"px-2\">\n    //               <Form>\n    //                 <Form.Group controlId=\"formBasicEmail\">\n    //                   <Form.Label className=\"itemlabel\">Name</Form.Label>\n    //                   <Form.Control\n    //                     className=\"itemStyle\"\n    //                     type=\"name\"\n    //                     placeholder=\"Name\"\n    //                     name=\"name\"\n    //                     value={name}\n    //                     onChange={(e) => setname(e.target.value)}\n    //                   />\n    //                 </Form.Group>\n\n    //                 <Form.Group controlId=\"formBasicPassword\">\n    //                   <Form.Label className=\"itemlabel\">lastName</Form.Label>\n    //                   <Form.Control\n    //                     type=\"lastName\"\n    //                     placeholder=\"lastName\"\n    //                     name=\"lastName\"\n    //                     value={lastName}\n    //                     className=\"itemStyle\"\n    //                     onChange={(e) => setlastName(e.target.value)}\n    //                   />\n    //                 </Form.Group>\n\n    //                 <Form.Group controlId=\"formBasicPassword\">\n    //                   <Form.Label className=\"itemlabel\">Email</Form.Label>\n    //                   <Form.Control\n    //                     type=\"email\"\n    //                     placeholder=\"Email\"\n    //                     name=\"email\"\n    //                     value={email}\n    //                     className=\"itemStyle\"\n    //                     onChange={(e) => setemail(e.target.value)}\n    //                   />\n    //                 </Form.Group>\n    //                 <Form.Group controlId=\"formBasicPassword\">\n    //                   <Form.Label className=\"itemlabel\">text</Form.Label>\n    //                   {/* <Form.Control */}\n    //                   <textarea\n    //                     placeholder=\"Message\"\n    //                     type=\"text\"\n    //                     name=\"text\"\n    //                     value={text}\n    //                     className=\"itemStyle mt-4\"\n    //                     style={{ width: 490 }}\n    //                     onChange={(e) => setText(e.target.value)}\n    //                   ></textarea>\n    //                 </Form.Group>\n    //                 <div\n    //                   style={{\n    //                     justifyContent: \"space-between\",\n    //                     padding: \"5% 14%\",\n    //                   }}\n    //                 >\n    //                   <Button\n    //                     className=\"buttonStyle\"\n    //                     variant=\"primary\"\n    //                     type=\"submit\"\n    //                     style={{ backgroundColor: \"#00AAEE\" }}\n    //                     onClick={() =>\n    //                       //  UpdateUser()\n    //                       {\n    //                         const editUser = {\n    //                           name: name,\n    //                           lastName: lastName,\n    //                           email: email,\n    //                           text,\n    //                         };\n\n    //                         console.log(editUser, \"editUser\");\n    //                         const userId = localStorage.getItem(\"id\");\n    //                         axios.put(\n    //                           `http://localhost:2000/api/auth/${userId}/contact`,\n    //                           editUser\n    //                         );\n    //                         alert(\"mesg sent with success\");\n    //                       }\n    //                     }\n    //                   >\n    //                     Submit\n    //                   </Button>\n    //                 </div>\n    //               </Form>\n    //             </div>\n    //           </div>\n    //         </div>\n    //       </div>\n    //     </div>\n    //   </section>\n    // </>\n    <>\n      <Menu.Menu style={{ marginTop: \"10px\" }}>\n        <Menu.Item>\n          {/* <span\n            className=\"clickable\"\n            style={{ fontSize: 16 }}\n            onClick={openModal}\n          >\n            <Icon name=\"edit\" /> EditProfile\n          </span> */}\n          <span\n            className=\"clickable\"\n            style={{ fontSize: 16, color: \"#1E6FBF\" }}\n            onClick={openModal}\n          >\n            Contact Support\n          </span>\n        </Menu.Item>\n      </Menu.Menu>\n      <Modal open={modalOpenState} onClose={closeModal}>\n        <Modal.Header>Contact Support</Modal.Header>\n        <Modal.Content>\n          <Form\n          // onSubmit={onSubmit}\n          >\n            <Segment stacked>\n              <Form.Input\n                name=\"name\"\n                // value={channelAddState.name}\n                // onChange={handleInput}\n                type=\"text\"\n                value={name}\n                placeholder=\"Name\"\n                onChange={(e) => setname(e.target.value)}\n              />\n              <Form.Input\n                name=\"email\"\n                value={email}\n                // onChange={handleInput}\n                type=\"text\"\n                placeholder=\"Email\"\n                // placeholder={user.email}\n                onChange={(e) => setemail(e.target.value)}\n              />\n              <Form.Input\n                name=\"description\"\n                value={text}\n                // onChange={handleInput}\n                type=\"text\"\n                // placeholder=\"Email\"\n                // placeholder={user.email}\n                placeholder=\"Message\"\n                onChange={(e) => setText(e.target.value)}\n              />\n            </Segment>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            // loading={isLoadingState}\n            onClick={() => {\n              const editUser = {\n                name: name,\n                lastName: lastName,\n                email: email,\n                text,\n              };\n\n              console.log(editUser, \"editUser\");\n              const userId = localStorage.getItem(\"id\");\n              axios.put(\n                `http://localhost:2000/api/auth/${userId}/contact`,\n                editUser\n              );\n              // alert(\"mesg sent with success\");\n              // history.push(\"/login\");\n              setname(\"\");\n              setemail(\"\");\n              setText(\"\");\n              closeModal();\n            }}\n          >\n            <Icon name=\"checkmark\" /> Save\n          </Button>\n          <Button onClick={closeModal}>\n            <Icon name=\"remove\" /> Cancel\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    </>\n  );\n};\n\nexport default ContactSupport;\n","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/Calendar.js",[],"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/ListContact.js",["221","222","223","224","225","226"],"// import React, { useState } from \"react\";\n\n// import Search from \"../Search\";\n// import Contact from \"./Contact\";\n// const ListContact = () => {\n//   const [searchedName, setSearchedName] = useState(\"\");\n\n//   const searcheditem = (search) => {\n//     setSearchedName(search);\n//     console.log(searchedName);\n//   };\n//   return (\n//     <>\n//       <Search searcheditem={searcheditem} />\n\n//       <Contact searchedName={searchedName} />\n//     </>\n//   );\n// };\n\n// export default ListContact;\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n// import firebase from \"../../server/firebase\";\nimport firebase from \"../../server/firebase\";\nimport { Lookup, DropDownOptions } from \"devextreme-react/lookup\";\nimport List from \"devextreme-react/list\";\nfunction Item({ Picture, Prefix, FirstName, LastName }) {\n  return (\n    <div className=\"custom-item\">\n      <img src={Picture} />\n      <div>{`${FirstName} ${LastName}`}</div>\n    </div>\n  );\n}\nconst searchExpression = [\"FirstName\", \"LastName\", \"Prefix\"];\nconst ListContact = (props) => {\n  // function Item({ Picture, Prefix, FirstName, LastName }) {\n  //   // usersState\n  //   //   .filter((user) => user.id !== props.user.uid)\n  //   //   .map((user) => {\n  //   <div className=\"custom-item\">\n  //     <img src={props.user.photoURL} />\n  //     <div>{`${props.user.photoURL} ${Prefix} ${Prefix}`}</div>\n  //   </div>;\n  //   // });\n  // }\n  const [usersState, setUsersState] = useState([]);\n\n  const [connectedUsersState, setConnectedUsersState] = useState([]);\n\n  const usersRef = firebase.database().ref(\"users\");\n\n  const connectedRef = firebase.database().ref(\".info/connected\");\n\n  const statusRef = firebase.database().ref(\"status\");\n\n  useEffect(() => {\n    usersRef.on(\"child_added\", (snap) => {\n      setUsersState((currentState) => {\n        let updatedState = [...currentState];\n\n        // let user = snap.val();\n        // user.name = user.displayName;\n        // user.email = user.email;\n        // user.id = snap.key;\n        // user.isPrivateChat = true;\n        // updatedState.push(user);\n        let user = snap.val();\n        user.FirstName = user.displayName;\n        user.LastName = user.email;\n        user.id = snap.key;\n        user.Picture = user.photoURL;\n        // user.isPrivateChat = true;\n        updatedState.push(user);\n        return updatedState;\n      });\n    });\n\n    connectedRef.on(\"value\", (snap) => {\n      if (props.user && snap.val()) {\n        const userStatusRef = statusRef.child(props.user.uid);\n        userStatusRef.set(true);\n        userStatusRef.onDisconnect().remove();\n      }\n    });\n\n    return () => {\n      usersRef.off();\n      connectedRef.off();\n    };\n  }, [props.user]);\n\n  useEffect(() => {\n    statusRef.on(\"child_added\", (snap) => {\n      setConnectedUsersState((currentState) => {\n        let updatedState = [...currentState];\n        updatedState.push(snap.key);\n        return updatedState;\n      });\n    });\n\n    statusRef.on(\"child_removed\", (snap) => {\n      setConnectedUsersState((currentState) => {\n        let updatedState = [...currentState];\n\n        let index = updatedState.indexOf(snap.key);\n        updatedState.splice(index, 1);\n        return updatedState;\n      });\n    });\n\n    return () => statusRef.off();\n  }, [usersState]);\n\n  const getDisplayExpr = (item) => {\n    // return item ? `${item.FirstName} ${item.LastName}` : \"\";\n    return \"Search for employee details\";\n  };\n\n  const displayUsers = () => {\n    if (usersState.length > 0) {\n      // return usersState;\n      // .filter((user) => user.id !== props.user.uid)\n      // .map((user) => {\n      return (\n        // <div\n        //   style={{\n        //     display: \"flex\",\n        //     justifyContent: \"space-around\",\n        //     marginBottom: 20,\n        //   }}\n        // >\n        //   <div>\n        //     {console.log(user, \"uuuuusre\")}\n        //     {user.name}\n        //   </div>\n        //   <div>\n        //     {/* {user.name}@SoftCommunity.com */}\n        //     {user.email}\n        //   </div>\n        // </div>\n\n        <div className=\"dx-fieldset\">\n          <div className=\"dx-fieldset-header\">List Employee</div>\n          <div className=\"dx-field\">\n            <Lookup\n              items={usersState}\n              displayExpr={getDisplayExpr}\n              searchExpr={searchExpression}\n              valueExpr=\"ID\"\n              placeholder=\"Select employee\"\n              itemRender={Item}\n            >\n              <DropDownOptions title=\"Select employee\" />\n            </Lookup>\n          </div>\n        </div>\n      );\n      // });\n    }\n  };\n\n  // const selectUser = (user) => {\n  //   let userTemp = { ...user };\n  //   userTemp.id = generateChannelId(user.id);\n  //   setLastVisited(props.user, props.channel);\n  //   setLastVisited(props.user, userTemp);\n  //   props.selectChannel(userTemp);\n  // };\n\n  // const setLastVisited = (user, channel) => {\n  //   const lastVisited = usersRef\n  //     .child(user.uid)\n  //     .child(\"lastVisited\")\n  //     .child(channel.id);\n  //   lastVisited.set(firebase.database.ServerValue.TIMESTAMP);\n  //   lastVisited.onDisconnect().set(firebase.database.ServerValue.TIMESTAMP);\n  // };\n\n  // const generateChannelId = (userId) => {\n  //   if (props.user.uid < userId) {\n  //     return props.user.uid + userId;\n  //   } else {\n  //     return userId + props.user.uid;\n  //   }\n  // };\n\n  return <div>{displayUsers()}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.currentUser,\n    channel: state.channel.currentChannel,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // selectChannel: (channel) => dispatch(setChannel(channel)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListContact);\n\n// import React from \"react\";\n// import { Lookup, DropDownOptions } from \"devextreme-react/lookup\";\n\n// // import { employees } from \"./data.js\";\n// // import Field from \"./Field.js\";\n// // import Item from \"./Item.js\";\n\n// function Item({ Picture, Prefix, FirstName, LastName }) {\n//   return (\n//     <div className=\"custom-item\">\n//       <img src={Picture} />\n//       <div>{`${Prefix} ${FirstName} ${LastName}`}</div>\n//     </div>\n//   );\n// }\n// const searchExpression = [\"FirstName\", \"LastName\", \"Prefix\"];\nconst employees = [\n  {\n    ID: 1,\n    FirstName: \"John\",\n    LastName: \"Heart\",\n    Prefix: \"Mr.\",\n    Position: \"CEO\",\n    Picture: \"images/employees/01.png\",\n    BirthDate: \"1964/03/16\",\n    HireDate: \"1995/01/15\",\n    Notes:\n      \"John has been in the Audio/Video industry since 1990. He has led DevAv as its CEO since 2003.\\r\\n\\r\\nWhen not working hard as the CEO, John loves to golf and bowl. He once bowled a perfect game of 300.\",\n    Address: \"351 S Hill St.\",\n  },\n  {\n    ID: 2,\n    FirstName: \"Olivia\",\n    LastName: \"Peyton\",\n    Prefix: \"Mrs.\",\n    Position: \"Sales Assistant\",\n    Picture: \"images/employees/09.png\",\n    BirthDate: \"1981/06/03\",\n    HireDate: \"2012/05/14\",\n    Notes:\n      \"Olivia loves to sell. She has been selling DevAV products since 2012. \\r\\n\\r\\nOlivia was homecoming queen in high school. She is expecting her first child in 6 months. Good Luck Olivia.\",\n    Address: \"807 W Paseo Del Mar\",\n  },\n  {\n    ID: 3,\n    FirstName: \"Robert\",\n    LastName: \"Reagan\",\n    Prefix: \"Mr.\",\n    Position: \"CMO\",\n    Picture: \"images/employees/03.png\",\n    BirthDate: \"1974/09/07\",\n    HireDate: \"2002/11/08\",\n    Notes:\n      \"Robert was recently voted the CMO of the year by CMO Magazine. He is a proud member of the DevAV Management Team.\\r\\n\\r\\nRobert is a championship BBQ chef, so when you get the chance ask him for his secret recipe.\",\n    Address: \"4 Westmoreland Pl.\",\n  },\n  {\n    ID: 4,\n    FirstName: \"Greta\",\n    LastName: \"Sims\",\n    Prefix: \"Ms.\",\n    Position: \"HR Manager\",\n    Picture: \"images/employees/04.png\",\n    BirthDate: \"1977/11/22\",\n    HireDate: \"1998/04/23\",\n    Notes:\n      \"Greta has been DevAV's HR Manager since 2003. She joined DevAV from Sonee Corp.\\r\\n\\r\\nGreta is currently training for the NYC marathon. Her best marathon time is 4 hours. Go Greta.\",\n    Address: \"1700 S Grandview Dr.\",\n  },\n  {\n    ID: 5,\n    FirstName: \"Brett\",\n    LastName: \"Wade\",\n    Prefix: \"Mr.\",\n    Position: \"IT Manager\",\n    Picture: \"images/employees/05.png\",\n    BirthDate: \"1968/12/01\",\n    HireDate: \"2009/03/06\",\n    Notes:\n      \"Brett came to DevAv from Microsoft and has led our IT department since 2012.\\r\\n\\r\\nWhen he is not working hard for DevAV, he coaches Little League (he was a high school pitcher).\",\n    Address: \"1120 Old Mill Rd.\",\n  },\n  {\n    ID: 6,\n    FirstName: \"Sandra\",\n    LastName: \"Johnson\",\n    Prefix: \"Mrs.\",\n    Position: \"Controller\",\n    Picture: \"images/employees/06.png\",\n    BirthDate: \"1974/11/15\",\n    HireDate: \"2005/05/11\",\n    Notes:\n      \"Sandra is a CPA and has been our controller since 2008. She loves to interact with staff so if you've not met her, be certain to say hi.\\r\\n\\r\\nSandra has 2 daughters both of whom are accomplished gymnasts.\",\n    Address: \"4600 N Virginia Rd.\",\n  },\n  {\n    ID: 7,\n    FirstName: \"Kevin\",\n    LastName: \"Carter\",\n    Prefix: \"Mr.\",\n    Position: \"Shipping Manager\",\n    Picture: \"images/employees/07.png\",\n    BirthDate: \"1978/01/09\",\n    HireDate: \"2009/08/11\",\n    Notes:\n      \"Kevin is our hard-working shipping manager and has been helping that department work like clockwork for 18 months.\\r\\n\\r\\nWhen not in the office, he is usually on the basketball court playing pick-up games.\",\n    Address: \"424 N Main St.\",\n  },\n  {\n    ID: 8,\n    FirstName: \"Cynthia\",\n    LastName: \"Stanwick\",\n    Prefix: \"Ms.\",\n    Position: \"HR Assistant\",\n    Picture: \"images/employees/08.png\",\n    BirthDate: \"1985/06/05\",\n    HireDate: \"2008/03/24\",\n    Notes:\n      \"Cindy joined us in 2008 and has been in the HR department for 2 years. \\r\\n\\r\\nShe was recently awarded employee of the month. Way to go Cindy!\",\n    Address: \"2211 Bonita Dr.\",\n  },\n  {\n    ID: 9,\n    FirstName: \"Kent\",\n    LastName: \"Samuelson\",\n    Prefix: \"Dr.\",\n    Position: \"Ombudsman\",\n    Picture: \"images/employees/02.png\",\n    BirthDate: \"1972/09/11\",\n    HireDate: \"2009/04/22\",\n    Notes:\n      \"As our ombudsman, Kent is on the front-lines solving customer problems and helping our partners address issues out in the field.    He is a classically trained musician and is a member of the Chamber Orchestra.\",\n    Address: \"12100 Mora Dr\",\n  },\n];\n\n// class App extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//         <div className=\"dx-fieldset\">\n//           <div className=\"dx-fieldset-header\">Custom Item Template</div>\n//           <div className=\"dx-field\">\n//             <Lookup\n//               items={employees}\n//               displayExpr={this.getDisplayExpr}\n//               searchExpr={searchExpression}\n//               valueExpr=\"ID\"\n//               placeholder=\"Select employee\"\n//               itemRender={Item}\n//             >\n//               <DropDownOptions title=\"Select employee\" />\n//             </Lookup>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   getDisplayExpr(item) {\n//     return item ? `${item.FirstName} ${item.LastName}` : \"\";\n//   }\n// }\n\n// export default App;\n","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/Search.js",[],["227","228"],"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/Contact.js",["229","230"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst Contact = ({ searchedName }) => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\"http://localhost:2000/api/auth/all\");\n\n      setData(result.data);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <table className=\"table\">\n        <tbody className=\"table\">\n          {data\n            .filter(\n              (user) =>\n                user.name.toLowerCase().indexOf(searchedName) !== -1 ||\n                user.email.toLowerCase().indexOf(searchedName) !== -1\n            )\n            .map((user) => (\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-around\",\n                  alignSelf: \"stretch\",\n                }}\n              >\n                <a>{user.name}</a>\n                <a>{user.email}</a>\n              </div>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Contact;\n","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/server/firebase.js",["231"],"import firebase from \"firebase\";\n\nimport \"firebase/auth\";\nimport \"firebase/storage\";\nimport \"firebase/database\";\n\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCJU8JGt5I1Kf7p_OqDIEttsVJCwSxjOoY\",\n  authDomain: \"slack-clone-ed1a9.firebaseapp.com\",\n  databaseURL: \"https://slack-clone-ed1a9.firebaseio.com\",\n  projectId: \"slack-clone-ed1a9\",\n  storageBucket: \"slack-clone-ed1a9.appspot.com\",\n  messagingSenderId: \"475067130230\",\n  appId: \"1:475067130230:web:6975e4c90393cadc79da57\",\n  measurementId: \"G-1PY3HXZKQD\",\n};\n\n// Initialize Firebase\n// const app = initializeApp(firebaseConfig);\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\nexport default firebase;\n","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/store/actioncreator.js",[],"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/store/reducer.js",["232"],"import {\n  SET_USER,\n  SET_CHANNEL,\n  SET_FAVOURITECHANNEL,\n  REMOVE_FAVOURITECHANNEL,\n} from \"./actiontypes\";\nimport { combineReducers } from \"redux\";\nimport { authReducer } from \"../redux/reducers/auth-reducer\";\nlet defaultUserState = {\n  currentUser: null,\n};\n\nconst userReducer = (state = defaultUserState, action) => {\n  if (action.type === SET_USER) {\n    let payload = action.payload;\n    state = { ...payload };\n    return state;\n  }\n  return state;\n};\n\nlet defaultChannelState = {\n  currentChannel: null,\n  loading: true,\n};\n\nconst channelReducer = (state = defaultChannelState, action) => {\n  if (action.type === SET_CHANNEL) {\n    let payload = action.payload;\n    state = { ...payload };\n    state.loading = false;\n    return state;\n  }\n  return state;\n};\n\nlet defaultFavouriteChannelState = {\n  favouriteChannel: {},\n};\n\nconst favouriteChannelReducer = (\n  state = defaultFavouriteChannelState,\n  action\n) => {\n  if (action.type === SET_FAVOURITECHANNEL) {\n    let payload = action.payload.favouriteChannel;\n    let updatedState = { ...state.favouriteChannel };\n    updatedState[payload.channelId] = payload.channelName;\n    return { favouriteChannel: updatedState };\n  } else if (action.type === REMOVE_FAVOURITECHANNEL) {\n    let payload = action.payload.favouriteChannel;\n    let updatedState = { ...state.favouriteChannel };\n    delete updatedState[payload.channelId];\n    return { favouriteChannel: updatedState };\n  }\n  return state;\n};\n\nexport const combinedReducers = combineReducers({\n  user: userReducer,\n  channel: channelReducer,\n  favouriteChannel: favouriteChannelReducer,\n});\n// export const combinedReducers = combineReducers({\n//   user: userReducer,\n//   channel: channelReducer,\n//   favouriteChannel: favouriteChannelReducer,\n//   auth: authReducer,\n// });\n","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/AppLoader/AppLoader.component.jsx",[],"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/store/actiontypes.js",[],"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/Messages/Messages.component.jsx",["233","234"],"import React, { useEffect, useState,useRef } from 'react';\n\nimport MessageHeader from './MessageHeader/MessageHeader.component';\nimport MessageContent from \"./MessageContent/MessageContent.component\";\nimport MessageInput from \"./MessageInput/MessageInput.component\";\nimport { connect } from \"react-redux\";\nimport { setfavouriteChannel, removefavouriteChannel } from \"../../store/actioncreator\";\n// import firebase from \"../../server/firebase\";\nimport firebase  from '../../server/firebase'\nimport { Segment, Comment } from 'semantic-ui-react';\nimport \"./Messages.css\"; \n\nconst Messages = (props) => {\n\n    const messageRef = firebase.database().ref('messages');\n\n    const usersRef = firebase.database().ref('users');\n\n    const [messagesState, setMessagesState] = useState([]);\n\n    const [searchTermState, setSearchTermState] = useState(\"\");\n\n    let divRef = useRef();\n\n    useEffect(() => {\n        if (props.channel) {\n            setMessagesState([]);\n            messageRef.child(props.channel.id).on('child_added', (snap) => {\n                setMessagesState((currentState) => {\n                    let updatedState = [...currentState];\n                    updatedState.push(snap.val());\n                    return updatedState;\n                })\n            })\n\n            return () => messageRef.child(props.channel.id).off();\n        }\n    }, [props.channel])\n\n    useEffect(() => {\n\n        if (props.user) {\n            usersRef.child(props.user.uid).child(\"favourite\")\n                .on('child_added', (snap) => {\n                    props.setfavouriteChannel(snap.val());\n                })\n\n            usersRef.child(props.user.uid).child(\"favourite\")\n                .on('child_removed', (snap) => {\n                    props.removefavouriteChannel(snap.val());\n                })\n\n            return () => usersRef.child(props.user.uid).child(\"favourite\").off();\n        }\n    }, [props.user])\n\n    useEffect(()=> {\n        divRef.scrollIntoView({behavior : 'smooth'});\n    },[messagesState])\n\n    const displayMessages = () => {\n        let messagesToDisplay = searchTermState ? filterMessageBySearchTerm() : messagesState;\n        if (messagesToDisplay.length > 0) {\n            return messagesToDisplay.map((message) => {\n                return <MessageContent imageLoaded={imageLoaded} ownMessage={message.user.id === props.user.uid} key={message.timestamp} message={message} />\n            })\n        }\n    }\n\n    const imageLoaded= () => {\n        divRef.scrollIntoView({behavior : 'smooth'});\n    }\n\n    const uniqueusersCount = () => {\n        const uniqueUsers = messagesState.reduce((acc, message) => {\n            if (!acc.includes(message.user.name)) {\n                acc.push(message.user.name);\n            }\n            return acc;\n        }, []);\n\n        return uniqueUsers.length;\n    }\n\n    const searchTermChange = (e) => {\n        const target = e.target;\n        setSearchTermState(target.value);\n    }\n\n    const filterMessageBySearchTerm = () => {\n        const regex = new RegExp(searchTermState, \"gi\");\n        const messages = messagesState.reduce((acc, message) => {\n            if ((message.content && message.content.match(regex)) || message.user.name.match(regex)) {\n                acc.push(message);\n            }\n            return acc;\n        }, []);\n\n        return messages;\n    }\n\n    const starChange = () => {\n        let favouriteRef = usersRef.child(props.user.uid).child(\"favourite\").child(props.channel.id);\n        if (isStarred()) {\n            favouriteRef.remove();\n        } else {\n            favouriteRef.set({ channelId: props.channel.id, channelName: props.channel.name })\n        }\n    }\n\n    const isStarred = () => {\n        return Object.keys(props.favouriteChannels).includes(props.channel?.id);\n    }\n\n    return <div className=\"messages\"><MessageHeader starChange={starChange} starred={isStarred()} isPrivateChat={props.channel?.isPrivateChat} searchTermChange={searchTermChange} channelName={props.channel?.name} uniqueUsers={uniqueusersCount()} />\n        <Segment className=\"messagecontent\">\n            <Comment.Group>\n                {displayMessages()}\n                <div ref={currentEl => divRef = currentEl}></div>\n            </Comment.Group>\n        </Segment>\n        <MessageInput /></div>\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        channel: state.channel.currentChannel,\n        user: state.user.currentUser,\n        favouriteChannels: state.favouriteChannel.favouriteChannel\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setfavouriteChannel: (channel) => dispatch(setfavouriteChannel(channel)),\n        removefavouriteChannel: (channel) => dispatch(removefavouriteChannel(channel)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Messages);","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/SideBar/SideBar.component.jsx",["235","236","237","238","239","240","241","242"],"// import React from 'react';\n// import { Menu } from 'semantic-ui-react';\n// import UserInfo from \"./UserInfo/UserInfo.component\";\n// import Channels from \"./Channels/Channels.component\";\n// import PrivateChat from \"./PrivateChat/PrivateChat.component\";\n// import FavouriteChannels from \"./FavouriteChannels/FavouriteChannels.component\";\n// import { Link, useHistory } from \"react-router-dom\";\n// // import { Nav, Navbar, Container, Button } from \"react-bootstrap\";\n// import \"./SideBar.css\";\n\n// export const SideBar = () => {\n//     return (<Menu vertical fixed=\"left\" borderless size=\"large\" className=\"side_bar\">\n//         <UserInfo />\n//         <FavouriteChannels />\n//         <Channels /> \n//         <PrivateChat />\n//   <div style={{display:\"flex\", flexDirection:\"column\"}}>\n//         <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/calendar\"\n//               >\n//                Calendar\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/listcontact\"\n//               >\n//                 List Contact\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/upload\"\n//               >\n//                 Upload\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/shared\"\n//               >\n//                 Shared Document\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/edit\"\n//               >\n//                 Edit Profile\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/ApprouveUser\"\n//               >\n//                 ApprouveUser\n//               </Link>\n//    </div>\n//     </Menu>\n//     )\n// }\n\n\n\n\n\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n// import firebase from \"../../server/firebase\";\nimport firebase from \"../../server/firebase\";\n\nimport {Menu, Icon, } from 'semantic-ui-react'\nimport UserInfo from \"./UserInfo/UserInfo.component\";\nimport Channels from \"./Channels/Channels.component\";\nimport PrivateChat from \"./PrivateChat/PrivateChat.component\";\nimport FavouriteChannels from \"./FavouriteChannels/FavouriteChannels.component\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport store from '../../index'\n\nimport \"./SideBar.css\";\nimport EditProfile from \"../views/EditProfile\";\n\nexport const SideBar = (props) => {\n  const [usersState, setUsersState] = useState([]);\n\n  const [connectedUsersState, setConnectedUsersState] = useState([]);\n\n  const usersRef = firebase.database().ref(\"users\");\n\n  const connectedRef = firebase.database().ref(\".info/connected\");\n\n  const statusRef = firebase.database().ref(\"status\");\n\n  useEffect(() => {\n    usersRef.on(\"child_added\", (snap) => {\n      setUsersState((currentState) => {\n        let updatedState = [...currentState];\n\n        let user = snap.val();\n        user.name = user.displayName;\n        user.email = user.email;\n        user.status = user.status;\n        user.id = snap.key;\n        user.isPrivateChat = true;\n        updatedState.push(user);\n\n        return updatedState;\n      });\n    });\n\n    connectedRef.on(\"value\", (snap) => {\n      if (props.user && snap.val()) {\n        const userStatusRef = statusRef.child(props.user.uid);\n        userStatusRef.set(true);\n        userStatusRef.onDisconnect().remove();\n      }\n    });\n\n    return () => {\n      usersRef.off();\n      connectedRef.off();\n    };\n  }, [props.user]);\n\n  useEffect(() => {\n    statusRef.on(\"child_added\", (snap) => {\n      setConnectedUsersState((currentState) => {\n        let updatedState = [...currentState];\n        updatedState.push(snap.key);\n        return updatedState;\n      });\n    });\n\n    statusRef.on(\"child_removed\", (snap) => {\n      setConnectedUsersState((currentState) => {\n        let updatedState = [...currentState];\n\n        let index = updatedState.indexOf(snap.key);\n        updatedState.splice(index, 1);\n        return updatedState;\n      });\n    });\n\n    return () => statusRef.off();\n  }, [usersState]);\n\n  const displayUser = () => {\n    if (usersState.length > 0) {\n      return usersState\n        .filter((user) => user.id === store.getState().user.currentUser.uid)\n        .map((user) => {\n          return (\n            user.status === false ?\n\n            <Menu vertical fixed=\"left\" borderless size=\"large\" className=\"side_bar\">\n               \n            <UserInfo />\n            </Menu>\n\n: \n\n    (   <Menu vertical fixed=\"left\" borderless size=\"large\" className=\"side_bar\">\n               \n        <UserInfo />\n        {/* <FavouriteChannels /> */}\n\n\n\n\n       {/* <Channels />  */}\n        <PrivateChat />\n        <EditProfile />\n        {console.log(user.status,\"ppppp\")}\n  <div style={{display:\"flex\", flexDirection:\"column\"}}>\n  <Menu.Item style={{ fontSize: '17px' }}>\n             <Link\n                style={{ color: \"#B4B4B9\", textDecoration: \"none\" }}\n                to=\"/calendar\"\n              >\n               <Icon name=\"calendar\" />   Calendar\n              </Link>\n    \n        </Menu.Item>\n        <Menu.Item style={{ fontSize: '17px' }}>\n             <Link\n                style={{ color: \"#B4B4B9\", textDecoration: \"none\" }}\n                to=\"/listcontact\"\n              >\n               <Icon name=\"list\" />    List Contact\n              </Link>\n    \n        </Menu.Item>\n        <Menu.Item style={{ fontSize: '17px' }}>\n             <Link\n                style={{ color: \"#B4B4B9\", textDecoration: \"none\" }}\n                to=\"/upload\"\n              >\n               <Icon name=\"upload\" />      Upload\n              </Link>\n    \n        </Menu.Item>\n        <Menu.Item style={{ fontSize: '17px' }}>\n             <Link\n                style={{ color: \"#B4B4B9\", textDecoration: \"none\" }}\n                to=\"/shared\"\n              >\n               <Icon name=\"share\" />          Shared Document\n              </Link>\n    \n        </Menu.Item>\n   \n        {/* <Menu.Item style={{ fontSize: '17px' }}>\n             <Link\n                style={{ color: \"#B4B4B9\", textDecoration: \"none\" }}\n                to=\"/edit\"\n              >\n               <Icon name=\"edit\" />           Edit Profile\n              </Link>\n    \n        </Menu.Item> */}\n   \n\n        { user.account === \"admin\" && \n           <Menu.Item style={{ fontSize: '17px' }}>\n           <Link\n              style={{ color: \"#B4B4B9\", textDecoration: \"none\" }}\n              to=\"/ApprouveUser\"\n            >\n             <Icon name=\"edit\" />          ApprouveUser\n            </Link>\n  \n      </Menu.Item>\n              } \n\n\n\n        {/* <Link\n                style={{ color: \"white\", textDecoration: \"none\" }}\n                to=\"/calendar\"\n              >\n               Calendar\n              </Link>\n              <Link\n                style={{ color: \"white\", textDecoration: \"none\" }}\n                to=\"/listcontact\"\n              >\n                List Contact\n              </Link>\n              <Link\n                style={{ color: \"white\", textDecoration: \"none\" }}\n                to=\"/upload\"\n              >\n                Upload\n              </Link>\n              <Link\n                style={{ color: \"white\", textDecoration: \"none\" }}\n                to=\"/shared\"\n              >\n                Shared Document\n              </Link>\n              <Link\n                style={{ color: \"white\", textDecoration: \"none\" }}\n                to=\"/edit\"\n              >\n                Edit Profile\n              </Link>\n\n             { user.account === \"admin\" && <Link\n                style={{ color: \"white\", textDecoration: \"none\" }}\n                to=\"/ApprouveUser\"\n              >\n                ApprouveUser\n              </Link>\n              } */}\n\n              <div>{console.log(store.getState().user.currentUser,'sttoore')}</div>\n   </div>\n    </Menu>)\n          );\n        });\n    }\n  };\n\n  return <div>{displayUser()}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.currentUser,\n    channel: state.channel.currentChannel,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // selectChannel: (channel) => dispatch(setChannel(channel)),\n  };\n};\n\nconnect(mapStateToProps, mapDispatchToProps)(SideBar);\n","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/SideBar/Channels/Channels.component.jsx",["243","244","245"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from \"../../../server/firebase\";\nimport { setChannel } from \"../../../store/actioncreator\"\nimport { Notification } from \"../Notification/Notification.component\";\nimport { Link} from \"react-router-dom\";\nimport './Channels.css';\nimport { Menu, Icon, Modal, Button, Form, Segment } from 'semantic-ui-react';\n\nconst Channels = (props) => {\n    const [modalOpenState, setModalOpenState] = useState(false);\n    const [channelAddState, setChannelAddState] = useState({ name: '', description: '' });\n    const [isLoadingState, setLoadingState] = useState(false);\n    const [channelsState, setChannelsState] = useState([]);\n\n    const channelsRef = firebase.database().ref(\"channels\");\n    const usersRef = firebase.database().ref(\"users\");\n\n    useEffect(() => {\n        channelsRef.on('child_added', (snap) => {\n            setChannelsState((currentState) => {\n                let updatedState = [...currentState];\n                updatedState.push(snap.val());               \n                return updatedState;\n            })\n        });\n\n        return () => channelsRef.off();\n    }, [])\n\n    useEffect(()=> {\n        if (channelsState.length > 0) {\n            props.selectChannel(channelsState[0])\n        }\n    },[!props.channel ?channelsState : null ])\n\n    const openModal = () => {\n        setModalOpenState(true);\n    }\n\n    const closeModal = () => {\n        setModalOpenState(false);\n    }\n\n    const checkIfFormValid = () => {\n        return channelAddState && channelAddState.name && channelAddState.description;\n    }\n\n    const displayChannels = () => {\n        if (channelsState.length > 0) {\n            return channelsState.map((channel) => {\n                return <Menu.Item\n                    key={channel.id}\n                    name={channel.name}\n                    onClick={() => selectChannel(channel)}\n                    active={props.channel && channel.id === props.channel.id && !props.channel.isFavourite}\n                >\n                                  <Link\n                style={{ color: \"#B4B4B9\", textDecoration: \"none\" }}\n                to=\"/message\"\n              >\n                      <Notification user={props.user} channel={props.channel}\n                        notificationChannelId={channel.id}\n                        displayName= {\"# \" + channel.name} />\n                   </Link>\n                </Menu.Item>\n            })\n        }\n    }\n\n    const selectChannel = (channel) => {\n        setLastVisited(props.user,props.channel);\n        setLastVisited(props.user,channel);\n        props.selectChannel(channel);\n    }\n\n    const setLastVisited = (user, channel) => {\n        const lastVisited = usersRef.child(user.uid).child(\"lastVisited\").child(channel.id);\n        lastVisited.set(firebase.database.ServerValue.TIMESTAMP);\n        lastVisited.onDisconnect().set(firebase.database.ServerValue.TIMESTAMP);\n    }\n\n    const onSubmit = () => {\n\n        if (!checkIfFormValid()) {\n            return;\n        }\n\n        const key = channelsRef.push().key;\n\n        const channel = {\n            id: key,\n            name: channelAddState.name,\n            description: channelAddState.description,\n            created_by: {\n                name: props.user.displayName,\n                avatar: props.user.photoURL\n            }\n        }\n        setLoadingState(true);\n        channelsRef.child(key)\n            .update(channel)\n            .then(() => {\n                setChannelAddState({ name: '', description: '' });\n                setLoadingState(false);\n                closeModal();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    const handleInput = (e) => {\n\n        let target = e.target;\n        setChannelAddState((currentState) => {\n            let updatedState = { ...currentState };\n            updatedState[target.name] = target.value;\n            return updatedState;\n        })\n    }\n\n    return <> <Menu.Menu style={{ marginTop: '35px' }}>\n        <Menu.Item style={{fontSize : '17px'}}>\n            <span>\n                <Icon name=\"exchange\" /> Channels\n            </span>\n            ({channelsState.length})\n        </Menu.Item>\n        {displayChannels()}\n        <Menu.Item>\n            <span className=\"clickable\" onClick={openModal} >\n                <Icon name=\"add\" /> ADD\n            </span>\n        </Menu.Item>\n    </Menu.Menu>\n\n        <Modal open={modalOpenState} onClose={closeModal}>\n            <Modal.Header>\n                Create Channel\n            </Modal.Header>\n            <Modal.Content>\n                <Form onSubmit={onSubmit}>\n                    <Segment stacked>\n                        <Form.Input\n                            name=\"name\"\n                            value={channelAddState.name}\n                            onChange={handleInput}\n                            type=\"text\"\n                            placeholder=\"Enter Channel Name\"\n                        />\n                        <Form.Input\n                            name=\"description\"\n                            value={channelAddState.description}\n                            onChange={handleInput}\n                            type=\"text\"\n                            placeholder=\"Enter Channel Description\"\n                        />\n                    </Segment>\n                </Form>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button loading={isLoadingState} onClick={onSubmit}>\n                    <Icon name=\"checkmark\" /> Save\n                </Button>\n                <Button onClick={closeModal}>\n                    <Icon name=\"remove\" /> Cancel\n                </Button>\n            </Modal.Actions>\n        </Modal>\n\n    </>\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user.currentUser,\n        channel: state.channel.currentChannel\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        selectChannel: (channel) => dispatch(setChannel(channel))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Channels);","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/SideBar/UserInfo/UserInfo.component.jsx",["246"],"import React from 'react';\nimport { Grid, Header, Icon, Image, Dropdown } from 'semantic-ui-react';\nimport { connect } from \"react-redux\";\nimport firebase from '../../../server/firebase';\nimport { useHistory } from \"react-router\";\nimport \"./UserInfo.css\";\n\nconst UserInfo = (props) => {\n    const history = useHistory();\n\n    const getDropDownOptions = () => {\n        return [{\n            key: 'signout',\n            text: <span onClick={signOut} >Sign Out</span>\n        }]\n    }\n\n    const signOut = () => {\n        history.push(\"/login\")\n        firebase.auth()\n            .signOut()\n            .then(() => console.log(\"user signed out\"))\n\n    }\n\n    if (props.user) {\n        return (<Grid>\n            <Grid.Column>\n                <Grid.Row className=\"userinfo_grid_row\">\n                    <Header inverted as=\"h2\">\n                   \n                   \n                        <Header.Content>Soft Community</Header.Content>\n                    </Header>\n                    <Header className=\"userinfo_displayname\" inverted as=\"h4\">\n                        <Dropdown\n                            trigger={\n                                <span>\n                                    <Image src={props.user.photoURL} avatar></Image>\n                                    {props.user.displayName}\n                                </span>\n                            }\n                            options={getDropDownOptions()}\n                        >\n                        </Dropdown>\n\n                    </Header>\n                </Grid.Row>\n            </Grid.Column>\n        </Grid>)\n    }\n    return null;\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user.currentUser\n    }\n}\n\nexport default connect(mapStateToProps)(UserInfo);","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/SideBar/PrivateChat/PrivateChat.component.jsx",["247","248"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from \"../../../server/firebase\";\nimport { setChannel } from \"../../../store/actioncreator\"\nimport { Notification } from \"../Notification/Notification.component\";\n\nimport { Menu, Icon } from 'semantic-ui-react';\nimport { Link} from \"react-router-dom\";\nconst PrivateChat = (props) => {\n\n    const [usersState, setUsersState] = useState([]);\n\n    const [connectedUsersState, setConnectedUsersState] = useState([]);\n\n    const usersRef = firebase.database().ref(\"users\");\n\n    const connectedRef = firebase.database().ref(\".info/connected\");\n\n    const statusRef = firebase.database().ref(\"status\");\n\n    useEffect(() => {\n        usersRef.on('child_added', (snap) => {\n            setUsersState((currentState) => {\n                let updatedState = [...currentState];\n\n                let user = snap.val();\n                user.name = user.displayName;\n                user.id = snap.key;\n                user.isPrivateChat = true;\n                updatedState.push(user);\n\n                return updatedState;\n            })\n        });\n\n        connectedRef.on(\"value\", snap => {\n            if (props.user && snap.val()) {\n                const userStatusRef = statusRef.child(props.user.uid);\n                userStatusRef.set(true);\n                userStatusRef.onDisconnect().remove();\n            }\n        })\n\n        return () => { usersRef.off(); connectedRef.off(); }\n    }, [props.user])\n\n    useEffect(() => {\n\n        statusRef.on(\"child_added\", snap => {\n            setConnectedUsersState((currentState) => {\n                let updatedState = [...currentState];\n                updatedState.push(snap.key);\n                return updatedState;\n            })\n        });\n\n        statusRef.on(\"child_removed\", snap => {\n            setConnectedUsersState((currentState) => {\n                let updatedState = [...currentState];\n\n                let index = updatedState.indexOf(snap.key);\n                updatedState.splice(index, 1);\n                return updatedState;\n            })\n        });\n\n        return () => statusRef.off();\n    }, [usersState]);\n\n    const displayUsers = () => {\n        if (usersState.length > 0) {\n            return usersState.filter((user) => user.id !== props.user.uid).map((user) => {\n                return <Menu.Item\n                    key={user.id}\n                    name={user.name}\n                    onClick={() => selectUser(user)}\n                    active={props.channel && generateChannelId(user.id) === props.channel.id}\n                >\n                    <Icon name=\"circle\" color={`${connectedUsersState.indexOf(user.id) !== -1 ? \"green\" : \"red\"}`} />\n\n\n                          <Link\n                style={{ color: \"#B4B4B9\", textDecoration: \"none\" }}\n                to=\"/message\"\n              >\n               <Notification user={props.user} channel={props.channel}\n                        notificationChannelId={generateChannelId(user.id)}\n                        displayName={\"@ \" + user.name} />\n              </Link>\n                        \n                </Menu.Item>\n            })\n        }\n    }\n\n    const selectUser = (user) => {\n        let userTemp = { ...user };\n        userTemp.id = generateChannelId(user.id);\n        // setLastVisited(props.user, props.channel);\n        // setLastVisited(props.user, userTemp);\n        props.selectChannel(userTemp);\n    }\n\n    // const setLastVisited = (user, channel) => {\n    //     const lastVisited = usersRef.child(user.uid).child(\"lastVisited\").child(channel.id);\n    //     lastVisited.set(firebase.database.ServerValue.TIMESTAMP);\n    //     lastVisited.onDisconnect().set(firebase.database.ServerValue.TIMESTAMP);\n    // }\n\n    const generateChannelId = (userId) => {\n        if (props.user.uid < userId) {\n            return props.user.uid + userId;\n        }\n        else {\n            return userId + props.user.uid;\n        }\n    }\n\n    return <Menu.Menu style={{ marginTop: '35px' }}>\n        <Menu.Item style={{ fontSize: '17px' }}>\n            <span>\n                <Icon name=\"mail\" /> Chat\n            </span>\n            ({usersState.length - 1})\n        </Menu.Item>\n        {displayUsers()}\n    </Menu.Menu>\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user.currentUser,\n        channel: state.channel.currentChannel\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        selectChannel: (channel) => dispatch(setChannel(channel))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivateChat);","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/SideBar/FavouriteChannels/FavouriteChannels.component.jsx",[],"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/Messages/MessageHeader/MessageHeader.component.jsx",[],"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/Messages/MessageContent/MessageContent.component.jsx",[],"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/Messages/MessageInput/MessageInput.component.jsx",[],"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/SideBar/Notification/Notification.component.jsx",["249","250"],"import React, { useState, useEffect } from 'react';\nimport { Label } from 'semantic-ui-react';\n\nimport firebase from \"../../../server/firebase\";\n\nexport const Notification = (props) => {\n\n    const messagesRef = firebase.database().ref(\"messages\");\n\n    const usersRef = firebase.database().ref(\"users\");\n\n    const [channelsVisitedState, setChannelsVisitedState] = useState({});\n\n\n    const [messagesTimeStampState, setMessagesTimeStampState] = useState({});\n\n\n    useEffect(() => {\n\n        if (props.user) {\n            usersRef.child(props.user.uid).child('lastVisited').on('value', snap => {\n                setChannelsVisitedState(snap.val());\n            })\n\n            messagesRef.on('value', snap => {\n                let messages = snap.val();\n                if (window.UndefinedVariable) {\n                let channelsId = Object.keys(messages);\n                // let channelsId =  Object.keys(null)\n                \n                let messagesTimeStamp = {};\n                channelsId.forEach((channelId) => {\n                    let channelMessageKeys = Object.keys(messages[channelId]);\n                    channelMessageKeys.reduce((agg, item) => {\n                        messagesTimeStamp[channelId] = [...messagesTimeStamp[channelId] || []];\n                        messagesTimeStamp[channelId].push(messages[channelId][item].timestamp);\n                    })\n                })\n            \n                setMessagesTimeStampState(messagesTimeStamp);\n            }\n            })\n            \n        }\n    }, [props.user]);\n\n    const calculateNotificationCount = (channelId) => {\n\n        if (channelsVisitedState && messagesTimeStampState && props.channel && props.channel.id !== channelId) {\n\n            let lastVisited = channelsVisitedState[channelId];\n\n            let channelMessagesTimeStamp = messagesTimeStampState[channelId];\n\n            if (channelMessagesTimeStamp) {\n                let notificationCount = channelMessagesTimeStamp.filter(timestamp => !lastVisited || lastVisited < timestamp).length;\n                return notificationCount === 0 ? null : <Label color=\"red\">{notificationCount}</Label>\n            }\n        }\n\n        return null;\n    }\n\n    return <> {props.displayName}{calculateNotificationCount(props.notificationChannelId)} </>;\n\n}","/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/Messages/ImageUpload/ImageUpload.component.jsx",[],"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/serviceWorker.js",[],"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/Auth /Login/Login.component.jsx",[],"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/Auth /Register/Register.component.jsx",["251","252"],"\nimport React, { useState } from 'react';\nimport { Grid, Form, Segment, Header, Icon, Button, Message } from 'semantic-ui-react'\nimport firebase from '../../../server/firebase';\nimport axios from \"axios\";\nimport \"../Auth.css\"\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from \"react-redux\";\n// import { registerHandler } from \"../../redux/action/auth-action\";\nconst Register = () => {\n    // const dispatch = useDispatch();\n    let user = {\n        userName: '',\n        email: '',\n        password: '',\n        confirmpassword: ''\n    }\n\n    let errors = [];\n\n    let userCollectionRef = firebase.database().ref('users');\n\n    const [userState, setuserState] = useState(user);\n    const [errorState, seterrorState] = useState(errors);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isSuccess, setIsSuccess] = useState(false);\n\n    const handleInput = (event) => {\n        let target = event.target;\n        setuserState((currentState) => {\n            let currentuser = { ...currentState };\n            currentuser[target.name] = target.value;\n            return currentuser;\n        })\n    }\n\n    const checkForm = () => {\n        if (isFormEmpty()) {\n            seterrorState((error) => error.concat({ message: \"Please fill in all fields\" }));\n            return false;\n        }\n        else if (!checkPassword()) {\n            return false;\n        }\n        return true;\n    }\n\n    const isFormEmpty = () => {\n        return !userState.userName.length ||\n            !userState.password.length ||\n            !userState.confirmpassword.length ||\n            !userState.email.length;\n    }\n\n    const checkPassword = () => {\n        if (userState.password.length < 8) {\n            seterrorState((error) => error.concat({ message: \"Password length should be greater than 8\" }));\n            return false;\n        }\n        else if (userState.password !== userState.confirmpassword) {\n            seterrorState((error) => error.concat({ message: \"Password and Confirm Password does not match\" }));\n            return false;\n        }\n        return true;\n    }\n\n    const onSubmit = (event) => {\n       \n    \n        seterrorState(() => []);\n        setIsSuccess(false);\n        if (checkForm()) {\n            setIsLoading(true);\n            firebase.auth()\n                .createUserWithEmailAndPassword(userState.email, userState.password)\n                .then(createdUser => {\n                    setIsLoading(false);\n                    updateuserDetails(createdUser);\n\n                })\n                // .then(res=>axios.post(\"http://localhost:2000/register\", {email:userState.email, password:userState.password}))\n                .catch(serverError => {\n                    setIsLoading(false);\n                    seterrorState((error) => error.concat(serverError));\n                })\n\n        }\n        // const newUser = { name:userState.userName, lastName, email:userState.email, password:userState.password, status: true, account:\"admin\" };\n        // dispatch(registerHandler(newUser));\n        // axios.post(\"http://localhost:2000/register\", {email:userState.email, password:userState.password})\n    }\n\n    const updateuserDetails = (createdUser) => {\n        if (createdUser) {\n            \n            setIsLoading(true);\n            createdUser.user\n                .updateProfile({\n                    displayName: userState.userName,\n                    photoURL: `http://gravatar.com/avatar/${createdUser.user.uid}?d=identicon`,\n                    email:userState.email,\n                    status:false,\n                    account:\"user\"\n                })\n                .then(() => {\n                    setIsLoading(false);\n                    saveUserInDB(createdUser);\n                })\n                .catch((serverError) => {\n                    setIsLoading(false);\n                    seterrorState((error) => error.concat(serverError));\n                })\n\n                // axios.post(\"http://localhost:2000/register\", {email:userState.email, password:userState.password})\n        }\n    }\n\n    const saveUserInDB = (createdUser) => {\n        setIsLoading(true);\n        userCollectionRef.child(createdUser.user.uid).set({\n            displayName: createdUser.user.displayName,\n            photoURL: createdUser.user.photoURL,\n            email:createdUser.user.email,\n            status:false,\n            account:\"user\"\n\n\n        })\n            .then(() => {\n                setIsLoading(false);\n                setIsSuccess(true);\n            })\n            .catch(serverError => {\n                setIsLoading(false);\n                seterrorState((error) => error.concat(serverError));\n            })\n          \n    }\n\n    const formaterrors = () => {\n        return errorState.map((error, index) => <p key={index}>{error.message}</p>)\n    }\n\n    return (<Grid verticalAlign=\"middle\" textAlign=\"center\" className=\"grid-form\" >\n        <Grid.Column style={{ maxWidth: '500px' }}>\n            <Header icon as=\"h2\">\n                <Icon name=\"sign-in\" />\n                Register\n            </Header>\n            <Form onSubmit={onSubmit}>\n                <Segment stacked>\n                    <Form.Input\n                        name=\"userName\"\n                        value={userState.userName}\n                        icon=\"user\"\n                        iconPosition=\"left\"\n                        onChange={handleInput}\n                        type=\"text\"\n                        placeholder=\"User Name\"\n                    />\n                    <Form.Input\n                        name=\"email\"\n                        value={userState.email}\n                        icon=\"mail\"\n                        iconPosition=\"left\"\n                        onChange={handleInput}\n                        type=\"email\"\n                        placeholder=\"User Email\"\n                    />\n                    <Form.Input\n                        name=\"password\"\n                        value={userState.password}\n                        icon=\"lock\"\n                        iconPosition=\"left\"\n                        onChange={handleInput}\n                        type=\"password\"\n                        placeholder=\"User Password\"\n                    />\n                    <Form.Input\n                        name=\"confirmpassword\"\n                        value={userState.confirmpassword}\n                        icon=\"lock\"\n                        iconPosition=\"left\"\n                        onChange={handleInput}\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                    />\n                </Segment>\n                <Button disabled={isLoading} loading={isLoading}>Submit</Button>\n            </Form>\n            {errorState.length > 0 && <Message error>\n                <h3>Errors</h3>\n                {formaterrors()}\n            </Message>\n            }\n            {isSuccess && <Message success>\n                <h3>Successfully Registered</h3>\n            </Message>\n            }\n            <Message>\n                Already an User? <Link to=\"/login\" >Login </Link>\n            </Message>\n        </Grid.Column>\n    </Grid>)\n}\n\nexport default Register;",{"ruleId":"253","severity":1,"message":"254","line":43,"column":10,"nodeType":"255","messageId":"256","endLine":43,"endColumn":19},{"ruleId":"257","severity":1,"message":"258","line":60,"column":6,"nodeType":"259","endLine":60,"endColumn":8,"suggestions":"260"},{"ruleId":"253","severity":1,"message":"261","line":55,"column":8,"nodeType":"255","messageId":"256","endLine":55,"endColumn":20},{"ruleId":"253","severity":1,"message":"262","line":57,"column":27,"nodeType":"255","messageId":"256","endLine":57,"endColumn":33},{"ruleId":"253","severity":1,"message":"263","line":57,"column":42,"nodeType":"255","messageId":"256","endLine":57,"endColumn":50},{"ruleId":"253","severity":1,"message":"264","line":58,"column":8,"nodeType":"255","messageId":"256","endLine":58,"endColumn":14},{"ruleId":"253","severity":1,"message":"265","line":59,"column":8,"nodeType":"255","messageId":"256","endLine":59,"endColumn":12},{"ruleId":"253","severity":1,"message":"266","line":60,"column":8,"nodeType":"255","messageId":"256","endLine":60,"endColumn":17},{"ruleId":"253","severity":1,"message":"267","line":61,"column":10,"nodeType":"255","messageId":"256","endLine":61,"endColumn":19},{"ruleId":"253","severity":1,"message":"268","line":62,"column":10,"nodeType":"255","messageId":"256","endLine":62,"endColumn":21},{"ruleId":"253","severity":1,"message":"269","line":62,"column":23,"nodeType":"255","messageId":"256","endLine":62,"endColumn":34},{"ruleId":"253","severity":1,"message":"270","line":63,"column":10,"nodeType":"255","messageId":"256","endLine":63,"endColumn":21},{"ruleId":"253","severity":1,"message":"271","line":66,"column":8,"nodeType":"255","messageId":"256","endLine":66,"endColumn":19},{"ruleId":"253","severity":1,"message":"272","line":69,"column":8,"nodeType":"255","messageId":"256","endLine":69,"endColumn":12},{"ruleId":"273","severity":1,"message":"274","line":98,"column":11,"nodeType":"275","endLine":101,"endColumn":13},{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","replacedBy":"279"},{"ruleId":"276","replacedBy":"280"},{"ruleId":"278","replacedBy":"281"},{"ruleId":"253","severity":1,"message":"282","line":68,"column":10,"nodeType":"255","messageId":"256","endLine":68,"endColumn":29},{"ruleId":"283","severity":1,"message":"284","line":83,"column":22,"nodeType":"285","messageId":"286","endLine":83,"endColumn":32},{"ruleId":"283","severity":1,"message":"287","line":84,"column":23,"nodeType":"285","messageId":"286","endLine":84,"endColumn":34},{"ruleId":"257","severity":1,"message":"288","line":105,"column":6,"nodeType":"259","endLine":105,"endColumn":18,"suggestions":"289"},{"ruleId":"257","severity":1,"message":"290","line":127,"column":6,"nodeType":"259","endLine":127,"endColumn":18,"suggestions":"291"},{"ruleId":"292","severity":1,"message":"293","line":170,"column":17,"nodeType":"275","endLine":170,"endColumn":75},{"ruleId":"292","severity":1,"message":"293","line":199,"column":23,"nodeType":"275","endLine":199,"endColumn":75},{"ruleId":"273","severity":1,"message":"274","line":14,"column":7,"nodeType":"275","endLine":14,"endColumn":122},{"ruleId":"253","severity":1,"message":"282","line":121,"column":10,"nodeType":"255","messageId":"256","endLine":121,"endColumn":29},{"ruleId":"253","severity":1,"message":"294","line":129,"column":10,"nodeType":"255","messageId":"256","endLine":129,"endColumn":18},{"ruleId":"253","severity":1,"message":"295","line":129,"column":20,"nodeType":"255","messageId":"256","endLine":129,"endColumn":31},{"ruleId":"283","severity":1,"message":"284","line":146,"column":22,"nodeType":"285","messageId":"286","endLine":146,"endColumn":32},{"ruleId":"283","severity":1,"message":"287","line":147,"column":23,"nodeType":"285","messageId":"286","endLine":147,"endColumn":34},{"ruleId":"257","severity":1,"message":"288","line":168,"column":6,"nodeType":"259","endLine":168,"endColumn":18,"suggestions":"296"},{"ruleId":"257","severity":1,"message":"290","line":190,"column":6,"nodeType":"259","endLine":190,"endColumn":18,"suggestions":"297"},{"ruleId":"253","severity":1,"message":"298","line":3,"column":8,"nodeType":"255","messageId":"256","endLine":3,"endColumn":22},{"ruleId":"253","severity":1,"message":"299","line":32,"column":9,"nodeType":"255","messageId":"256","endLine":32,"endColumn":17},{"ruleId":"300","severity":1,"message":"301","line":61,"column":13,"nodeType":"275","endLine":66,"endColumn":15},{"ruleId":"253","severity":1,"message":"267","line":93,"column":17,"nodeType":"255","messageId":"256","endLine":93,"endColumn":26},{"ruleId":"253","severity":1,"message":"302","line":100,"column":9,"nodeType":"255","messageId":"256","endLine":100,"endColumn":16},{"ruleId":"253","severity":1,"message":"303","line":101,"column":10,"nodeType":"255","messageId":"256","endLine":101,"endColumn":14},{"ruleId":"253","severity":1,"message":"304","line":101,"column":16,"nodeType":"255","messageId":"256","endLine":101,"endColumn":23},{"ruleId":"253","severity":1,"message":"295","line":103,"column":20,"nodeType":"255","messageId":"256","endLine":103,"endColumn":31},{"ruleId":"253","severity":1,"message":"305","line":28,"column":8,"nodeType":"255","messageId":"256","endLine":28,"endColumn":12},{"ruleId":"273","severity":1,"message":"274","line":32,"column":7,"nodeType":"275","endLine":32,"endColumn":28},{"ruleId":"253","severity":1,"message":"282","line":51,"column":10,"nodeType":"255","messageId":"256","endLine":51,"endColumn":29},{"ruleId":"257","severity":1,"message":"288","line":93,"column":6,"nodeType":"259","endLine":93,"endColumn":18,"suggestions":"306"},{"ruleId":"257","severity":1,"message":"290","line":115,"column":6,"nodeType":"259","endLine":115,"endColumn":18,"suggestions":"307"},{"ruleId":"253","severity":1,"message":"308","line":224,"column":7,"nodeType":"255","messageId":"256","endLine":224,"endColumn":16},{"ruleId":"276","replacedBy":"309"},{"ruleId":"278","replacedBy":"310"},{"ruleId":"292","severity":1,"message":"293","line":34,"column":17,"nodeType":"275","endLine":34,"endColumn":20},{"ruleId":"292","severity":1,"message":"293","line":35,"column":17,"nodeType":"275","endLine":35,"endColumn":20},{"ruleId":"253","severity":1,"message":"311","line":7,"column":10,"nodeType":"255","messageId":"256","endLine":7,"endColumn":23},{"ruleId":"253","severity":1,"message":"312","line":8,"column":10,"nodeType":"255","messageId":"256","endLine":8,"endColumn":21},{"ruleId":"257","severity":1,"message":"313","line":38,"column":8,"nodeType":"259","endLine":38,"endColumn":23,"suggestions":"314"},{"ruleId":"257","severity":1,"message":"315","line":55,"column":8,"nodeType":"259","endLine":55,"endColumn":20,"suggestions":"316"},{"ruleId":"253","severity":1,"message":"317","line":71,"column":8,"nodeType":"255","messageId":"256","endLine":71,"endColumn":16},{"ruleId":"253","severity":1,"message":"318","line":73,"column":8,"nodeType":"255","messageId":"256","endLine":73,"endColumn":25},{"ruleId":"253","severity":1,"message":"319","line":74,"column":16,"nodeType":"255","messageId":"256","endLine":74,"endColumn":26},{"ruleId":"253","severity":1,"message":"282","line":83,"column":10,"nodeType":"255","messageId":"256","endLine":83,"endColumn":29},{"ruleId":"283","severity":1,"message":"284","line":98,"column":22,"nodeType":"285","messageId":"286","endLine":98,"endColumn":32},{"ruleId":"283","severity":1,"message":"287","line":99,"column":23,"nodeType":"285","messageId":"286","endLine":99,"endColumn":34},{"ruleId":"257","severity":1,"message":"288","line":120,"column":6,"nodeType":"259","endLine":120,"endColumn":18,"suggestions":"320"},{"ruleId":"257","severity":1,"message":"290","line":142,"column":6,"nodeType":"259","endLine":142,"endColumn":18,"suggestions":"321"},{"ruleId":"257","severity":1,"message":"322","line":29,"column":8,"nodeType":"259","endLine":29,"endColumn":10,"suggestions":"323"},{"ruleId":"257","severity":1,"message":"324","line":35,"column":7,"nodeType":"259","endLine":35,"endColumn":46,"suggestions":"325"},{"ruleId":"257","severity":1,"message":"326","line":35,"column":8,"nodeType":"327","endLine":35,"endColumn":44},{"ruleId":"253","severity":1,"message":"328","line":2,"column":24,"nodeType":"255","messageId":"256","endLine":2,"endColumn":28},{"ruleId":"257","severity":1,"message":"288","line":45,"column":8,"nodeType":"259","endLine":45,"endColumn":20,"suggestions":"329"},{"ruleId":"257","severity":1,"message":"290","line":68,"column":8,"nodeType":"259","endLine":68,"endColumn":20,"suggestions":"330"},{"ruleId":"331","severity":1,"message":"332","line":34,"column":59,"nodeType":"333","messageId":"334","endLine":34,"endColumn":61},{"ruleId":"257","severity":1,"message":"335","line":45,"column":8,"nodeType":"259","endLine":45,"endColumn":20,"suggestions":"336"},{"ruleId":"253","severity":1,"message":"337","line":5,"column":8,"nodeType":"255","messageId":"256","endLine":5,"endColumn":13},{"ruleId":"253","severity":1,"message":"268","line":8,"column":10,"nodeType":"255","messageId":"256","endLine":8,"endColumn":21},"no-unused-vars","'AppLoader' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["338"],"'PrivateRoute' is defined but never used.","'Router' is defined but never used.","'Redirect' is defined but never used.","'Navbar' is defined but never used.","'Home' is defined but never used.","'Dashboard' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'getAuthUser' is defined but never used.","'EditProfile' is defined but never used.","'Test' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["339"],"no-negated-in-lhs",["340"],["339"],["340"],"'connectedUsersState' is assigned a value but never used.","no-self-assign","'user.email' is assigned to itself.","MemberExpression","selfAssignment","'user.status' is assigned to itself.","React Hook useEffect has missing dependencies: 'connectedRef', 'statusRef', and 'usersRef'. Either include them or remove the dependency array.",["341"],"React Hook useEffect has a missing dependency: 'statusRef'. Either include it or remove the dependency array.",["342"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'lastName' is assigned a value but never used.","'setlastName' is assigned a value but never used.",["343"],["344"],"'ReadAndDownold' is defined but never used.","'download' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'history' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'List' is defined but never used.",["345"],["346"],"'employees' is assigned a value but never used.",["339"],["340"],"'initializeApp' is defined but never used.","'authReducer' is defined but never used.","React Hook useEffect has a missing dependency: 'messageRef'. Either include it or remove the dependency array.",["347"],"React Hook useEffect has missing dependencies: 'props' and 'usersRef'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["348"],"'Channels' is defined but never used.","'FavouriteChannels' is defined but never used.","'useHistory' is defined but never used.",["349"],["350"],"React Hook useEffect has a missing dependency: 'channelsRef'. Either include it or remove the dependency array.",["351"],"React Hook useEffect has missing dependencies: 'channelsState' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["352"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ConditionalExpression","'Icon' is defined but never used.",["353"],["354"],"array-callback-return","Array.prototype.reduce() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'messagesRef' and 'usersRef'. Either include them or remove the dependency array.",["355"],"'axios' is defined but never used.",{"desc":"356","fix":"357"},"no-global-assign","no-unsafe-negation",{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"358","fix":"362"},{"desc":"360","fix":"363"},{"desc":"358","fix":"364"},{"desc":"360","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"358","fix":"370"},{"desc":"360","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"358","fix":"376"},{"desc":"360","fix":"377"},{"desc":"378","fix":"379"},"Update the dependencies array to be: [props]",{"range":"380","text":"381"},"Update the dependencies array to be: [connectedRef, props.user, statusRef, usersRef]",{"range":"382","text":"383"},"Update the dependencies array to be: [statusRef, usersState]",{"range":"384","text":"385"},{"range":"386","text":"383"},{"range":"387","text":"385"},{"range":"388","text":"383"},{"range":"389","text":"385"},"Update the dependencies array to be: [messageRef, props.channel]",{"range":"390","text":"391"},"Update the dependencies array to be: [props, props.user, usersRef]",{"range":"392","text":"393"},{"range":"394","text":"383"},{"range":"395","text":"385"},"Update the dependencies array to be: [channelsRef]",{"range":"396","text":"397"},"Update the dependencies array to be: [channelsState, props]",{"range":"398","text":"399"},{"range":"400","text":"383"},{"range":"401","text":"385"},"Update the dependencies array to be: [messagesRef, props.user, usersRef]",{"range":"402","text":"403"},[1760,1762],"[props]",[3026,3038],"[connectedRef, props.user, statusRef, usersRef]",[3606,3618],"[statusRef, usersState]",[6073,6085],[6653,6665],[2721,2733],[3301,3313],[1357,1372],"[messageRef, props.channel]",[1904,1916],"[props, props.user, usersRef]",[3771,3783],[4351,4363],[1189,1191],"[channelsRef]",[1321,1360],"[channelsState, props]",[1493,1505],[2171,2183],[1537,1549],"[messagesRef, props.user, usersRef]"]