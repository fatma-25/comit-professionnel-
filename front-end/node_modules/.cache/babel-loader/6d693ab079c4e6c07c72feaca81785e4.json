{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/appointments/dataProvider/appointmentDataSource.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { Deferred } from \"../../../../core/utils/deferred\";\nexport class AppointmentDataSource {\n  constructor(dataSource) {\n    this.setDataSource(dataSource);\n    this._updatedAppointmentKeys = [];\n  }\n\n  get keyName() {\n    var store = this._dataSource.store();\n\n    return store.key();\n  }\n\n  _getStoreKey(target) {\n    var store = this._dataSource.store();\n\n    return store.keyOf(target);\n  }\n\n  setDataSource(dataSource) {\n    this._dataSource = dataSource;\n    this.cleanState();\n\n    this._initStoreChangeHandlers();\n  }\n\n  _initStoreChangeHandlers() {\n    var dataSource = this._dataSource;\n    var store = null === dataSource || void 0 === dataSource ? void 0 : dataSource.store();\n\n    if (store) {\n      store.on(\"updating\", newItem => {\n        this._updatedAppointment = newItem;\n      });\n      store.on(\"push\", pushItems => {\n        var items = dataSource.items();\n        var keyName = store.key();\n        pushItems.forEach(pushItem => {\n          var itemExists = 0 !== items.filter(item => item[keyName] === pushItem.key).length;\n\n          if (itemExists) {\n            this._updatedAppointmentKeys.push({\n              key: keyName,\n              value: pushItem.key\n            });\n          } else {\n            var {\n              data: data\n            } = pushItem;\n            data && items.push(data);\n          }\n        });\n        dataSource.load();\n      });\n    }\n  }\n\n  getUpdatedAppointment() {\n    return this._updatedAppointment;\n  }\n\n  getUpdatedAppointmentKeys() {\n    return this._updatedAppointmentKeys;\n  }\n\n  cleanState() {\n    this._updatedAppointment = null;\n    this._updatedAppointmentKeys = [];\n  }\n\n  add(rawAppointment) {\n    return this._dataSource.store().insert(rawAppointment).done(() => this._dataSource.load());\n  }\n\n  update(target, data) {\n    var key = this._getStoreKey(target);\n\n    var d = new Deferred();\n\n    this._dataSource.store().update(key, data).done(result => this._dataSource.load().done(() => d.resolve(result)).fail(d.reject)).fail(d.reject);\n\n    return d.promise();\n  }\n\n  remove(rawAppointment) {\n    var key = this._getStoreKey(rawAppointment);\n\n    return this._dataSource.store().remove(key).done(() => this._dataSource.load());\n  }\n\n}","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/node_modules/devextreme/esm/ui/scheduler/appointments/dataProvider/appointmentDataSource.js"],"names":["Deferred","AppointmentDataSource","constructor","dataSource","setDataSource","_updatedAppointmentKeys","keyName","store","_dataSource","key","_getStoreKey","target","keyOf","cleanState","_initStoreChangeHandlers","on","newItem","_updatedAppointment","pushItems","items","forEach","pushItem","itemExists","filter","item","length","push","value","data","load","getUpdatedAppointment","getUpdatedAppointmentKeys","add","rawAppointment","insert","done","update","d","result","resolve","fail","reject","promise","remove"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/appointments/dataProvider/appointmentDataSource.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    Deferred\r\n} from \"../../../../core/utils/deferred\";\r\nexport class AppointmentDataSource {\r\n    constructor(dataSource) {\r\n        this.setDataSource(dataSource);\r\n        this._updatedAppointmentKeys = []\r\n    }\r\n    get keyName() {\r\n        var store = this._dataSource.store();\r\n        return store.key()\r\n    }\r\n    _getStoreKey(target) {\r\n        var store = this._dataSource.store();\r\n        return store.keyOf(target)\r\n    }\r\n    setDataSource(dataSource) {\r\n        this._dataSource = dataSource;\r\n        this.cleanState();\r\n        this._initStoreChangeHandlers()\r\n    }\r\n    _initStoreChangeHandlers() {\r\n        var dataSource = this._dataSource;\r\n        var store = null === dataSource || void 0 === dataSource ? void 0 : dataSource.store();\r\n        if (store) {\r\n            store.on(\"updating\", newItem => {\r\n                this._updatedAppointment = newItem\r\n            });\r\n            store.on(\"push\", pushItems => {\r\n                var items = dataSource.items();\r\n                var keyName = store.key();\r\n                pushItems.forEach(pushItem => {\r\n                    var itemExists = 0 !== items.filter(item => item[keyName] === pushItem.key).length;\r\n                    if (itemExists) {\r\n                        this._updatedAppointmentKeys.push({\r\n                            key: keyName,\r\n                            value: pushItem.key\r\n                        })\r\n                    } else {\r\n                        var {\r\n                            data: data\r\n                        } = pushItem;\r\n                        data && items.push(data)\r\n                    }\r\n                });\r\n                dataSource.load()\r\n            })\r\n        }\r\n    }\r\n    getUpdatedAppointment() {\r\n        return this._updatedAppointment\r\n    }\r\n    getUpdatedAppointmentKeys() {\r\n        return this._updatedAppointmentKeys\r\n    }\r\n    cleanState() {\r\n        this._updatedAppointment = null;\r\n        this._updatedAppointmentKeys = []\r\n    }\r\n    add(rawAppointment) {\r\n        return this._dataSource.store().insert(rawAppointment).done(() => this._dataSource.load())\r\n    }\r\n    update(target, data) {\r\n        var key = this._getStoreKey(target);\r\n        var d = new Deferred;\r\n        this._dataSource.store().update(key, data).done(result => this._dataSource.load().done(() => d.resolve(result)).fail(d.reject)).fail(d.reject);\r\n        return d.promise()\r\n    }\r\n    remove(rawAppointment) {\r\n        var key = this._getStoreKey(rawAppointment);\r\n        return this._dataSource.store().remove(key).done(() => this._dataSource.load())\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}