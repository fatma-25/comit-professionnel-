{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/form/ui.form.layout_manager.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getWidth } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { default as FormItemsRunTimeInfo } from \"./ui.form.items_runtime_info\";\nimport registerComponent from \"../../core/component_registrator\";\nimport { isDefined, isEmptyObject, isFunction, isObject, type } from \"../../core/utils/type\";\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\nimport { getCurrentScreenFactor, hasWindow } from \"../../core/utils/window\";\nimport { each } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { normalizeIndexes } from \"../../core/utils/array\";\nimport { compileGetter } from \"../../core/utils/data\";\nimport { removeEvent } from \"../../events/remove\";\nimport messageLocalization from \"../../localization/message\";\nimport { styleProp } from \"../../core/utils/style\";\nimport Widget from \"../widget/ui.widget\";\nimport ResponsiveBox from \"../responsive_box\";\nimport { LAYOUT_MANAGER_ONE_COLUMN, FORM_LAYOUT_MANAGER_CLASS, SINGLE_COLUMN_ITEM_CONTENT, ROOT_SIMPLE_ITEM_CLASS, SIMPLE_ITEM_TYPE, FIELD_ITEM_CLASS } from \"./constants\";\nimport \"../text_box\";\nimport \"../number_box\";\nimport \"../check_box\";\nimport \"../date_box\";\nimport \"../button\";\nimport { renderFieldItem } from \"./components/field_item\";\nimport { renderButtonItem } from \"./components/button_item\";\nimport { renderEmptyItem } from \"./components/empty_item\";\nimport { convertToRenderFieldItemOptions } from \"./ui.form.layout_manager.utils\";\nvar FORM_EDITOR_BY_DEFAULT = \"dxTextBox\";\nvar LAYOUT_MANAGER_FIRST_ROW_CLASS = \"dx-first-row\";\nvar LAYOUT_MANAGER_LAST_ROW_CLASS = \"dx-last-row\";\nvar LAYOUT_MANAGER_FIRST_COL_CLASS = \"dx-first-col\";\nvar LAYOUT_MANAGER_LAST_COL_CLASS = \"dx-last-col\";\nvar LAYOUT_STRATEGY_FLEX = \"flex\";\nvar LAYOUT_STRATEGY_FALLBACK = \"fallback\";\nvar LayoutManager = Widget.inherit({\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      layoutData: {},\n      readOnly: false,\n      colCount: 1,\n      colCountByScreen: void 0,\n      labelLocation: \"left\",\n      onFieldDataChanged: null,\n      onEditorEnterKey: null,\n      customizeItem: null,\n      alignItemLabels: true,\n      minColWidth: 200,\n      showRequiredMark: true,\n      screenByWidth: null,\n      showOptionalMark: false,\n      requiredMark: \"*\",\n      labelMode: \"outside\",\n      optionalMark: messageLocalization.format(\"dxForm-optionalMark\"),\n      requiredMessage: messageLocalization.getFormatter(\"dxForm-requiredMessage\")\n    });\n  },\n  _setOptionsByReference: function () {\n    this.callBase();\n    extend(this._optionsByReference, {\n      layoutData: true,\n      validationGroup: true\n    });\n  },\n  _init: function () {\n    var layoutData = this.option(\"layoutData\");\n    this.callBase();\n    this._itemWatchers = [];\n    this._itemsRunTimeInfo = new FormItemsRunTimeInfo();\n\n    this._updateReferencedOptions(layoutData);\n\n    this._initDataAndItems(layoutData);\n  },\n  _dispose: function () {\n    this.callBase();\n\n    this._cleanItemWatchers();\n  },\n  _initDataAndItems: function (initialData) {\n    this._syncDataWithItems();\n\n    this._updateItems(initialData);\n  },\n  _syncDataWithItems: function () {\n    var layoutData = this.option(\"layoutData\");\n    var userItems = this.option(\"items\");\n\n    if (isDefined(userItems)) {\n      userItems.forEach(item => {\n        if (item.dataField && void 0 === this._getDataByField(item.dataField)) {\n          var value;\n\n          if (item.editorOptions) {\n            value = item.editorOptions.value;\n          }\n\n          if (isDefined(value) || item.dataField in layoutData) {\n            this._updateFieldValue(item.dataField, value);\n          }\n        }\n      });\n    }\n  },\n  _getDataByField: function (dataField) {\n    return dataField ? this.option(\"layoutData.\" + dataField) : null;\n  },\n  _isCheckboxUndefinedStateEnabled: function (_ref) {\n    var {\n      allowIndeterminateState: allowIndeterminateState,\n      editorType: editorType,\n      dataField: dataField\n    } = _ref;\n\n    if (true === allowIndeterminateState && \"dxCheckBox\" === editorType) {\n      var nameParts = [\"layoutData\", ...dataField.split(\".\")];\n      var propertyName = nameParts.pop();\n      var layoutData = this.option(nameParts.join(\".\"));\n      return layoutData && propertyName in layoutData;\n    }\n\n    return false;\n  },\n  _updateFieldValue: function (dataField, value) {\n    var layoutData = this.option(\"layoutData\");\n    var newValue = value;\n\n    if (!variableWrapper.isWrapped(layoutData[dataField]) && isDefined(dataField)) {\n      this.option(\"layoutData.\" + dataField, newValue);\n    } else if (variableWrapper.isWritableWrapped(layoutData[dataField])) {\n      newValue = isFunction(newValue) ? newValue() : newValue;\n      layoutData[dataField](newValue);\n    }\n\n    this._triggerOnFieldDataChanged({\n      dataField: dataField,\n      value: newValue\n    });\n  },\n  _triggerOnFieldDataChanged: function (args) {\n    this._createActionByOption(\"onFieldDataChanged\")(args);\n  },\n  _updateItems: function (layoutData) {\n    var that = this;\n    var userItems = this.option(\"items\");\n    var isUserItemsExist = isDefined(userItems);\n    var customizeItem = that.option(\"customizeItem\");\n    var items = isUserItemsExist ? userItems : this._generateItemsByData(layoutData);\n\n    if (isDefined(items)) {\n      var processedItems = [];\n      each(items, function (index, item) {\n        if (that._isAcceptableItem(item)) {\n          item = that._processItem(item);\n          customizeItem && customizeItem(item);\n\n          if (isObject(item) && false !== variableWrapper.unwrap(item.visible)) {\n            processedItems.push(item);\n          }\n        }\n      });\n\n      if (!that._itemWatchers.length || !isUserItemsExist) {\n        that._updateItemWatchers(items);\n      }\n\n      this._setItems(processedItems);\n\n      this._sortItems();\n    }\n  },\n  _cleanItemWatchers: function () {\n    this._itemWatchers.forEach(function (dispose) {\n      dispose();\n    });\n\n    this._itemWatchers = [];\n  },\n  _updateItemWatchers: function (items) {\n    var that = this;\n\n    var watch = that._getWatch();\n\n    items.forEach(function (item) {\n      if (isObject(item) && isDefined(item.visible) && isFunction(watch)) {\n        that._itemWatchers.push(watch(function () {\n          return variableWrapper.unwrap(item.visible);\n        }, function () {\n          that._updateItems(that.option(\"layoutData\"));\n\n          that.repaint();\n        }, {\n          skipImmediate: true\n        }));\n      }\n    });\n  },\n  _generateItemsByData: function (layoutData) {\n    var result = [];\n\n    if (isDefined(layoutData)) {\n      each(layoutData, function (dataField) {\n        result.push({\n          dataField: dataField\n        });\n      });\n    }\n\n    return result;\n  },\n  _isAcceptableItem: function (item) {\n    var itemField = item.dataField || item;\n\n    var itemData = this._getDataByField(itemField);\n\n    return !(isFunction(itemData) && !variableWrapper.isWrapped(itemData));\n  },\n  _processItem: function (item) {\n    if (\"string\" === typeof item) {\n      item = {\n        dataField: item\n      };\n    }\n\n    if (\"object\" === typeof item && !item.itemType) {\n      item.itemType = SIMPLE_ITEM_TYPE;\n    }\n\n    if (!isDefined(item.editorType) && isDefined(item.dataField)) {\n      var value = this._getDataByField(item.dataField);\n\n      item.editorType = isDefined(value) ? this._getEditorTypeByDataType(type(value)) : FORM_EDITOR_BY_DEFAULT;\n    }\n\n    if (\"dxCheckBox\" === item.editorType) {\n      var _item$allowIndetermin;\n\n      item.allowIndeterminateState = null !== (_item$allowIndetermin = item.allowIndeterminateState) && void 0 !== _item$allowIndetermin ? _item$allowIndetermin : true;\n    }\n\n    return item;\n  },\n  _getEditorTypeByDataType: function (dataType) {\n    switch (dataType) {\n      case \"number\":\n        return \"dxNumberBox\";\n\n      case \"date\":\n        return \"dxDateBox\";\n\n      case \"boolean\":\n        return \"dxCheckBox\";\n\n      default:\n        return \"dxTextBox\";\n    }\n  },\n  _sortItems: function () {\n    normalizeIndexes(this._items, \"visibleIndex\");\n\n    this._sortIndexes();\n  },\n  _sortIndexes: function () {\n    this._items.sort(function (itemA, itemB) {\n      var indexA = itemA.visibleIndex;\n      var indexB = itemB.visibleIndex;\n      var result;\n\n      if (indexA > indexB) {\n        result = 1;\n      } else if (indexA < indexB) {\n        result = -1;\n      } else {\n        result = 0;\n      }\n\n      return result;\n    });\n  },\n  _initMarkup: function () {\n    this._itemsRunTimeInfo.clear();\n\n    this.$element().addClass(FORM_LAYOUT_MANAGER_CLASS);\n    this.callBase();\n\n    this._renderResponsiveBox();\n  },\n  _hasBrowserFlex: function () {\n    return styleProp(LAYOUT_STRATEGY_FLEX) === LAYOUT_STRATEGY_FLEX;\n  },\n  _renderResponsiveBox: function () {\n    var templatesInfo = [];\n\n    if (this._items && this._items.length) {\n      var colCount = this._getColCount();\n\n      var $container = $(\"<div>\").appendTo(this.$element());\n\n      this._prepareItemsWithMerging(colCount);\n\n      var layoutItems = this._generateLayoutItems();\n\n      this._responsiveBox = this._createComponent($container, ResponsiveBox, this._getResponsiveBoxConfig(layoutItems, colCount, templatesInfo));\n\n      if (!hasWindow()) {\n        this._renderTemplates(templatesInfo);\n      }\n    }\n  },\n  _itemStateChangedHandler: function (e) {\n    this._refresh();\n  },\n  _renderTemplates: function (templatesInfo) {\n    var that = this;\n    each(templatesInfo, function (_, info) {\n      switch (info.itemType) {\n        case \"empty\":\n          renderEmptyItem(info);\n          break;\n\n        case \"button\":\n          that._renderButtonItem(info);\n\n          break;\n\n        default:\n          that._renderFieldItem(info);\n\n      }\n    });\n  },\n  _getResponsiveBoxConfig: function (layoutItems, colCount, templatesInfo) {\n    var that = this;\n    var colCountByScreen = that.option(\"colCountByScreen\");\n    var xsColCount = colCountByScreen && colCountByScreen.xs;\n    return {\n      onItemStateChanged: this._itemStateChangedHandler.bind(this),\n      _layoutStrategy: that._hasBrowserFlex() ? LAYOUT_STRATEGY_FLEX : LAYOUT_STRATEGY_FALLBACK,\n      onLayoutChanged: function () {\n        var onLayoutChanged = that.option(\"onLayoutChanged\");\n        var isSingleColumnMode = that.isSingleColumnMode();\n\n        if (onLayoutChanged) {\n          that.$element().toggleClass(LAYOUT_MANAGER_ONE_COLUMN, isSingleColumnMode);\n          onLayoutChanged(isSingleColumnMode);\n        }\n      },\n      onContentReady: function (e) {\n        if (hasWindow()) {\n          that._renderTemplates(templatesInfo);\n        }\n\n        if (that.option(\"onLayoutChanged\")) {\n          that.$element().toggleClass(LAYOUT_MANAGER_ONE_COLUMN, that.isSingleColumnMode(e.component));\n        }\n      },\n      itemTemplate: function (e, itemData, itemElement) {\n        if (!e.location) {\n          return;\n        }\n\n        var $itemElement = $(itemElement);\n        var itemRenderedCountInPreviousRows = e.location.row * colCount;\n        var item = that._items[e.location.col + itemRenderedCountInPreviousRows];\n\n        if (!item) {\n          return;\n        }\n\n        var itemCssClassList = [item.cssClass];\n        $itemElement.toggleClass(SINGLE_COLUMN_ITEM_CONTENT, that.isSingleColumnMode(this));\n\n        if (0 === e.location.row) {\n          itemCssClassList.push(LAYOUT_MANAGER_FIRST_ROW_CLASS);\n        }\n\n        if (0 === e.location.col) {\n          itemCssClassList.push(LAYOUT_MANAGER_FIRST_COL_CLASS);\n        }\n\n        if (item.itemType === SIMPLE_ITEM_TYPE && that.option(\"isRoot\")) {\n          $itemElement.addClass(ROOT_SIMPLE_ITEM_CLASS);\n        }\n\n        var isLastColumn = e.location.col === colCount - 1 || e.location.col + e.location.colspan === colCount;\n\n        var rowsCount = that._getRowsCount();\n\n        var isLastRow = e.location.row === rowsCount - 1;\n\n        if (isLastColumn) {\n          itemCssClassList.push(LAYOUT_MANAGER_LAST_COL_CLASS);\n        }\n\n        if (isLastRow) {\n          itemCssClassList.push(LAYOUT_MANAGER_LAST_ROW_CLASS);\n        }\n\n        if (\"empty\" !== item.itemType) {\n          itemCssClassList.push(FIELD_ITEM_CLASS);\n          itemCssClassList.push(that.option(\"cssItemClass\"));\n\n          if (isDefined(item.col)) {\n            itemCssClassList.push(\"dx-col-\" + item.col);\n          }\n        }\n\n        templatesInfo.push({\n          itemType: item.itemType,\n          item: item,\n          $parent: $itemElement,\n          rootElementCssClassList: itemCssClassList\n        });\n      },\n      cols: that._generateRatio(colCount),\n      rows: that._generateRatio(that._getRowsCount(), true),\n      dataSource: layoutItems,\n      screenByWidth: that.option(\"screenByWidth\"),\n      singleColumnScreen: xsColCount ? false : \"xs\"\n    };\n  },\n  _getColCount: function () {\n    var colCount = this.option(\"colCount\");\n    var colCountByScreen = this.option(\"colCountByScreen\");\n\n    if (colCountByScreen) {\n      var screenFactor = this.option(\"form\").getTargetScreenFactor();\n\n      if (!screenFactor) {\n        screenFactor = hasWindow() ? getCurrentScreenFactor(this.option(\"screenByWidth\")) : \"lg\";\n      }\n\n      colCount = colCountByScreen[screenFactor] || colCount;\n    }\n\n    if (\"auto\" === colCount) {\n      if (this._cashedColCount) {\n        return this._cashedColCount;\n      }\n\n      this._cashedColCount = colCount = this._getMaxColCount();\n    }\n\n    return colCount < 1 ? 1 : colCount;\n  },\n  _getMaxColCount: function () {\n    if (!hasWindow()) {\n      return 1;\n    }\n\n    var minColWidth = this.option(\"minColWidth\");\n    var width = getWidth(this.$element());\n    var itemsCount = this._items.length;\n    var maxColCount = Math.floor(width / minColWidth) || 1;\n    return itemsCount < maxColCount ? itemsCount : maxColCount;\n  },\n  isCachedColCountObsolete: function () {\n    return this._cashedColCount && this._getMaxColCount() !== this._cashedColCount;\n  },\n  _prepareItemsWithMerging: function (colCount) {\n    var items = this._items.slice(0);\n\n    var item;\n    var itemsMergedByCol;\n    var result = [];\n    var j;\n    var i;\n\n    for (i = 0; i < items.length; i++) {\n      item = items[i];\n      result.push(item);\n\n      if (this.option(\"alignItemLabels\") || item.alignItemLabels || item.colSpan) {\n        item.col = this._getColByIndex(result.length - 1, colCount);\n      }\n\n      if (item.colSpan > 1 && item.col + item.colSpan <= colCount) {\n        itemsMergedByCol = [];\n\n        for (j = 0; j < item.colSpan - 1; j++) {\n          itemsMergedByCol.push({\n            merged: true\n          });\n        }\n\n        result = result.concat(itemsMergedByCol);\n      } else {\n        delete item.colSpan;\n      }\n    }\n\n    this._setItems(result);\n  },\n  _getColByIndex: function (index, colCount) {\n    return index % colCount;\n  },\n  _setItems: function (items) {\n    this._items = items;\n    this._cashedColCount = null;\n  },\n  _generateLayoutItems: function () {\n    var items = this._items;\n\n    var colCount = this._getColCount();\n\n    var result = [];\n    var item;\n    var i;\n\n    for (i = 0; i < items.length; i++) {\n      item = items[i];\n\n      if (!item.merged) {\n        var generatedItem = {\n          location: {\n            row: parseInt(i / colCount),\n            col: this._getColByIndex(i, colCount)\n          }\n        };\n\n        if (isDefined(item.disabled)) {\n          generatedItem.disabled = item.disabled;\n        }\n\n        if (isDefined(item.visible)) {\n          generatedItem.visible = item.visible;\n        }\n\n        if (isDefined(item.colSpan)) {\n          generatedItem.location.colspan = item.colSpan;\n        }\n\n        if (isDefined(item.rowSpan)) {\n          generatedItem.location.rowspan = item.rowSpan;\n        }\n\n        result.push(generatedItem);\n      }\n    }\n\n    return result;\n  },\n  _renderEmptyItem: function ($container) {\n    renderEmptyItem({\n      $container: $container\n    });\n  },\n  _renderButtonItem: function (_ref2) {\n    var {\n      item: item,\n      $parent: $parent,\n      rootElementCssClassList: rootElementCssClassList\n    } = _ref2;\n    var {\n      $rootElement: $rootElement,\n      buttonInstance: buttonInstance\n    } = renderButtonItem({\n      item: item,\n      $parent: $parent,\n      rootElementCssClassList: rootElementCssClassList,\n      validationGroup: this.option(\"validationGroup\"),\n      createComponentCallback: this._createComponent.bind(this)\n    });\n\n    this._itemsRunTimeInfo.add({\n      item: item,\n      widgetInstance: buttonInstance,\n      guid: item.guid,\n      $itemContainer: $rootElement\n    });\n  },\n  _renderFieldItem: function (_ref3) {\n    var {\n      item: item,\n      $parent: $parent,\n      rootElementCssClassList: rootElementCssClassList\n    } = _ref3;\n\n    var editorValue = this._getDataByField(item.dataField);\n\n    var canAssignUndefinedValueToEditor = false;\n\n    if (void 0 === editorValue) {\n      var {\n        allowIndeterminateState: allowIndeterminateState,\n        editorType: editorType,\n        dataField: dataField\n      } = item;\n      canAssignUndefinedValueToEditor = this._isCheckboxUndefinedStateEnabled({\n        allowIndeterminateState: allowIndeterminateState,\n        editorType: editorType,\n        dataField: dataField\n      });\n    }\n\n    var name = item.dataField || item.name;\n    var {\n      $fieldEditorContainer: $fieldEditorContainer,\n      widgetInstance: widgetInstance,\n      $rootElement: $rootElement\n    } = renderFieldItem(convertToRenderFieldItemOptions({\n      $parent: $parent,\n      rootElementCssClassList: rootElementCssClassList,\n      item: item,\n      name: name,\n      editorValue: editorValue,\n      canAssignUndefinedValueToEditor: canAssignUndefinedValueToEditor,\n      parentComponent: this._getComponentOwner(),\n      createComponentCallback: this._createComponent.bind(this),\n      useFlexLayout: this._hasBrowserFlex(),\n      formLabelLocation: this.option(\"labelLocation\"),\n      requiredMessageTemplate: this.option(\"requiredMessage\"),\n      validationGroup: this.option(\"validationGroup\"),\n      editorValidationBoundary: this.option(\"validationBoundary\"),\n      editorStylingMode: this.option(\"form\") && this.option(\"form\").option(\"stylingMode\"),\n      showColonAfterLabel: this.option(\"showColonAfterLabel\"),\n      managerLabelLocation: this.option(\"labelLocation\"),\n      template: item.template ? this._getTemplate(item.template) : null,\n      itemId: this.option(\"form\") && this.option(\"form\").getItemID(name),\n      managerMarkOptions: this._getMarkOptions(),\n      labelMode: this.option(\"labelMode\")\n    }));\n\n    if (widgetInstance && item.dataField) {\n      this._bindDataField(widgetInstance, item.dataField, item.editorType, $fieldEditorContainer);\n    }\n\n    this._itemsRunTimeInfo.add({\n      item: item,\n      widgetInstance: widgetInstance,\n      guid: item.guid,\n      $itemContainer: $rootElement\n    });\n  },\n  _getMarkOptions: function () {\n    return {\n      showRequiredMark: this.option(\"showRequiredMark\"),\n      requiredMark: this.option(\"requiredMark\"),\n      showOptionalMark: this.option(\"showOptionalMark\"),\n      optionalMark: this.option(\"optionalMark\")\n    };\n  },\n  _getComponentOwner: function () {\n    return this.option(\"form\") || this;\n  },\n  _bindDataField: function (editorInstance, dataField, editorType, $container) {\n    var componentOwner = this._getComponentOwner();\n\n    editorInstance.on(\"enterKey\", function (args) {\n      componentOwner._createActionByOption(\"onEditorEnterKey\")(extend(args, {\n        dataField: dataField\n      }));\n    });\n\n    this._createWatcher(editorInstance, $container, dataField);\n\n    this.linkEditorToDataField(editorInstance, dataField, editorType);\n  },\n  _createWatcher: function (editorInstance, $container, dataField) {\n    var that = this;\n\n    var watch = that._getWatch();\n\n    if (!isFunction(watch)) {\n      return;\n    }\n\n    var dispose = watch(function () {\n      return that._getDataByField(dataField);\n    }, function () {\n      editorInstance.option(\"value\", that._getDataByField(dataField));\n    }, {\n      deep: true,\n      skipImmediate: true\n    });\n    eventsEngine.on($container, removeEvent, dispose);\n  },\n  _getWatch: function () {\n    if (!isDefined(this._watch)) {\n      var formInstance = this.option(\"form\");\n      this._watch = formInstance && formInstance.option(\"integrationOptions.watchMethod\");\n    }\n\n    return this._watch;\n  },\n  _createComponent: function ($editor, type, editorOptions) {\n    var readOnlyState = this.option(\"readOnly\");\n    var instance = this.callBase($editor, type, editorOptions);\n    readOnlyState && instance.option(\"readOnly\", readOnlyState);\n    this.on(\"optionChanged\", function (args) {\n      if (\"readOnly\" === args.name && !isDefined(editorOptions.readOnly)) {\n        instance.option(args.name, args.value);\n      }\n    });\n    return instance;\n  },\n  _generateRatio: function (count, isAutoSize) {\n    var result = [];\n    var ratio;\n    var i;\n\n    for (i = 0; i < count; i++) {\n      ratio = {\n        ratio: 1\n      };\n\n      if (isAutoSize) {\n        ratio.baseSize = \"auto\";\n      }\n\n      result.push(ratio);\n    }\n\n    return result;\n  },\n  _getRowsCount: function () {\n    return Math.ceil(this._items.length / this._getColCount());\n  },\n  _updateReferencedOptions: function (newLayoutData) {\n    var layoutData = this.option(\"layoutData\");\n\n    if (isObject(layoutData)) {\n      Object.getOwnPropertyNames(layoutData).forEach(property => delete this._optionsByReference[\"layoutData.\" + property]);\n    }\n\n    if (isObject(newLayoutData)) {\n      Object.getOwnPropertyNames(newLayoutData).forEach(property => this._optionsByReference[\"layoutData.\" + property] = true);\n    }\n  },\n\n  _resetWidget(instance) {\n    this._disableEditorValueChangedHandler = true;\n    instance.reset();\n    this._disableEditorValueChangedHandler = false;\n    instance.option(\"isValid\", true);\n  },\n\n  _optionChanged(args) {\n    if (0 === args.fullName.search(\"layoutData.\")) {\n      return;\n    }\n\n    switch (args.name) {\n      case \"showRequiredMark\":\n      case \"showOptionalMark\":\n      case \"requiredMark\":\n      case \"optionalMark\":\n        this._cashedRequiredConfig = null;\n\n        this._invalidate();\n\n        break;\n\n      case \"layoutData\":\n        this._updateReferencedOptions(args.value);\n\n        if (this.option(\"items\")) {\n          if (!isEmptyObject(args.value)) {\n            this._itemsRunTimeInfo.each((_, itemRunTimeInfo) => {\n              if (isDefined(itemRunTimeInfo.item)) {\n                var dataField = itemRunTimeInfo.item.dataField;\n\n                if (dataField && isDefined(itemRunTimeInfo.widgetInstance)) {\n                  var valueGetter = compileGetter(dataField);\n                  var dataValue = valueGetter(args.value);\n                  var {\n                    allowIndeterminateState: allowIndeterminateState,\n                    editorType: editorType\n                  } = itemRunTimeInfo.item;\n\n                  if (void 0 !== dataValue || this._isCheckboxUndefinedStateEnabled({\n                    allowIndeterminateState: allowIndeterminateState,\n                    editorType: editorType,\n                    dataField: dataField\n                  })) {\n                    itemRunTimeInfo.widgetInstance.option(\"value\", dataValue);\n                  } else {\n                    this._resetWidget(itemRunTimeInfo.widgetInstance);\n                  }\n                }\n              }\n            });\n          }\n        } else {\n          this._initDataAndItems(args.value);\n\n          this._invalidate();\n        }\n\n        break;\n\n      case \"items\":\n        this._cleanItemWatchers();\n\n        this._initDataAndItems(args.value);\n\n        this._invalidate();\n\n        break;\n\n      case \"alignItemLabels\":\n      case \"labelLocation\":\n      case \"labelMode\":\n      case \"requiredMessage\":\n        this._invalidate();\n\n        break;\n\n      case \"customizeItem\":\n        this._updateItems(this.option(\"layoutData\"));\n\n        this._invalidate();\n\n        break;\n\n      case \"colCount\":\n        this._resetColCount();\n\n        break;\n\n      case \"minColWidth\":\n        if (\"auto\" === this.option(\"colCount\")) {\n          this._resetColCount();\n        }\n\n        break;\n\n      case \"readOnly\":\n        break;\n\n      case \"width\":\n        this.callBase(args);\n\n        if (\"auto\" === this.option(\"colCount\")) {\n          this._resetColCount();\n        }\n\n        break;\n\n      case \"onFieldDataChanged\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n\n  _resetColCount: function () {\n    this._cashedColCount = null;\n\n    this._invalidate();\n  },\n\n  linkEditorToDataField(editorInstance, dataField) {\n    this.on(\"optionChanged\", args => {\n      if (args.fullName === \"layoutData.\".concat(dataField)) {\n        editorInstance._setOptionWithoutOptionChange(\"value\", args.value);\n      }\n    });\n    editorInstance.on(\"valueChanged\", args => {\n      var isValueReferenceType = isObject(args.value) || Array.isArray(args.value);\n\n      if (!this._disableEditorValueChangedHandler && !(isValueReferenceType && args.value === args.previousValue)) {\n        this._updateFieldValue(dataField, args.value);\n      }\n    });\n  },\n\n  _dimensionChanged: function () {\n    if (\"auto\" === this.option(\"colCount\") && this.isCachedColCountObsolete()) {\n      this._eventsStrategy.fireEvent(\"autoColCountChanged\");\n    }\n  },\n  updateData: function (data, value) {\n    var that = this;\n\n    if (isObject(data)) {\n      each(data, function (dataField, fieldValue) {\n        that._updateFieldValue(dataField, fieldValue);\n      });\n    } else if (\"string\" === typeof data) {\n      that._updateFieldValue(data, value);\n    }\n  },\n  getEditor: function (field) {\n    return this._itemsRunTimeInfo.findWidgetInstanceByDataField(field) || this._itemsRunTimeInfo.findWidgetInstanceByName(field);\n  },\n  isSingleColumnMode: function (component) {\n    var responsiveBox = this._responsiveBox || component;\n\n    if (responsiveBox) {\n      return responsiveBox.option(\"currentScreenFactor\") === responsiveBox.option(\"singleColumnScreen\");\n    }\n  },\n  getItemsRunTimeInfo: function () {\n    return this._itemsRunTimeInfo;\n  }\n});\nregisterComponent(\"dxLayoutManager\", LayoutManager);\nexport default LayoutManager;","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/node_modules/devextreme/esm/ui/form/ui.form.layout_manager.js"],"names":["getWidth","$","eventsEngine","default","FormItemsRunTimeInfo","registerComponent","isDefined","isEmptyObject","isFunction","isObject","type","variableWrapper","getCurrentScreenFactor","hasWindow","each","extend","normalizeIndexes","compileGetter","removeEvent","messageLocalization","styleProp","Widget","ResponsiveBox","LAYOUT_MANAGER_ONE_COLUMN","FORM_LAYOUT_MANAGER_CLASS","SINGLE_COLUMN_ITEM_CONTENT","ROOT_SIMPLE_ITEM_CLASS","SIMPLE_ITEM_TYPE","FIELD_ITEM_CLASS","renderFieldItem","renderButtonItem","renderEmptyItem","convertToRenderFieldItemOptions","FORM_EDITOR_BY_DEFAULT","LAYOUT_MANAGER_FIRST_ROW_CLASS","LAYOUT_MANAGER_LAST_ROW_CLASS","LAYOUT_MANAGER_FIRST_COL_CLASS","LAYOUT_MANAGER_LAST_COL_CLASS","LAYOUT_STRATEGY_FLEX","LAYOUT_STRATEGY_FALLBACK","LayoutManager","inherit","_getDefaultOptions","callBase","layoutData","readOnly","colCount","colCountByScreen","labelLocation","onFieldDataChanged","onEditorEnterKey","customizeItem","alignItemLabels","minColWidth","showRequiredMark","screenByWidth","showOptionalMark","requiredMark","labelMode","optionalMark","format","requiredMessage","getFormatter","_setOptionsByReference","_optionsByReference","validationGroup","_init","option","_itemWatchers","_itemsRunTimeInfo","_updateReferencedOptions","_initDataAndItems","_dispose","_cleanItemWatchers","initialData","_syncDataWithItems","_updateItems","userItems","forEach","item","dataField","_getDataByField","value","editorOptions","_updateFieldValue","_isCheckboxUndefinedStateEnabled","_ref","allowIndeterminateState","editorType","nameParts","split","propertyName","pop","join","newValue","isWrapped","isWritableWrapped","_triggerOnFieldDataChanged","args","_createActionByOption","that","isUserItemsExist","items","_generateItemsByData","processedItems","index","_isAcceptableItem","_processItem","unwrap","visible","push","length","_updateItemWatchers","_setItems","_sortItems","dispose","watch","_getWatch","repaint","skipImmediate","result","itemField","itemData","itemType","_getEditorTypeByDataType","_item$allowIndetermin","dataType","_items","_sortIndexes","sort","itemA","itemB","indexA","visibleIndex","indexB","_initMarkup","clear","$element","addClass","_renderResponsiveBox","_hasBrowserFlex","templatesInfo","_getColCount","$container","appendTo","_prepareItemsWithMerging","layoutItems","_generateLayoutItems","_responsiveBox","_createComponent","_getResponsiveBoxConfig","_renderTemplates","_itemStateChangedHandler","e","_refresh","_","info","_renderButtonItem","_renderFieldItem","xsColCount","xs","onItemStateChanged","bind","_layoutStrategy","onLayoutChanged","isSingleColumnMode","toggleClass","onContentReady","component","itemTemplate","itemElement","location","$itemElement","itemRenderedCountInPreviousRows","row","col","itemCssClassList","cssClass","isLastColumn","colspan","rowsCount","_getRowsCount","isLastRow","$parent","rootElementCssClassList","cols","_generateRatio","rows","dataSource","singleColumnScreen","screenFactor","getTargetScreenFactor","_cashedColCount","_getMaxColCount","width","itemsCount","maxColCount","Math","floor","isCachedColCountObsolete","slice","itemsMergedByCol","j","i","colSpan","_getColByIndex","merged","concat","generatedItem","parseInt","disabled","rowSpan","rowspan","_renderEmptyItem","_ref2","$rootElement","buttonInstance","createComponentCallback","add","widgetInstance","guid","$itemContainer","_ref3","editorValue","canAssignUndefinedValueToEditor","name","$fieldEditorContainer","parentComponent","_getComponentOwner","useFlexLayout","formLabelLocation","requiredMessageTemplate","editorValidationBoundary","editorStylingMode","showColonAfterLabel","managerLabelLocation","template","_getTemplate","itemId","getItemID","managerMarkOptions","_getMarkOptions","_bindDataField","editorInstance","componentOwner","on","_createWatcher","linkEditorToDataField","deep","_watch","formInstance","$editor","readOnlyState","instance","count","isAutoSize","ratio","baseSize","ceil","newLayoutData","Object","getOwnPropertyNames","property","_resetWidget","_disableEditorValueChangedHandler","reset","_optionChanged","fullName","search","_cashedRequiredConfig","_invalidate","itemRunTimeInfo","valueGetter","dataValue","_resetColCount","_setOptionWithoutOptionChange","isValueReferenceType","Array","isArray","previousValue","_dimensionChanged","_eventsStrategy","fireEvent","updateData","data","fieldValue","getEditor","field","findWidgetInstanceByDataField","findWidgetInstanceByName","responsiveBox","getItemsRunTimeInfo"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/form/ui.form.layout_manager.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    default as FormItemsRunTimeInfo\r\n} from \"./ui.form.items_runtime_info\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    isDefined,\r\n    isEmptyObject,\r\n    isFunction,\r\n    isObject,\r\n    type\r\n} from \"../../core/utils/type\";\r\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\r\nimport {\r\n    getCurrentScreenFactor,\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    normalizeIndexes\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    removeEvent\r\n} from \"../../events/remove\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    styleProp\r\n} from \"../../core/utils/style\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport ResponsiveBox from \"../responsive_box\";\r\nimport {\r\n    LAYOUT_MANAGER_ONE_COLUMN,\r\n    FORM_LAYOUT_MANAGER_CLASS,\r\n    SINGLE_COLUMN_ITEM_CONTENT,\r\n    ROOT_SIMPLE_ITEM_CLASS,\r\n    SIMPLE_ITEM_TYPE,\r\n    FIELD_ITEM_CLASS\r\n} from \"./constants\";\r\nimport \"../text_box\";\r\nimport \"../number_box\";\r\nimport \"../check_box\";\r\nimport \"../date_box\";\r\nimport \"../button\";\r\nimport {\r\n    renderFieldItem\r\n} from \"./components/field_item\";\r\nimport {\r\n    renderButtonItem\r\n} from \"./components/button_item\";\r\nimport {\r\n    renderEmptyItem\r\n} from \"./components/empty_item\";\r\nimport {\r\n    convertToRenderFieldItemOptions\r\n} from \"./ui.form.layout_manager.utils\";\r\nvar FORM_EDITOR_BY_DEFAULT = \"dxTextBox\";\r\nvar LAYOUT_MANAGER_FIRST_ROW_CLASS = \"dx-first-row\";\r\nvar LAYOUT_MANAGER_LAST_ROW_CLASS = \"dx-last-row\";\r\nvar LAYOUT_MANAGER_FIRST_COL_CLASS = \"dx-first-col\";\r\nvar LAYOUT_MANAGER_LAST_COL_CLASS = \"dx-last-col\";\r\nvar LAYOUT_STRATEGY_FLEX = \"flex\";\r\nvar LAYOUT_STRATEGY_FALLBACK = \"fallback\";\r\nvar LayoutManager = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            layoutData: {},\r\n            readOnly: false,\r\n            colCount: 1,\r\n            colCountByScreen: void 0,\r\n            labelLocation: \"left\",\r\n            onFieldDataChanged: null,\r\n            onEditorEnterKey: null,\r\n            customizeItem: null,\r\n            alignItemLabels: true,\r\n            minColWidth: 200,\r\n            showRequiredMark: true,\r\n            screenByWidth: null,\r\n            showOptionalMark: false,\r\n            requiredMark: \"*\",\r\n            labelMode: \"outside\",\r\n            optionalMark: messageLocalization.format(\"dxForm-optionalMark\"),\r\n            requiredMessage: messageLocalization.getFormatter(\"dxForm-requiredMessage\")\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            layoutData: true,\r\n            validationGroup: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        var layoutData = this.option(\"layoutData\");\r\n        this.callBase();\r\n        this._itemWatchers = [];\r\n        this._itemsRunTimeInfo = new FormItemsRunTimeInfo;\r\n        this._updateReferencedOptions(layoutData);\r\n        this._initDataAndItems(layoutData)\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        this._cleanItemWatchers()\r\n    },\r\n    _initDataAndItems: function(initialData) {\r\n        this._syncDataWithItems();\r\n        this._updateItems(initialData)\r\n    },\r\n    _syncDataWithItems: function() {\r\n        var layoutData = this.option(\"layoutData\");\r\n        var userItems = this.option(\"items\");\r\n        if (isDefined(userItems)) {\r\n            userItems.forEach(item => {\r\n                if (item.dataField && void 0 === this._getDataByField(item.dataField)) {\r\n                    var value;\r\n                    if (item.editorOptions) {\r\n                        value = item.editorOptions.value\r\n                    }\r\n                    if (isDefined(value) || item.dataField in layoutData) {\r\n                        this._updateFieldValue(item.dataField, value)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _getDataByField: function(dataField) {\r\n        return dataField ? this.option(\"layoutData.\" + dataField) : null\r\n    },\r\n    _isCheckboxUndefinedStateEnabled: function(_ref) {\r\n        var {\r\n            allowIndeterminateState: allowIndeterminateState,\r\n            editorType: editorType,\r\n            dataField: dataField\r\n        } = _ref;\r\n        if (true === allowIndeterminateState && \"dxCheckBox\" === editorType) {\r\n            var nameParts = [\"layoutData\", ...dataField.split(\".\")];\r\n            var propertyName = nameParts.pop();\r\n            var layoutData = this.option(nameParts.join(\".\"));\r\n            return layoutData && propertyName in layoutData\r\n        }\r\n        return false\r\n    },\r\n    _updateFieldValue: function(dataField, value) {\r\n        var layoutData = this.option(\"layoutData\");\r\n        var newValue = value;\r\n        if (!variableWrapper.isWrapped(layoutData[dataField]) && isDefined(dataField)) {\r\n            this.option(\"layoutData.\" + dataField, newValue)\r\n        } else if (variableWrapper.isWritableWrapped(layoutData[dataField])) {\r\n            newValue = isFunction(newValue) ? newValue() : newValue;\r\n            layoutData[dataField](newValue)\r\n        }\r\n        this._triggerOnFieldDataChanged({\r\n            dataField: dataField,\r\n            value: newValue\r\n        })\r\n    },\r\n    _triggerOnFieldDataChanged: function(args) {\r\n        this._createActionByOption(\"onFieldDataChanged\")(args)\r\n    },\r\n    _updateItems: function(layoutData) {\r\n        var that = this;\r\n        var userItems = this.option(\"items\");\r\n        var isUserItemsExist = isDefined(userItems);\r\n        var customizeItem = that.option(\"customizeItem\");\r\n        var items = isUserItemsExist ? userItems : this._generateItemsByData(layoutData);\r\n        if (isDefined(items)) {\r\n            var processedItems = [];\r\n            each(items, (function(index, item) {\r\n                if (that._isAcceptableItem(item)) {\r\n                    item = that._processItem(item);\r\n                    customizeItem && customizeItem(item);\r\n                    if (isObject(item) && false !== variableWrapper.unwrap(item.visible)) {\r\n                        processedItems.push(item)\r\n                    }\r\n                }\r\n            }));\r\n            if (!that._itemWatchers.length || !isUserItemsExist) {\r\n                that._updateItemWatchers(items)\r\n            }\r\n            this._setItems(processedItems);\r\n            this._sortItems()\r\n        }\r\n    },\r\n    _cleanItemWatchers: function() {\r\n        this._itemWatchers.forEach((function(dispose) {\r\n            dispose()\r\n        }));\r\n        this._itemWatchers = []\r\n    },\r\n    _updateItemWatchers: function(items) {\r\n        var that = this;\r\n        var watch = that._getWatch();\r\n        items.forEach((function(item) {\r\n            if (isObject(item) && isDefined(item.visible) && isFunction(watch)) {\r\n                that._itemWatchers.push(watch((function() {\r\n                    return variableWrapper.unwrap(item.visible)\r\n                }), (function() {\r\n                    that._updateItems(that.option(\"layoutData\"));\r\n                    that.repaint()\r\n                }), {\r\n                    skipImmediate: true\r\n                }))\r\n            }\r\n        }))\r\n    },\r\n    _generateItemsByData: function(layoutData) {\r\n        var result = [];\r\n        if (isDefined(layoutData)) {\r\n            each(layoutData, (function(dataField) {\r\n                result.push({\r\n                    dataField: dataField\r\n                })\r\n            }))\r\n        }\r\n        return result\r\n    },\r\n    _isAcceptableItem: function(item) {\r\n        var itemField = item.dataField || item;\r\n        var itemData = this._getDataByField(itemField);\r\n        return !(isFunction(itemData) && !variableWrapper.isWrapped(itemData))\r\n    },\r\n    _processItem: function(item) {\r\n        if (\"string\" === typeof item) {\r\n            item = {\r\n                dataField: item\r\n            }\r\n        }\r\n        if (\"object\" === typeof item && !item.itemType) {\r\n            item.itemType = SIMPLE_ITEM_TYPE\r\n        }\r\n        if (!isDefined(item.editorType) && isDefined(item.dataField)) {\r\n            var value = this._getDataByField(item.dataField);\r\n            item.editorType = isDefined(value) ? this._getEditorTypeByDataType(type(value)) : FORM_EDITOR_BY_DEFAULT\r\n        }\r\n        if (\"dxCheckBox\" === item.editorType) {\r\n            var _item$allowIndetermin;\r\n            item.allowIndeterminateState = null !== (_item$allowIndetermin = item.allowIndeterminateState) && void 0 !== _item$allowIndetermin ? _item$allowIndetermin : true\r\n        }\r\n        return item\r\n    },\r\n    _getEditorTypeByDataType: function(dataType) {\r\n        switch (dataType) {\r\n            case \"number\":\r\n                return \"dxNumberBox\";\r\n            case \"date\":\r\n                return \"dxDateBox\";\r\n            case \"boolean\":\r\n                return \"dxCheckBox\";\r\n            default:\r\n                return \"dxTextBox\"\r\n        }\r\n    },\r\n    _sortItems: function() {\r\n        normalizeIndexes(this._items, \"visibleIndex\");\r\n        this._sortIndexes()\r\n    },\r\n    _sortIndexes: function() {\r\n        this._items.sort((function(itemA, itemB) {\r\n            var indexA = itemA.visibleIndex;\r\n            var indexB = itemB.visibleIndex;\r\n            var result;\r\n            if (indexA > indexB) {\r\n                result = 1\r\n            } else if (indexA < indexB) {\r\n                result = -1\r\n            } else {\r\n                result = 0\r\n            }\r\n            return result\r\n        }))\r\n    },\r\n    _initMarkup: function() {\r\n        this._itemsRunTimeInfo.clear();\r\n        this.$element().addClass(FORM_LAYOUT_MANAGER_CLASS);\r\n        this.callBase();\r\n        this._renderResponsiveBox()\r\n    },\r\n    _hasBrowserFlex: function() {\r\n        return styleProp(LAYOUT_STRATEGY_FLEX) === LAYOUT_STRATEGY_FLEX\r\n    },\r\n    _renderResponsiveBox: function() {\r\n        var templatesInfo = [];\r\n        if (this._items && this._items.length) {\r\n            var colCount = this._getColCount();\r\n            var $container = $(\"<div>\").appendTo(this.$element());\r\n            this._prepareItemsWithMerging(colCount);\r\n            var layoutItems = this._generateLayoutItems();\r\n            this._responsiveBox = this._createComponent($container, ResponsiveBox, this._getResponsiveBoxConfig(layoutItems, colCount, templatesInfo));\r\n            if (!hasWindow()) {\r\n                this._renderTemplates(templatesInfo)\r\n            }\r\n        }\r\n    },\r\n    _itemStateChangedHandler: function(e) {\r\n        this._refresh()\r\n    },\r\n    _renderTemplates: function(templatesInfo) {\r\n        var that = this;\r\n        each(templatesInfo, (function(_, info) {\r\n            switch (info.itemType) {\r\n                case \"empty\":\r\n                    renderEmptyItem(info);\r\n                    break;\r\n                case \"button\":\r\n                    that._renderButtonItem(info);\r\n                    break;\r\n                default:\r\n                    that._renderFieldItem(info)\r\n            }\r\n        }))\r\n    },\r\n    _getResponsiveBoxConfig: function(layoutItems, colCount, templatesInfo) {\r\n        var that = this;\r\n        var colCountByScreen = that.option(\"colCountByScreen\");\r\n        var xsColCount = colCountByScreen && colCountByScreen.xs;\r\n        return {\r\n            onItemStateChanged: this._itemStateChangedHandler.bind(this),\r\n            _layoutStrategy: that._hasBrowserFlex() ? LAYOUT_STRATEGY_FLEX : LAYOUT_STRATEGY_FALLBACK,\r\n            onLayoutChanged: function() {\r\n                var onLayoutChanged = that.option(\"onLayoutChanged\");\r\n                var isSingleColumnMode = that.isSingleColumnMode();\r\n                if (onLayoutChanged) {\r\n                    that.$element().toggleClass(LAYOUT_MANAGER_ONE_COLUMN, isSingleColumnMode);\r\n                    onLayoutChanged(isSingleColumnMode)\r\n                }\r\n            },\r\n            onContentReady: function(e) {\r\n                if (hasWindow()) {\r\n                    that._renderTemplates(templatesInfo)\r\n                }\r\n                if (that.option(\"onLayoutChanged\")) {\r\n                    that.$element().toggleClass(LAYOUT_MANAGER_ONE_COLUMN, that.isSingleColumnMode(e.component))\r\n                }\r\n            },\r\n            itemTemplate: function(e, itemData, itemElement) {\r\n                if (!e.location) {\r\n                    return\r\n                }\r\n                var $itemElement = $(itemElement);\r\n                var itemRenderedCountInPreviousRows = e.location.row * colCount;\r\n                var item = that._items[e.location.col + itemRenderedCountInPreviousRows];\r\n                if (!item) {\r\n                    return\r\n                }\r\n                var itemCssClassList = [item.cssClass];\r\n                $itemElement.toggleClass(SINGLE_COLUMN_ITEM_CONTENT, that.isSingleColumnMode(this));\r\n                if (0 === e.location.row) {\r\n                    itemCssClassList.push(LAYOUT_MANAGER_FIRST_ROW_CLASS)\r\n                }\r\n                if (0 === e.location.col) {\r\n                    itemCssClassList.push(LAYOUT_MANAGER_FIRST_COL_CLASS)\r\n                }\r\n                if (item.itemType === SIMPLE_ITEM_TYPE && that.option(\"isRoot\")) {\r\n                    $itemElement.addClass(ROOT_SIMPLE_ITEM_CLASS)\r\n                }\r\n                var isLastColumn = e.location.col === colCount - 1 || e.location.col + e.location.colspan === colCount;\r\n                var rowsCount = that._getRowsCount();\r\n                var isLastRow = e.location.row === rowsCount - 1;\r\n                if (isLastColumn) {\r\n                    itemCssClassList.push(LAYOUT_MANAGER_LAST_COL_CLASS)\r\n                }\r\n                if (isLastRow) {\r\n                    itemCssClassList.push(LAYOUT_MANAGER_LAST_ROW_CLASS)\r\n                }\r\n                if (\"empty\" !== item.itemType) {\r\n                    itemCssClassList.push(FIELD_ITEM_CLASS);\r\n                    itemCssClassList.push(that.option(\"cssItemClass\"));\r\n                    if (isDefined(item.col)) {\r\n                        itemCssClassList.push(\"dx-col-\" + item.col)\r\n                    }\r\n                }\r\n                templatesInfo.push({\r\n                    itemType: item.itemType,\r\n                    item: item,\r\n                    $parent: $itemElement,\r\n                    rootElementCssClassList: itemCssClassList\r\n                })\r\n            },\r\n            cols: that._generateRatio(colCount),\r\n            rows: that._generateRatio(that._getRowsCount(), true),\r\n            dataSource: layoutItems,\r\n            screenByWidth: that.option(\"screenByWidth\"),\r\n            singleColumnScreen: xsColCount ? false : \"xs\"\r\n        }\r\n    },\r\n    _getColCount: function() {\r\n        var colCount = this.option(\"colCount\");\r\n        var colCountByScreen = this.option(\"colCountByScreen\");\r\n        if (colCountByScreen) {\r\n            var screenFactor = this.option(\"form\").getTargetScreenFactor();\r\n            if (!screenFactor) {\r\n                screenFactor = hasWindow() ? getCurrentScreenFactor(this.option(\"screenByWidth\")) : \"lg\"\r\n            }\r\n            colCount = colCountByScreen[screenFactor] || colCount\r\n        }\r\n        if (\"auto\" === colCount) {\r\n            if (this._cashedColCount) {\r\n                return this._cashedColCount\r\n            }\r\n            this._cashedColCount = colCount = this._getMaxColCount()\r\n        }\r\n        return colCount < 1 ? 1 : colCount\r\n    },\r\n    _getMaxColCount: function() {\r\n        if (!hasWindow()) {\r\n            return 1\r\n        }\r\n        var minColWidth = this.option(\"minColWidth\");\r\n        var width = getWidth(this.$element());\r\n        var itemsCount = this._items.length;\r\n        var maxColCount = Math.floor(width / minColWidth) || 1;\r\n        return itemsCount < maxColCount ? itemsCount : maxColCount\r\n    },\r\n    isCachedColCountObsolete: function() {\r\n        return this._cashedColCount && this._getMaxColCount() !== this._cashedColCount\r\n    },\r\n    _prepareItemsWithMerging: function(colCount) {\r\n        var items = this._items.slice(0);\r\n        var item;\r\n        var itemsMergedByCol;\r\n        var result = [];\r\n        var j;\r\n        var i;\r\n        for (i = 0; i < items.length; i++) {\r\n            item = items[i];\r\n            result.push(item);\r\n            if (this.option(\"alignItemLabels\") || item.alignItemLabels || item.colSpan) {\r\n                item.col = this._getColByIndex(result.length - 1, colCount)\r\n            }\r\n            if (item.colSpan > 1 && item.col + item.colSpan <= colCount) {\r\n                itemsMergedByCol = [];\r\n                for (j = 0; j < item.colSpan - 1; j++) {\r\n                    itemsMergedByCol.push({\r\n                        merged: true\r\n                    })\r\n                }\r\n                result = result.concat(itemsMergedByCol)\r\n            } else {\r\n                delete item.colSpan\r\n            }\r\n        }\r\n        this._setItems(result)\r\n    },\r\n    _getColByIndex: function(index, colCount) {\r\n        return index % colCount\r\n    },\r\n    _setItems: function(items) {\r\n        this._items = items;\r\n        this._cashedColCount = null\r\n    },\r\n    _generateLayoutItems: function() {\r\n        var items = this._items;\r\n        var colCount = this._getColCount();\r\n        var result = [];\r\n        var item;\r\n        var i;\r\n        for (i = 0; i < items.length; i++) {\r\n            item = items[i];\r\n            if (!item.merged) {\r\n                var generatedItem = {\r\n                    location: {\r\n                        row: parseInt(i / colCount),\r\n                        col: this._getColByIndex(i, colCount)\r\n                    }\r\n                };\r\n                if (isDefined(item.disabled)) {\r\n                    generatedItem.disabled = item.disabled\r\n                }\r\n                if (isDefined(item.visible)) {\r\n                    generatedItem.visible = item.visible\r\n                }\r\n                if (isDefined(item.colSpan)) {\r\n                    generatedItem.location.colspan = item.colSpan\r\n                }\r\n                if (isDefined(item.rowSpan)) {\r\n                    generatedItem.location.rowspan = item.rowSpan\r\n                }\r\n                result.push(generatedItem)\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _renderEmptyItem: function($container) {\r\n        renderEmptyItem({\r\n            $container: $container\r\n        })\r\n    },\r\n    _renderButtonItem: function(_ref2) {\r\n        var {\r\n            item: item,\r\n            $parent: $parent,\r\n            rootElementCssClassList: rootElementCssClassList\r\n        } = _ref2;\r\n        var {\r\n            $rootElement: $rootElement,\r\n            buttonInstance: buttonInstance\r\n        } = renderButtonItem({\r\n            item: item,\r\n            $parent: $parent,\r\n            rootElementCssClassList: rootElementCssClassList,\r\n            validationGroup: this.option(\"validationGroup\"),\r\n            createComponentCallback: this._createComponent.bind(this)\r\n        });\r\n        this._itemsRunTimeInfo.add({\r\n            item: item,\r\n            widgetInstance: buttonInstance,\r\n            guid: item.guid,\r\n            $itemContainer: $rootElement\r\n        })\r\n    },\r\n    _renderFieldItem: function(_ref3) {\r\n        var {\r\n            item: item,\r\n            $parent: $parent,\r\n            rootElementCssClassList: rootElementCssClassList\r\n        } = _ref3;\r\n        var editorValue = this._getDataByField(item.dataField);\r\n        var canAssignUndefinedValueToEditor = false;\r\n        if (void 0 === editorValue) {\r\n            var {\r\n                allowIndeterminateState: allowIndeterminateState,\r\n                editorType: editorType,\r\n                dataField: dataField\r\n            } = item;\r\n            canAssignUndefinedValueToEditor = this._isCheckboxUndefinedStateEnabled({\r\n                allowIndeterminateState: allowIndeterminateState,\r\n                editorType: editorType,\r\n                dataField: dataField\r\n            })\r\n        }\r\n        var name = item.dataField || item.name;\r\n        var {\r\n            $fieldEditorContainer: $fieldEditorContainer,\r\n            widgetInstance: widgetInstance,\r\n            $rootElement: $rootElement\r\n        } = renderFieldItem(convertToRenderFieldItemOptions({\r\n            $parent: $parent,\r\n            rootElementCssClassList: rootElementCssClassList,\r\n            item: item,\r\n            name: name,\r\n            editorValue: editorValue,\r\n            canAssignUndefinedValueToEditor: canAssignUndefinedValueToEditor,\r\n            parentComponent: this._getComponentOwner(),\r\n            createComponentCallback: this._createComponent.bind(this),\r\n            useFlexLayout: this._hasBrowserFlex(),\r\n            formLabelLocation: this.option(\"labelLocation\"),\r\n            requiredMessageTemplate: this.option(\"requiredMessage\"),\r\n            validationGroup: this.option(\"validationGroup\"),\r\n            editorValidationBoundary: this.option(\"validationBoundary\"),\r\n            editorStylingMode: this.option(\"form\") && this.option(\"form\").option(\"stylingMode\"),\r\n            showColonAfterLabel: this.option(\"showColonAfterLabel\"),\r\n            managerLabelLocation: this.option(\"labelLocation\"),\r\n            template: item.template ? this._getTemplate(item.template) : null,\r\n            itemId: this.option(\"form\") && this.option(\"form\").getItemID(name),\r\n            managerMarkOptions: this._getMarkOptions(),\r\n            labelMode: this.option(\"labelMode\")\r\n        }));\r\n        if (widgetInstance && item.dataField) {\r\n            this._bindDataField(widgetInstance, item.dataField, item.editorType, $fieldEditorContainer)\r\n        }\r\n        this._itemsRunTimeInfo.add({\r\n            item: item,\r\n            widgetInstance: widgetInstance,\r\n            guid: item.guid,\r\n            $itemContainer: $rootElement\r\n        })\r\n    },\r\n    _getMarkOptions: function() {\r\n        return {\r\n            showRequiredMark: this.option(\"showRequiredMark\"),\r\n            requiredMark: this.option(\"requiredMark\"),\r\n            showOptionalMark: this.option(\"showOptionalMark\"),\r\n            optionalMark: this.option(\"optionalMark\")\r\n        }\r\n    },\r\n    _getComponentOwner: function() {\r\n        return this.option(\"form\") || this\r\n    },\r\n    _bindDataField: function(editorInstance, dataField, editorType, $container) {\r\n        var componentOwner = this._getComponentOwner();\r\n        editorInstance.on(\"enterKey\", (function(args) {\r\n            componentOwner._createActionByOption(\"onEditorEnterKey\")(extend(args, {\r\n                dataField: dataField\r\n            }))\r\n        }));\r\n        this._createWatcher(editorInstance, $container, dataField);\r\n        this.linkEditorToDataField(editorInstance, dataField, editorType)\r\n    },\r\n    _createWatcher: function(editorInstance, $container, dataField) {\r\n        var that = this;\r\n        var watch = that._getWatch();\r\n        if (!isFunction(watch)) {\r\n            return\r\n        }\r\n        var dispose = watch((function() {\r\n            return that._getDataByField(dataField)\r\n        }), (function() {\r\n            editorInstance.option(\"value\", that._getDataByField(dataField))\r\n        }), {\r\n            deep: true,\r\n            skipImmediate: true\r\n        });\r\n        eventsEngine.on($container, removeEvent, dispose)\r\n    },\r\n    _getWatch: function() {\r\n        if (!isDefined(this._watch)) {\r\n            var formInstance = this.option(\"form\");\r\n            this._watch = formInstance && formInstance.option(\"integrationOptions.watchMethod\")\r\n        }\r\n        return this._watch\r\n    },\r\n    _createComponent: function($editor, type, editorOptions) {\r\n        var readOnlyState = this.option(\"readOnly\");\r\n        var instance = this.callBase($editor, type, editorOptions);\r\n        readOnlyState && instance.option(\"readOnly\", readOnlyState);\r\n        this.on(\"optionChanged\", (function(args) {\r\n            if (\"readOnly\" === args.name && !isDefined(editorOptions.readOnly)) {\r\n                instance.option(args.name, args.value)\r\n            }\r\n        }));\r\n        return instance\r\n    },\r\n    _generateRatio: function(count, isAutoSize) {\r\n        var result = [];\r\n        var ratio;\r\n        var i;\r\n        for (i = 0; i < count; i++) {\r\n            ratio = {\r\n                ratio: 1\r\n            };\r\n            if (isAutoSize) {\r\n                ratio.baseSize = \"auto\"\r\n            }\r\n            result.push(ratio)\r\n        }\r\n        return result\r\n    },\r\n    _getRowsCount: function() {\r\n        return Math.ceil(this._items.length / this._getColCount())\r\n    },\r\n    _updateReferencedOptions: function(newLayoutData) {\r\n        var layoutData = this.option(\"layoutData\");\r\n        if (isObject(layoutData)) {\r\n            Object.getOwnPropertyNames(layoutData).forEach(property => delete this._optionsByReference[\"layoutData.\" + property])\r\n        }\r\n        if (isObject(newLayoutData)) {\r\n            Object.getOwnPropertyNames(newLayoutData).forEach(property => this._optionsByReference[\"layoutData.\" + property] = true)\r\n        }\r\n    },\r\n    _resetWidget(instance) {\r\n        this._disableEditorValueChangedHandler = true;\r\n        instance.reset();\r\n        this._disableEditorValueChangedHandler = false;\r\n        instance.option(\"isValid\", true)\r\n    },\r\n    _optionChanged(args) {\r\n        if (0 === args.fullName.search(\"layoutData.\")) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"showRequiredMark\":\r\n            case \"showOptionalMark\":\r\n            case \"requiredMark\":\r\n            case \"optionalMark\":\r\n                this._cashedRequiredConfig = null;\r\n                this._invalidate();\r\n                break;\r\n            case \"layoutData\":\r\n                this._updateReferencedOptions(args.value);\r\n                if (this.option(\"items\")) {\r\n                    if (!isEmptyObject(args.value)) {\r\n                        this._itemsRunTimeInfo.each((_, itemRunTimeInfo) => {\r\n                            if (isDefined(itemRunTimeInfo.item)) {\r\n                                var dataField = itemRunTimeInfo.item.dataField;\r\n                                if (dataField && isDefined(itemRunTimeInfo.widgetInstance)) {\r\n                                    var valueGetter = compileGetter(dataField);\r\n                                    var dataValue = valueGetter(args.value);\r\n                                    var {\r\n                                        allowIndeterminateState: allowIndeterminateState,\r\n                                        editorType: editorType\r\n                                    } = itemRunTimeInfo.item;\r\n                                    if (void 0 !== dataValue || this._isCheckboxUndefinedStateEnabled({\r\n                                            allowIndeterminateState: allowIndeterminateState,\r\n                                            editorType: editorType,\r\n                                            dataField: dataField\r\n                                        })) {\r\n                                        itemRunTimeInfo.widgetInstance.option(\"value\", dataValue)\r\n                                    } else {\r\n                                        this._resetWidget(itemRunTimeInfo.widgetInstance)\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                } else {\r\n                    this._initDataAndItems(args.value);\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"items\":\r\n                this._cleanItemWatchers();\r\n                this._initDataAndItems(args.value);\r\n                this._invalidate();\r\n                break;\r\n            case \"alignItemLabels\":\r\n            case \"labelLocation\":\r\n            case \"labelMode\":\r\n            case \"requiredMessage\":\r\n                this._invalidate();\r\n                break;\r\n            case \"customizeItem\":\r\n                this._updateItems(this.option(\"layoutData\"));\r\n                this._invalidate();\r\n                break;\r\n            case \"colCount\":\r\n                this._resetColCount();\r\n                break;\r\n            case \"minColWidth\":\r\n                if (\"auto\" === this.option(\"colCount\")) {\r\n                    this._resetColCount()\r\n                }\r\n                break;\r\n            case \"readOnly\":\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                if (\"auto\" === this.option(\"colCount\")) {\r\n                    this._resetColCount()\r\n                }\r\n                break;\r\n            case \"onFieldDataChanged\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _resetColCount: function() {\r\n        this._cashedColCount = null;\r\n        this._invalidate()\r\n    },\r\n    linkEditorToDataField(editorInstance, dataField) {\r\n        this.on(\"optionChanged\", args => {\r\n            if (args.fullName === \"layoutData.\".concat(dataField)) {\r\n                editorInstance._setOptionWithoutOptionChange(\"value\", args.value)\r\n            }\r\n        });\r\n        editorInstance.on(\"valueChanged\", args => {\r\n            var isValueReferenceType = isObject(args.value) || Array.isArray(args.value);\r\n            if (!this._disableEditorValueChangedHandler && !(isValueReferenceType && args.value === args.previousValue)) {\r\n                this._updateFieldValue(dataField, args.value)\r\n            }\r\n        })\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (\"auto\" === this.option(\"colCount\") && this.isCachedColCountObsolete()) {\r\n            this._eventsStrategy.fireEvent(\"autoColCountChanged\")\r\n        }\r\n    },\r\n    updateData: function(data, value) {\r\n        var that = this;\r\n        if (isObject(data)) {\r\n            each(data, (function(dataField, fieldValue) {\r\n                that._updateFieldValue(dataField, fieldValue)\r\n            }))\r\n        } else if (\"string\" === typeof data) {\r\n            that._updateFieldValue(data, value)\r\n        }\r\n    },\r\n    getEditor: function(field) {\r\n        return this._itemsRunTimeInfo.findWidgetInstanceByDataField(field) || this._itemsRunTimeInfo.findWidgetInstanceByName(field)\r\n    },\r\n    isSingleColumnMode: function(component) {\r\n        var responsiveBox = this._responsiveBox || component;\r\n        if (responsiveBox) {\r\n            return responsiveBox.option(\"currentScreenFactor\") === responsiveBox.option(\"singleColumnScreen\")\r\n        }\r\n    },\r\n    getItemsRunTimeInfo: function() {\r\n        return this._itemsRunTimeInfo\r\n    }\r\n});\r\nregisterComponent(\"dxLayoutManager\", LayoutManager);\r\nexport default LayoutManager;\r\n"]},"metadata":{},"sourceType":"module"}