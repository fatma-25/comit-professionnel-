{"ast":null,"code":"var _jsxFileName = \"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/Messages/MessageInput/MessageInput.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Segment, Input, Button } from \"semantic-ui-react\";\nimport firebase from \"../../../server/firebase\";\nimport { connect } from \"react-redux\";\nimport { ImageUpload } from \"../ImageUpload/ImageUpload.component\"; // import uuidv4 from \"uuid/v4\";\n\nimport uuid from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MessageInput = props => {\n  _s();\n\n  const messageRef = firebase.database().ref('messages');\n  const storageRef = firebase.storage().ref();\n  const [messageState, setMessageState] = useState(\"\");\n  const [fileDialogState, setFileDialog] = useState(false);\n\n  const createMessageInfo = downloadUrl => {\n    return {\n      user: {\n        avatar: props.user.photoURL,\n        name: props.user.displayName,\n        id: props.user.uid\n      },\n      content: messageState,\n      image: downloadUrl || \"\",\n      timestamp: firebase.database.ServerValue.TIMESTAMP\n    };\n  };\n\n  const sendMessage = downloadUrl => {\n    if (messageState || downloadUrl) {\n      messageRef.child(props.channel.id) //   messageRef.child( Math.floor(Math.random()))\n      .push().set(createMessageInfo(downloadUrl)).then(() => setMessageState(\"\")).catch(err => console.log(err));\n    }\n  };\n\n  const onMessageChange = e => {\n    const target = e.target;\n    setMessageState(target.value);\n  };\n\n  const createActionButtons = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        icon: \"send\",\n        onClick: () => {\n          sendMessage();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        icon: \"upload\",\n        onClick: () => setFileDialog(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  };\n\n  const uploadImage = (file, contentType) => {\n    // const filePath = `chat/images/${uuidv4()}.jpg`;\n    const filePath = `chat/images/${uuid()}.jpg`;\n    storageRef.child(filePath).put(file, {\n      contentType: contentType\n    }).then(data => {\n      data.ref.getDownloadURL().then(url => {\n        sendMessage(url);\n      }).catch(err => console.log(err));\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Segment, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      onChange: onMessageChange,\n      fluid: true,\n      name: \"message\",\n      value: messageState,\n      label: createActionButtons(),\n      labelPosition: \"right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ImageUpload, {\n      uploadImage: uploadImage,\n      open: fileDialogState,\n      onClose: () => setFileDialog(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 12\n  }, this);\n};\n\n_s(MessageInput, \"qo54NsztewzO/94CAGxmASPVP6o=\");\n\n_c = MessageInput;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.currentUser,\n    channel: state.channel.currentChannel\n  };\n};\n\nexport default connect(mapStateToProps)(MessageInput);\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageInput\");","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/Messages/MessageInput/MessageInput.component.jsx"],"names":["React","useState","Segment","Input","Button","firebase","connect","ImageUpload","uuid","MessageInput","props","messageRef","database","ref","storageRef","storage","messageState","setMessageState","fileDialogState","setFileDialog","createMessageInfo","downloadUrl","user","avatar","photoURL","name","displayName","id","uid","content","image","timestamp","ServerValue","TIMESTAMP","sendMessage","child","channel","push","set","then","catch","err","console","log","onMessageChange","e","target","value","createActionButtons","uploadImage","file","contentType","filePath","put","data","getDownloadURL","url","mapStateToProps","state","currentUser","currentChannel"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Segment, Input, Button } from \"semantic-ui-react\";\nimport firebase from \"../../../server/firebase\";\nimport { connect } from \"react-redux\";\nimport { ImageUpload } from \"../ImageUpload/ImageUpload.component\"\n// import uuidv4 from \"uuid/v4\";\nimport uuid from \"uuid\"\n\nconst MessageInput = (props) => {\n\n    const messageRef = firebase.database().ref('messages');\n\n    const storageRef = firebase.storage().ref();\n\n    const [messageState, setMessageState] = useState(\"\");\n\n    const [fileDialogState, setFileDialog] = useState(false);\n\n    const createMessageInfo = (downloadUrl) => {\n        return {\n            user: {\n                avatar: props.user.photoURL,\n                name: props.user.displayName,\n                id: props.user.uid\n            },\n            content: messageState,\n            image : downloadUrl || \"\",\n            timestamp: firebase.database.ServerValue.TIMESTAMP\n        }\n    }\n\n    const sendMessage = (downloadUrl) => {\n        if (messageState || downloadUrl) {\n            messageRef.child(props.channel.id)\n            //   messageRef.child( Math.floor(Math.random()))\n                .push()\n                .set(createMessageInfo(downloadUrl))\n                .then(() => setMessageState(\"\"))\n                .catch((err) => console.log(err))\n        }\n    }\n\n    const onMessageChange = (e) => {\n        const target = e.target;\n        setMessageState(target.value);\n    }\n\n    const createActionButtons = () => {\n        return <>\n            <Button icon=\"send\" onClick={() => {sendMessage() }} />\n            <Button icon=\"upload\" onClick={() => setFileDialog(true)} />\n        </>\n    }\n\n    const uploadImage = (file, contentType) => {\n\n        // const filePath = `chat/images/${uuidv4()}.jpg`;\n        const filePath = `chat/images/${uuid()}.jpg`;\n\n        storageRef.child(filePath).put(file, { contentType: contentType })\n            .then((data) => {\n                data.ref.getDownloadURL()\n                .then((url) => {\n                    sendMessage(url);\n                })\n                .catch((err) => console.log(err));\n            })\n            .catch((err) => console.log(err));\n    }\n\n    return <Segment>\n        <Input\n            onChange={onMessageChange}\n            fluid={true}\n            name=\"message\"\n            value={messageState}\n            label={createActionButtons()}\n            labelPosition=\"right\"\n        />\n        <ImageUpload uploadImage={uploadImage} open={fileDialogState} onClose={() => setFileDialog(false)} />\n    </Segment>\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user.currentUser,\n        channel: state.channel.currentChannel\n    }\n}\n\nexport default connect(mapStateToProps)(MessageInput);"]},"metadata":{},"sourceType":"module"}