{"ast":null,"code":"import { SET_USER, SET_CHANNEL, SET_FAVOURITECHANNEL, REMOVE_FAVOURITECHANNEL } from \"./actiontypes\";\nimport { combineReducers } from \"redux\";\nimport { authReducer } from \"./auth-reducer\";\nlet defaultUserState = {\n  currentUser: null\n};\n\nconst userReducer = (state = defaultUserState, action) => {\n  if (action.type === SET_USER) {\n    let payload = action.payload;\n    state = { ...payload\n    };\n    return state;\n  }\n\n  return state;\n};\n\nlet defaultChannelState = {\n  currentChannel: null,\n  loading: true\n};\n\nconst channelReducer = (state = defaultChannelState, action) => {\n  if (action.type === SET_CHANNEL) {\n    let payload = action.payload;\n    state = { ...payload\n    };\n    state.loading = false;\n    return state;\n  }\n\n  return state;\n};\n\nlet defaultFavouriteChannelState = {\n  favouriteChannel: {}\n};\n\nconst favouriteChannelReducer = (state = defaultFavouriteChannelState, action) => {\n  if (action.type === SET_FAVOURITECHANNEL) {\n    let payload = action.payload.favouriteChannel;\n    let updatedState = { ...state.favouriteChannel\n    };\n    updatedState[payload.channelId] = payload.channelName;\n    return {\n      favouriteChannel: updatedState\n    };\n  } else if (action.type === REMOVE_FAVOURITECHANNEL) {\n    let payload = action.payload.favouriteChannel;\n    let updatedState = { ...state.favouriteChannel\n    };\n    delete updatedState[payload.channelId];\n    return {\n      favouriteChannel: updatedState\n    };\n  }\n\n  return state;\n}; // export const combinedReducers = combineReducers({ user: userReducer, channel: channelReducer ,favouriteChannel : favouriteChannelReducer  })\n\n\nexport const combinedReducers = combineReducers({\n  user: userReducer,\n  channel: channelReducer,\n  favouriteChannel: favouriteChannelReducer,\n  auth: authReducer\n});","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/store/reducer.js"],"names":["SET_USER","SET_CHANNEL","SET_FAVOURITECHANNEL","REMOVE_FAVOURITECHANNEL","combineReducers","authReducer","defaultUserState","currentUser","userReducer","state","action","type","payload","defaultChannelState","currentChannel","loading","channelReducer","defaultFavouriteChannelState","favouriteChannel","favouriteChannelReducer","updatedState","channelId","channelName","combinedReducers","user","channel","auth"],"mappings":"AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,oBAHF,EAIEC,uBAJF,QAKO,eALP;AAMA,SAASC,eAAT,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,IAAIC,gBAAgB,GAAG;AACrBC,EAAAA,WAAW,EAAE;AADQ,CAAvB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,gBAAT,EAA2BI,MAA3B,KAAsC;AACxD,MAAIA,MAAM,CAACC,IAAP,KAAgBX,QAApB,EAA8B;AAC5B,QAAIY,OAAO,GAAGF,MAAM,CAACE,OAArB;AACAH,IAAAA,KAAK,GAAG,EAAE,GAAGG;AAAL,KAAR;AACA,WAAOH,KAAP;AACD;;AACD,SAAOA,KAAP;AACD,CAPD;;AASA,IAAII,mBAAmB,GAAG;AACxBC,EAAAA,cAAc,EAAE,IADQ;AAExBC,EAAAA,OAAO,EAAE;AAFe,CAA1B;;AAKA,MAAMC,cAAc,GAAG,CAACP,KAAK,GAAGI,mBAAT,EAA8BH,MAA9B,KAAyC;AAC9D,MAAIA,MAAM,CAACC,IAAP,KAAgBV,WAApB,EAAiC;AAC/B,QAAIW,OAAO,GAAGF,MAAM,CAACE,OAArB;AACAH,IAAAA,KAAK,GAAG,EAAE,GAAGG;AAAL,KAAR;AACAH,IAAAA,KAAK,CAACM,OAAN,GAAgB,KAAhB;AACA,WAAON,KAAP;AACD;;AACD,SAAOA,KAAP;AACD,CARD;;AAUA,IAAIQ,4BAA4B,GAAG;AACjCC,EAAAA,gBAAgB,EAAE;AADe,CAAnC;;AAIA,MAAMC,uBAAuB,GAAG,CAC9BV,KAAK,GAAGQ,4BADsB,EAE9BP,MAF8B,KAG3B;AACH,MAAIA,MAAM,CAACC,IAAP,KAAgBT,oBAApB,EAA0C;AACxC,QAAIU,OAAO,GAAGF,MAAM,CAACE,OAAP,CAAeM,gBAA7B;AACA,QAAIE,YAAY,GAAG,EAAE,GAAGX,KAAK,CAACS;AAAX,KAAnB;AACAE,IAAAA,YAAY,CAACR,OAAO,CAACS,SAAT,CAAZ,GAAkCT,OAAO,CAACU,WAA1C;AACA,WAAO;AAAEJ,MAAAA,gBAAgB,EAAEE;AAApB,KAAP;AACD,GALD,MAKO,IAAIV,MAAM,CAACC,IAAP,KAAgBR,uBAApB,EAA6C;AAClD,QAAIS,OAAO,GAAGF,MAAM,CAACE,OAAP,CAAeM,gBAA7B;AACA,QAAIE,YAAY,GAAG,EAAE,GAAGX,KAAK,CAACS;AAAX,KAAnB;AACA,WAAOE,YAAY,CAACR,OAAO,CAACS,SAAT,CAAnB;AACA,WAAO;AAAEH,MAAAA,gBAAgB,EAAEE;AAApB,KAAP;AACD;;AACD,SAAOX,KAAP;AACD,CAhBD,C,CAkBA;;;AACA,OAAO,MAAMc,gBAAgB,GAAGnB,eAAe,CAAC;AAC9CoB,EAAAA,IAAI,EAAEhB,WADwC;AAE9CiB,EAAAA,OAAO,EAAET,cAFqC;AAG9CE,EAAAA,gBAAgB,EAAEC,uBAH4B;AAI9CO,EAAAA,IAAI,EAAErB;AAJwC,CAAD,CAAxC","sourcesContent":["import {\n  SET_USER,\n  SET_CHANNEL,\n  SET_FAVOURITECHANNEL,\n  REMOVE_FAVOURITECHANNEL,\n} from \"./actiontypes\";\nimport { combineReducers } from \"redux\";\nimport { authReducer } from \"./auth-reducer\";\nlet defaultUserState = {\n  currentUser: null,\n};\n\nconst userReducer = (state = defaultUserState, action) => {\n  if (action.type === SET_USER) {\n    let payload = action.payload;\n    state = { ...payload };\n    return state;\n  }\n  return state;\n};\n\nlet defaultChannelState = {\n  currentChannel: null,\n  loading: true,\n};\n\nconst channelReducer = (state = defaultChannelState, action) => {\n  if (action.type === SET_CHANNEL) {\n    let payload = action.payload;\n    state = { ...payload };\n    state.loading = false;\n    return state;\n  }\n  return state;\n};\n\nlet defaultFavouriteChannelState = {\n  favouriteChannel: {},\n};\n\nconst favouriteChannelReducer = (\n  state = defaultFavouriteChannelState,\n  action\n) => {\n  if (action.type === SET_FAVOURITECHANNEL) {\n    let payload = action.payload.favouriteChannel;\n    let updatedState = { ...state.favouriteChannel };\n    updatedState[payload.channelId] = payload.channelName;\n    return { favouriteChannel: updatedState };\n  } else if (action.type === REMOVE_FAVOURITECHANNEL) {\n    let payload = action.payload.favouriteChannel;\n    let updatedState = { ...state.favouriteChannel };\n    delete updatedState[payload.channelId];\n    return { favouriteChannel: updatedState };\n  }\n  return state;\n};\n\n// export const combinedReducers = combineReducers({ user: userReducer, channel: channelReducer ,favouriteChannel : favouriteChannelReducer  })\nexport const combinedReducers = combineReducers({\n  user: userReducer,\n  channel: channelReducer,\n  favouriteChannel: favouriteChannelReducer,\n  auth: authReducer,\n});\n"]},"metadata":{},"sourceType":"module"}