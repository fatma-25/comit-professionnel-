{"ast":null,"code":"var _jsxFileName = \"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/SharedDocument.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ReadAndDownold from \"../ReadAndDownold\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SharedDocument = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [url, seturl] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\"http://localhost:2000/file\");\n      setData(result.data);\n    };\n\n    fetchData();\n  }, []);\n\n  viewHandler = async e => {\n    console.log(e.fileName, \"eeee\");\n    const fileName = e.fileName;\n    axios( //     {\n    //   url: `http://localhost:2000/pdf`,\n    //   method: \"GET\",\n    //   responseType: \"blob\",\n    // }\n    `http://localhost:2000/pdf`, {\n      fileName\n    }).then(response => {\n      //   this.setState({\n      //     url: window.URL.createObjectURL(\n      //       new Blob([response.data], { type: \"application/pdf\" })\n      //     ),\n      //   });\n      seturl(window.URL.createObjectURL(new Blob([response.data], {\n        type: \"application/pdf\"\n      })), console.log(response, \"ress\"));\n      const url = window.URL.createObjectURL(new Blob([response.data], {\n        type: \"application/pdf\"\n      }));\n      window.open(url);\n    });\n  };\n\n  download = () => {\n    const link = document.createElement(\"a\");\n    link.href = this.state.url;\n    link.setAttribute(\"download\", \"file.pdf\");\n    document.body.appendChild(link);\n    link.click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\"\n    },\n    children: data.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card\",\n      style: {\n        margin: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          class: \"card-img-top\",\n          style: {\n            width: 100,\n            height: 100\n          },\n          src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0c/File_alt_font_awesome.svg/1024px-File_alt_font_awesome.svg.png\",\n          alt: \"Card image cap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          class: \"card-title\",\n          style: {\n            marginTop: 50,\n            marginLeft: 20\n          },\n          children: e.filename\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"card-text\",\n          children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          //   href=\"#\"\n          class: \"btn btn-primary\",\n          style: {\n            backgroundColor: \"#00AAEE\"\n          },\n          onClick: e => console.log(\"eee\"),\n          children: \"Open file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => // this.viewHandler(e)\n          {\n            console.log(e, \"eee\"); //   axios(\n            //     //     {\n            //     //   url: `http://localhost:2000/pdf`,\n            //     //   method: \"GET\",\n            //     //   responseType: \"blob\",\n            //     // }\n            //     `http://localhost:2000/pdf`,\n            //     { fileName }\n            //   ).then((response) => {\n            //     //   this.setState({\n            //     //     url: window.URL.createObjectURL(\n            //     //       new Blob([response.data], { type: \"application/pdf\" })\n            //     //     ),\n            //     //   });\n            //     seturl(\n            //       window.URL.createObjectURL(\n            //         new Blob([response.data], { type: \"application/pdf\" })\n            //       ),\n            //       console.log(response, \"ress\")\n            //     );\n            //     const url = window.URL.createObjectURL(\n            //       new Blob([response.data], { type: \"application/pdf\" })\n            //     );\n            //     window.open(url);\n            //   });\n          },\n          children: [\" \", \"View Pdf\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.download,\n          children: \"download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SharedDocument, \"qO1cKja/T2RxW2MRZwK5JRkf6lk=\");\n\n_c = SharedDocument;\nexport default SharedDocument;\n\nvar _c;\n\n$RefreshReg$(_c, \"SharedDocument\");","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/SharedDocument.js"],"names":["React","useEffect","useState","axios","ReadAndDownold","SharedDocument","data","setData","url","seturl","fetchData","result","viewHandler","e","console","log","fileName","then","response","window","URL","createObjectURL","Blob","type","open","download","link","document","createElement","href","state","setAttribute","body","appendChild","click","display","flexDirection","map","margin","width","height","marginTop","marginLeft","filename","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ReadAndDownold from \"../ReadAndDownold\";\nconst SharedDocument = () => {\n  const [data, setData] = useState([]);\n  const [url, seturl] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\"http://localhost:2000/file\");\n\n      setData(result.data);\n    };\n\n    fetchData();\n  }, []);\n\n  viewHandler = async (e) => {\n    console.log(e.fileName, \"eeee\");\n    const fileName = e.fileName;\n    axios(\n      //     {\n      //   url: `http://localhost:2000/pdf`,\n      //   method: \"GET\",\n      //   responseType: \"blob\",\n      // }\n      `http://localhost:2000/pdf`,\n      { fileName }\n    ).then((response) => {\n      //   this.setState({\n      //     url: window.URL.createObjectURL(\n      //       new Blob([response.data], { type: \"application/pdf\" })\n      //     ),\n      //   });\n      seturl(\n        window.URL.createObjectURL(\n          new Blob([response.data], { type: \"application/pdf\" })\n        ),\n        console.log(response, \"ress\")\n      );\n      const url = window.URL.createObjectURL(\n        new Blob([response.data], { type: \"application/pdf\" })\n      );\n      window.open(url);\n    });\n  };\n\n  download = () => {\n    const link = document.createElement(\"a\");\n    link.href = this.state.url;\n    link.setAttribute(\"download\", \"file.pdf\");\n    document.body.appendChild(link);\n    link.click();\n  };\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n      {data.map((e) => (\n        <div class=\"card\" style={{ margin: 30 }}>\n          <div style={{ display: \"flex\" }}>\n            <img\n              class=\"card-img-top\"\n              style={{ width: 100, height: 100 }}\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0c/File_alt_font_awesome.svg/1024px-File_alt_font_awesome.svg.png\"\n              alt=\"Card image cap\"\n            />\n            <h5 class=\"card-title\" style={{ marginTop: 50, marginLeft: 20 }}>\n              {e.filename}\n            </h5>\n          </div>\n          <div class=\"card-body\">\n            <p class=\"card-text\">\n              Some quick example text to build on the card title and make up the\n              bulk of the card's content.\n            </p>\n            <button\n              //   href=\"#\"\n              class=\"btn btn-primary\"\n              style={{ backgroundColor: \"#00AAEE\" }}\n              onClick={(e) => console.log(\"eee\")}\n            >\n              Open file\n            </button>\n            {/* <ReadAndDownold /> */}\n            <button\n              onClick={() =>\n                // this.viewHandler(e)\n                {\n                  console.log(e, \"eee\");\n                  //   axios(\n                  //     //     {\n                  //     //   url: `http://localhost:2000/pdf`,\n                  //     //   method: \"GET\",\n                  //     //   responseType: \"blob\",\n                  //     // }\n                  //     `http://localhost:2000/pdf`,\n                  //     { fileName }\n                  //   ).then((response) => {\n                  //     //   this.setState({\n                  //     //     url: window.URL.createObjectURL(\n                  //     //       new Blob([response.data], { type: \"application/pdf\" })\n                  //     //     ),\n                  //     //   });\n                  //     seturl(\n                  //       window.URL.createObjectURL(\n                  //         new Blob([response.data], { type: \"application/pdf\" })\n                  //       ),\n                  //       console.log(response, \"ress\")\n                  //     );\n                  //     const url = window.URL.createObjectURL(\n                  //       new Blob([response.data], { type: \"application/pdf\" })\n                  //     );\n                  //     window.open(url);\n                  //   });\n                }\n              }\n            >\n              {\" \"}\n              View Pdf{\" \"}\n            </button>\n            <button onClick={this.download}>download</button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SharedDocument;\n"]},"metadata":{},"sourceType":"module"}