{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/appointmentPopup/popup.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getWidth } from \"../../../core/utils/size\";\nimport devices from \"../../../core/devices\";\nimport $ from \"../../../core/renderer\";\nimport dateUtils from \"../../../core/utils/date\";\nimport { Deferred, when } from \"../../../core/utils/deferred\";\nimport { getWindow, hasWindow } from \"../../../core/utils/window\";\nimport { triggerResizeEvent } from \"../../../events/visibility_change\";\nimport messageLocalization from \"../../../localization/message\";\nimport Popup from \"../../popup\";\nimport { hide as hideLoading, show as showLoading } from \"../loading\";\nimport { createAppointmentAdapter } from \"../appointmentAdapter\";\nvar toMs = dateUtils.dateToMilliseconds;\nvar APPOINTMENT_POPUP_CLASS = \"dx-scheduler-appointment-popup\";\n\nvar isMobile = () => \"desktop\" !== devices.current().deviceType;\n\nvar isIOSPlatform = () => \"ios\" === devices.current().platform;\n\nvar POPUP_WIDTH = {\n  DEFAULT: 485,\n  RECURRENCE: 970,\n  FULLSCREEN: 1e3,\n  MOBILE: {\n    DEFAULT: 350,\n    FULLSCREEN: 500\n  }\n};\nvar TOOLBAR_LOCATION = {\n  AFTER: \"after\",\n  BEFORE: \"before\"\n};\nvar DAY_IN_MS = toMs(\"day\");\nvar POPUP_CONFIG = {\n  height: \"auto\",\n  maxHeight: \"100%\",\n  showCloseButton: false,\n  showTitle: false,\n  defaultOptionsRules: [{\n    device: () => devices.current().android,\n    options: {\n      showTitle: false\n    }\n  }]\n};\n\nvar createDoneButtonConfig = () => ({\n  shortcut: \"done\",\n  options: {\n    text: messageLocalization.format(\"Done\")\n  },\n  location: TOOLBAR_LOCATION.AFTER\n});\n\nvar createCancelButtonConfig = () => ({\n  shortcut: \"cancel\",\n  location: isIOSPlatform() ? TOOLBAR_LOCATION.BEFORE : TOOLBAR_LOCATION.AFTER\n});\n\nexport var ACTION_TO_APPOINTMENT = {\n  CREATE: 0,\n  UPDATE: 1,\n  EXCLUDE_FROM_SERIES: 2\n};\nexport class AppointmentPopup {\n  constructor(scheduler, form) {\n    this.scheduler = scheduler;\n    this.form = form;\n    this.popup = null;\n    this.state = {\n      action: null,\n      lastEditData: null,\n      saveChangesLocker: false,\n      appointment: {\n        data: null\n      }\n    };\n  }\n\n  get key() {\n    return this.scheduler.getKey();\n  }\n\n  get visible() {\n    return this.popup ? this.popup.option(\"visible\") : false;\n  }\n\n  show(appointment, config) {\n    this.state.appointment.data = appointment;\n    this.state.action = config.action;\n    this.state.excludeInfo = config.excludeInfo;\n\n    if (!this.popup) {\n      var popupConfig = this._createPopupConfig();\n\n      this.popup = this._createPopup(popupConfig);\n    }\n\n    this.popup.option(\"toolbarItems\", this._createPopupToolbarItems(config.isToolbarVisible));\n    this.popup.show();\n  }\n\n  hide() {\n    this.popup.hide();\n  }\n\n  dispose() {\n    var _this$popup;\n\n    null === (_this$popup = this.popup) || void 0 === _this$popup ? void 0 : _this$popup.$element().remove();\n  }\n\n  _createPopup(options) {\n    var popupElement = $(\"<div>\").addClass(APPOINTMENT_POPUP_CLASS).appendTo(this.scheduler.getElement());\n    return this.scheduler.createComponent(popupElement, Popup, options);\n  }\n\n  _createPopupConfig() {\n    return _extends({}, POPUP_CONFIG, {\n      onHiding: () => this.scheduler.focus(),\n      contentTemplate: () => this._createPopupContent(),\n      onShowing: e => this._onShowing(e),\n      copyRootClassesToWrapper: true,\n      _ignoreCopyRootClassesToWrapperDeprecation: true\n    });\n  }\n\n  _onShowing(e) {\n    this._updateForm();\n\n    var arg = {\n      form: this.form.dxForm,\n      popup: this.popup,\n      appointmentData: this.state.appointment.data,\n      cancel: false\n    };\n    this.scheduler.getAppointmentFormOpening()(arg);\n    this.scheduler.processActionResult(arg, canceled => {\n      if (canceled) {\n        e.cancel = true;\n      } else {\n        this.updatePopupFullScreenMode();\n      }\n    });\n  }\n\n  _createPopupContent() {\n    this._createForm();\n\n    return this.form.dxForm.$element();\n  }\n\n  _createFormData(rawAppointment) {\n    var appointment = this._createAppointmentAdapter(rawAppointment);\n\n    var resources = this.scheduler.getResourcesFromItem(rawAppointment);\n    return _extends({}, rawAppointment, resources, {\n      repeat: !!appointment.recurrenceRule\n    });\n  }\n\n  _createForm() {\n    var rawAppointment = this.state.appointment.data;\n\n    var formData = this._createFormData(rawAppointment);\n\n    this.form.create(this.triggerResize.bind(this), this.changeSize.bind(this), formData);\n  }\n\n  _isReadOnly(rawAppointment) {\n    var appointment = this._createAppointmentAdapter(rawAppointment);\n\n    if (rawAppointment && appointment.disabled) {\n      return true;\n    }\n\n    if (this.state.action === ACTION_TO_APPOINTMENT.CREATE) {\n      return false;\n    }\n\n    return !this.scheduler.getEditingConfig().allowUpdating;\n  }\n\n  _createAppointmentAdapter(rawAppointment) {\n    return createAppointmentAdapter(rawAppointment, this.scheduler.getDataAccessors(), this.scheduler.getTimeZoneCalculator());\n  }\n\n  _updateForm() {\n    var {\n      data: data\n    } = this.state.appointment;\n\n    var appointment = this._createAppointmentAdapter(this._createFormData(data));\n\n    if (appointment.startDate) {\n      appointment.startDate = appointment.calculateStartDate(\"toAppointment\");\n    }\n\n    if (appointment.endDate) {\n      appointment.endDate = appointment.calculateEndDate(\"toAppointment\");\n    }\n\n    var formData = appointment.source();\n    this.form.readOnly = this._isReadOnly(formData);\n    this.form.updateFormData(formData);\n  }\n\n  _isPopupFullScreenNeeded() {\n    var width = this._tryGetWindowWidth();\n\n    if (width) {\n      return isMobile() ? width < POPUP_WIDTH.MOBILE.FULLSCREEN : width < POPUP_WIDTH.FULLSCREEN;\n    }\n\n    return false;\n  }\n\n  _tryGetWindowWidth() {\n    if (hasWindow()) {\n      var window = getWindow();\n      return getWidth(window);\n    }\n  }\n\n  triggerResize() {\n    this.popup && triggerResizeEvent(this.popup.$element());\n  }\n\n  _getMaxWidth(isRecurrence) {\n    if (isMobile()) {\n      return POPUP_WIDTH.MOBILE.DEFAULT;\n    }\n\n    return isRecurrence ? POPUP_WIDTH.RECURRENCE : POPUP_WIDTH.DEFAULT;\n  }\n\n  changeSize(isRecurrence) {\n    var fullScreen = this._isPopupFullScreenNeeded();\n\n    this.popup.option({\n      fullScreen: fullScreen,\n      maxWidth: fullScreen ? \"100%\" : this._getMaxWidth(isRecurrence)\n    });\n  }\n\n  updatePopupFullScreenMode() {\n    if (this.form.dxForm) {\n      var formData = this.form.formData;\n      var isRecurrence = formData[this.scheduler.getDataAccessors().expr.recurrenceRuleExpr];\n\n      if (this.visible) {\n        this.changeSize(isRecurrence);\n      }\n    }\n  }\n\n  _createPopupToolbarItems(isVisible) {\n    var result = [];\n\n    if (isVisible) {\n      result.push(_extends({}, createDoneButtonConfig(), {\n        onClick: e => this._doneButtonClickHandler(e)\n      }));\n    }\n\n    result.push(createCancelButtonConfig());\n    return result;\n  }\n\n  saveChangesAsync(isShowLoadPanel) {\n    var deferred = new Deferred();\n    var validation = this.form.dxForm.validate();\n    isShowLoadPanel && this._showLoadPanel();\n    when(validation && validation.complete || validation).done(validation => {\n      if (validation && !validation.isValid) {\n        hideLoading();\n        deferred.resolve(false);\n        return;\n      }\n\n      var adapter = this._createAppointmentAdapter(this.form.formData);\n\n      var appointment = adapter.clone({\n        pathTimeZone: \"fromAppointment\"\n      }).source();\n      delete appointment.repeat;\n\n      switch (this.state.action) {\n        case ACTION_TO_APPOINTMENT.CREATE:\n          this.scheduler.addAppointment(appointment).done(deferred.resolve);\n          break;\n\n        case ACTION_TO_APPOINTMENT.UPDATE:\n          this.scheduler.updateAppointment(this.state.appointment.data, appointment).done(deferred.resolve);\n          break;\n\n        case ACTION_TO_APPOINTMENT.EXCLUDE_FROM_SERIES:\n          this.scheduler.updateAppointment(this.state.excludeInfo.sourceAppointment, this.state.excludeInfo.updatedAppointment);\n          this.scheduler.addAppointment(appointment).done(deferred.resolve);\n      }\n\n      deferred.done(() => {\n        hideLoading();\n        this.state.lastEditData = appointment;\n      });\n    });\n    return deferred.promise();\n  }\n\n  _doneButtonClickHandler(e) {\n    e.cancel = true;\n    this.saveEditDataAsync();\n  }\n\n  saveEditDataAsync() {\n    var deferred = new Deferred();\n\n    if (this._tryLockSaveChanges()) {\n      when(this.saveChangesAsync(true)).done(() => {\n        if (this.state.lastEditData) {\n          var adapter = this._createAppointmentAdapter(this.state.lastEditData);\n\n          var {\n            startDate: startDate,\n            endDate: endDate,\n            allDay: allDay\n          } = adapter;\n          var startTime = startDate.getTime();\n          var endTime = endDate.getTime();\n          var inAllDayRow = allDay || endTime - startTime >= DAY_IN_MS;\n          var resources = this.scheduler.getResourcesFromItem(this.state.lastEditData);\n          this.scheduler.updateScrollPosition(startDate, resources, inAllDayRow);\n          this.state.lastEditData = null;\n        }\n\n        this._unlockSaveChanges();\n\n        deferred.resolve();\n      });\n    }\n\n    return deferred.promise();\n  }\n\n  _showLoadPanel() {\n    var container = this.popup.$overlayContent();\n    showLoading({\n      container: container,\n      position: {\n        of: container\n      },\n      copyRootClassesToWrapper: true,\n      _ignoreCopyRootClassesToWrapperDeprecation: true\n    });\n  }\n\n  _tryLockSaveChanges() {\n    if (false === this.state.saveChangesLocker) {\n      this.state.saveChangesLocker = true;\n      return true;\n    }\n\n    return false;\n  }\n\n  _unlockSaveChanges() {\n    this.state.saveChangesLocker = false;\n  }\n\n}","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/node_modules/devextreme/esm/ui/scheduler/appointmentPopup/popup.js"],"names":["_extends","getWidth","devices","$","dateUtils","Deferred","when","getWindow","hasWindow","triggerResizeEvent","messageLocalization","Popup","hide","hideLoading","show","showLoading","createAppointmentAdapter","toMs","dateToMilliseconds","APPOINTMENT_POPUP_CLASS","isMobile","current","deviceType","isIOSPlatform","platform","POPUP_WIDTH","DEFAULT","RECURRENCE","FULLSCREEN","MOBILE","TOOLBAR_LOCATION","AFTER","BEFORE","DAY_IN_MS","POPUP_CONFIG","height","maxHeight","showCloseButton","showTitle","defaultOptionsRules","device","android","options","createDoneButtonConfig","shortcut","text","format","location","createCancelButtonConfig","ACTION_TO_APPOINTMENT","CREATE","UPDATE","EXCLUDE_FROM_SERIES","AppointmentPopup","constructor","scheduler","form","popup","state","action","lastEditData","saveChangesLocker","appointment","data","key","getKey","visible","option","config","excludeInfo","popupConfig","_createPopupConfig","_createPopup","_createPopupToolbarItems","isToolbarVisible","dispose","_this$popup","$element","remove","popupElement","addClass","appendTo","getElement","createComponent","onHiding","focus","contentTemplate","_createPopupContent","onShowing","e","_onShowing","copyRootClassesToWrapper","_ignoreCopyRootClassesToWrapperDeprecation","_updateForm","arg","dxForm","appointmentData","cancel","getAppointmentFormOpening","processActionResult","canceled","updatePopupFullScreenMode","_createForm","_createFormData","rawAppointment","_createAppointmentAdapter","resources","getResourcesFromItem","repeat","recurrenceRule","formData","create","triggerResize","bind","changeSize","_isReadOnly","disabled","getEditingConfig","allowUpdating","getDataAccessors","getTimeZoneCalculator","startDate","calculateStartDate","endDate","calculateEndDate","source","readOnly","updateFormData","_isPopupFullScreenNeeded","width","_tryGetWindowWidth","window","_getMaxWidth","isRecurrence","fullScreen","maxWidth","expr","recurrenceRuleExpr","isVisible","result","push","onClick","_doneButtonClickHandler","saveChangesAsync","isShowLoadPanel","deferred","validation","validate","_showLoadPanel","complete","done","isValid","resolve","adapter","clone","pathTimeZone","addAppointment","updateAppointment","sourceAppointment","updatedAppointment","promise","saveEditDataAsync","_tryLockSaveChanges","allDay","startTime","getTime","endTime","inAllDayRow","updateScrollPosition","_unlockSaveChanges","container","$overlayContent","position","of"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/appointmentPopup/popup.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    getWidth\r\n} from \"../../../core/utils/size\";\r\nimport devices from \"../../../core/devices\";\r\nimport $ from \"../../../core/renderer\";\r\nimport dateUtils from \"../../../core/utils/date\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../../core/utils/deferred\";\r\nimport {\r\n    getWindow,\r\n    hasWindow\r\n} from \"../../../core/utils/window\";\r\nimport {\r\n    triggerResizeEvent\r\n} from \"../../../events/visibility_change\";\r\nimport messageLocalization from \"../../../localization/message\";\r\nimport Popup from \"../../popup\";\r\nimport {\r\n    hide as hideLoading,\r\n    show as showLoading\r\n} from \"../loading\";\r\nimport {\r\n    createAppointmentAdapter\r\n} from \"../appointmentAdapter\";\r\nvar toMs = dateUtils.dateToMilliseconds;\r\nvar APPOINTMENT_POPUP_CLASS = \"dx-scheduler-appointment-popup\";\r\nvar isMobile = () => \"desktop\" !== devices.current().deviceType;\r\nvar isIOSPlatform = () => \"ios\" === devices.current().platform;\r\nvar POPUP_WIDTH = {\r\n    DEFAULT: 485,\r\n    RECURRENCE: 970,\r\n    FULLSCREEN: 1e3,\r\n    MOBILE: {\r\n        DEFAULT: 350,\r\n        FULLSCREEN: 500\r\n    }\r\n};\r\nvar TOOLBAR_LOCATION = {\r\n    AFTER: \"after\",\r\n    BEFORE: \"before\"\r\n};\r\nvar DAY_IN_MS = toMs(\"day\");\r\nvar POPUP_CONFIG = {\r\n    height: \"auto\",\r\n    maxHeight: \"100%\",\r\n    showCloseButton: false,\r\n    showTitle: false,\r\n    defaultOptionsRules: [{\r\n        device: () => devices.current().android,\r\n        options: {\r\n            showTitle: false\r\n        }\r\n    }]\r\n};\r\nvar createDoneButtonConfig = () => ({\r\n    shortcut: \"done\",\r\n    options: {\r\n        text: messageLocalization.format(\"Done\")\r\n    },\r\n    location: TOOLBAR_LOCATION.AFTER\r\n});\r\nvar createCancelButtonConfig = () => ({\r\n    shortcut: \"cancel\",\r\n    location: isIOSPlatform() ? TOOLBAR_LOCATION.BEFORE : TOOLBAR_LOCATION.AFTER\r\n});\r\nexport var ACTION_TO_APPOINTMENT = {\r\n    CREATE: 0,\r\n    UPDATE: 1,\r\n    EXCLUDE_FROM_SERIES: 2\r\n};\r\nexport class AppointmentPopup {\r\n    constructor(scheduler, form) {\r\n        this.scheduler = scheduler;\r\n        this.form = form;\r\n        this.popup = null;\r\n        this.state = {\r\n            action: null,\r\n            lastEditData: null,\r\n            saveChangesLocker: false,\r\n            appointment: {\r\n                data: null\r\n            }\r\n        }\r\n    }\r\n    get key() {\r\n        return this.scheduler.getKey()\r\n    }\r\n    get visible() {\r\n        return this.popup ? this.popup.option(\"visible\") : false\r\n    }\r\n    show(appointment, config) {\r\n        this.state.appointment.data = appointment;\r\n        this.state.action = config.action;\r\n        this.state.excludeInfo = config.excludeInfo;\r\n        if (!this.popup) {\r\n            var popupConfig = this._createPopupConfig();\r\n            this.popup = this._createPopup(popupConfig)\r\n        }\r\n        this.popup.option(\"toolbarItems\", this._createPopupToolbarItems(config.isToolbarVisible));\r\n        this.popup.show()\r\n    }\r\n    hide() {\r\n        this.popup.hide()\r\n    }\r\n    dispose() {\r\n        var _this$popup;\r\n        null === (_this$popup = this.popup) || void 0 === _this$popup ? void 0 : _this$popup.$element().remove()\r\n    }\r\n    _createPopup(options) {\r\n        var popupElement = $(\"<div>\").addClass(APPOINTMENT_POPUP_CLASS).appendTo(this.scheduler.getElement());\r\n        return this.scheduler.createComponent(popupElement, Popup, options)\r\n    }\r\n    _createPopupConfig() {\r\n        return _extends({}, POPUP_CONFIG, {\r\n            onHiding: () => this.scheduler.focus(),\r\n            contentTemplate: () => this._createPopupContent(),\r\n            onShowing: e => this._onShowing(e),\r\n            copyRootClassesToWrapper: true,\r\n            _ignoreCopyRootClassesToWrapperDeprecation: true\r\n        })\r\n    }\r\n    _onShowing(e) {\r\n        this._updateForm();\r\n        var arg = {\r\n            form: this.form.dxForm,\r\n            popup: this.popup,\r\n            appointmentData: this.state.appointment.data,\r\n            cancel: false\r\n        };\r\n        this.scheduler.getAppointmentFormOpening()(arg);\r\n        this.scheduler.processActionResult(arg, canceled => {\r\n            if (canceled) {\r\n                e.cancel = true\r\n            } else {\r\n                this.updatePopupFullScreenMode()\r\n            }\r\n        })\r\n    }\r\n    _createPopupContent() {\r\n        this._createForm();\r\n        return this.form.dxForm.$element()\r\n    }\r\n    _createFormData(rawAppointment) {\r\n        var appointment = this._createAppointmentAdapter(rawAppointment);\r\n        var resources = this.scheduler.getResourcesFromItem(rawAppointment);\r\n        return _extends({}, rawAppointment, resources, {\r\n            repeat: !!appointment.recurrenceRule\r\n        })\r\n    }\r\n    _createForm() {\r\n        var rawAppointment = this.state.appointment.data;\r\n        var formData = this._createFormData(rawAppointment);\r\n        this.form.create(this.triggerResize.bind(this), this.changeSize.bind(this), formData)\r\n    }\r\n    _isReadOnly(rawAppointment) {\r\n        var appointment = this._createAppointmentAdapter(rawAppointment);\r\n        if (rawAppointment && appointment.disabled) {\r\n            return true\r\n        }\r\n        if (this.state.action === ACTION_TO_APPOINTMENT.CREATE) {\r\n            return false\r\n        }\r\n        return !this.scheduler.getEditingConfig().allowUpdating\r\n    }\r\n    _createAppointmentAdapter(rawAppointment) {\r\n        return createAppointmentAdapter(rawAppointment, this.scheduler.getDataAccessors(), this.scheduler.getTimeZoneCalculator())\r\n    }\r\n    _updateForm() {\r\n        var {\r\n            data: data\r\n        } = this.state.appointment;\r\n        var appointment = this._createAppointmentAdapter(this._createFormData(data));\r\n        if (appointment.startDate) {\r\n            appointment.startDate = appointment.calculateStartDate(\"toAppointment\")\r\n        }\r\n        if (appointment.endDate) {\r\n            appointment.endDate = appointment.calculateEndDate(\"toAppointment\")\r\n        }\r\n        var formData = appointment.source();\r\n        this.form.readOnly = this._isReadOnly(formData);\r\n        this.form.updateFormData(formData)\r\n    }\r\n    _isPopupFullScreenNeeded() {\r\n        var width = this._tryGetWindowWidth();\r\n        if (width) {\r\n            return isMobile() ? width < POPUP_WIDTH.MOBILE.FULLSCREEN : width < POPUP_WIDTH.FULLSCREEN\r\n        }\r\n        return false\r\n    }\r\n    _tryGetWindowWidth() {\r\n        if (hasWindow()) {\r\n            var window = getWindow();\r\n            return getWidth(window)\r\n        }\r\n    }\r\n    triggerResize() {\r\n        this.popup && triggerResizeEvent(this.popup.$element())\r\n    }\r\n    _getMaxWidth(isRecurrence) {\r\n        if (isMobile()) {\r\n            return POPUP_WIDTH.MOBILE.DEFAULT\r\n        }\r\n        return isRecurrence ? POPUP_WIDTH.RECURRENCE : POPUP_WIDTH.DEFAULT\r\n    }\r\n    changeSize(isRecurrence) {\r\n        var fullScreen = this._isPopupFullScreenNeeded();\r\n        this.popup.option({\r\n            fullScreen: fullScreen,\r\n            maxWidth: fullScreen ? \"100%\" : this._getMaxWidth(isRecurrence)\r\n        })\r\n    }\r\n    updatePopupFullScreenMode() {\r\n        if (this.form.dxForm) {\r\n            var formData = this.form.formData;\r\n            var isRecurrence = formData[this.scheduler.getDataAccessors().expr.recurrenceRuleExpr];\r\n            if (this.visible) {\r\n                this.changeSize(isRecurrence)\r\n            }\r\n        }\r\n    }\r\n    _createPopupToolbarItems(isVisible) {\r\n        var result = [];\r\n        if (isVisible) {\r\n            result.push(_extends({}, createDoneButtonConfig(), {\r\n                onClick: e => this._doneButtonClickHandler(e)\r\n            }))\r\n        }\r\n        result.push(createCancelButtonConfig());\r\n        return result\r\n    }\r\n    saveChangesAsync(isShowLoadPanel) {\r\n        var deferred = new Deferred;\r\n        var validation = this.form.dxForm.validate();\r\n        isShowLoadPanel && this._showLoadPanel();\r\n        when(validation && validation.complete || validation).done(validation => {\r\n            if (validation && !validation.isValid) {\r\n                hideLoading();\r\n                deferred.resolve(false);\r\n                return\r\n            }\r\n            var adapter = this._createAppointmentAdapter(this.form.formData);\r\n            var appointment = adapter.clone({\r\n                pathTimeZone: \"fromAppointment\"\r\n            }).source();\r\n            delete appointment.repeat;\r\n            switch (this.state.action) {\r\n                case ACTION_TO_APPOINTMENT.CREATE:\r\n                    this.scheduler.addAppointment(appointment).done(deferred.resolve);\r\n                    break;\r\n                case ACTION_TO_APPOINTMENT.UPDATE:\r\n                    this.scheduler.updateAppointment(this.state.appointment.data, appointment).done(deferred.resolve);\r\n                    break;\r\n                case ACTION_TO_APPOINTMENT.EXCLUDE_FROM_SERIES:\r\n                    this.scheduler.updateAppointment(this.state.excludeInfo.sourceAppointment, this.state.excludeInfo.updatedAppointment);\r\n                    this.scheduler.addAppointment(appointment).done(deferred.resolve)\r\n            }\r\n            deferred.done(() => {\r\n                hideLoading();\r\n                this.state.lastEditData = appointment\r\n            })\r\n        });\r\n        return deferred.promise()\r\n    }\r\n    _doneButtonClickHandler(e) {\r\n        e.cancel = true;\r\n        this.saveEditDataAsync()\r\n    }\r\n    saveEditDataAsync() {\r\n        var deferred = new Deferred;\r\n        if (this._tryLockSaveChanges()) {\r\n            when(this.saveChangesAsync(true)).done(() => {\r\n                if (this.state.lastEditData) {\r\n                    var adapter = this._createAppointmentAdapter(this.state.lastEditData);\r\n                    var {\r\n                        startDate: startDate,\r\n                        endDate: endDate,\r\n                        allDay: allDay\r\n                    } = adapter;\r\n                    var startTime = startDate.getTime();\r\n                    var endTime = endDate.getTime();\r\n                    var inAllDayRow = allDay || endTime - startTime >= DAY_IN_MS;\r\n                    var resources = this.scheduler.getResourcesFromItem(this.state.lastEditData);\r\n                    this.scheduler.updateScrollPosition(startDate, resources, inAllDayRow);\r\n                    this.state.lastEditData = null\r\n                }\r\n                this._unlockSaveChanges();\r\n                deferred.resolve()\r\n            })\r\n        }\r\n        return deferred.promise()\r\n    }\r\n    _showLoadPanel() {\r\n        var container = this.popup.$overlayContent();\r\n        showLoading({\r\n            container: container,\r\n            position: {\r\n                of: container\r\n            },\r\n            copyRootClassesToWrapper: true,\r\n            _ignoreCopyRootClassesToWrapperDeprecation: true\r\n        })\r\n    }\r\n    _tryLockSaveChanges() {\r\n        if (false === this.state.saveChangesLocker) {\r\n            this.state.saveChangesLocker = true;\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    _unlockSaveChanges() {\r\n        this.state.saveChangesLocker = false\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}