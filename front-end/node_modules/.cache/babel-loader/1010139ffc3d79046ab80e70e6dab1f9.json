{"ast":null,"code":"var _jsxFileName = \"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/EditProfile.js\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect } from \"react\";\n// import { Button, Form } from \"react-bootstrap\";\n// import { useState } from \"react\";\n// import { useHistory } from \"react-router\";\n// import axios from \"axios\";\n// const EditProfile = () => {\n//   const [data, setData] = useState([]);\n//   const [name, setname] = useState(\"\");\n//   const [lastName, setlastName] = useState(\"\");\n//   const [email, setemail] = useState(\"\");\n//   const history = useHistory();\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const userId = localStorage.getItem(\"id\");\n//       const result = await axios(`http://localhost:2000/api/auth/${userId}`);\n//       console.log(result.data, \"useerrr\");\n//       setData(result.data);\n//     };\n//     fetchData();\n//   }, []);\n//   return (\n//     <>\n//       <section id=\"cover\" class=\"min-vh-100\">\n//         <div id=\"cover-caption\" style={{ marginTop: \"100px\" }}>\n//           <div class=\"container\">\n//             <div class=\"row text-white\">\n//               <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\n//                 <div class=\"px-2\">\n//                   <Form>\n//                     <Form.Group controlId=\"formBasicEmail\">\n//                       <Form.Label className=\"itemlabel\">Name</Form.Label>\n//                       <Form.Control\n//                         className=\"itemStyle\"\n//                         type=\"name\"\n//                         placeholder={data.name}\n//                         name=\"name\"\n//                         value={name}\n//                         onChange={(e) => setname(e.target.value)}\n//                       />\n//                     </Form.Group>\n//                     <Form.Group controlId=\"formBasicPassword\">\n//                       <Form.Label className=\"itemlabel\">lastName</Form.Label>\n//                       <Form.Control\n//                         type=\"lastName\"\n//                         placeholder={data.lastName}\n//                         name=\"lastName\"\n//                         value={lastName}\n//                         className=\"itemStyle\"\n//                         onChange={(e) => setlastName(e.target.value)}\n//                       />\n//                     </Form.Group>\n//                     <Form.Group controlId=\"formBasicPassword\">\n//                       <Form.Label className=\"itemlabel\">Email</Form.Label>\n//                       <Form.Control\n//                         type=\"email\"\n//                         placeholder={data.email}\n//                         name=\"email\"\n//                         value={email}\n//                         className=\"itemStyle\"\n//                         onChange={(e) => setemail(e.target.value)}\n//                       />\n//                     </Form.Group>\n//                     <div\n//                       style={{\n//                         justifyContent: \"space-between\",\n//                         padding: \"5% 14%\",\n//                       }}\n//                     >\n//                       <Button\n//                         className=\"buttonStyle\"\n//                         variant=\"primary\"\n//                         type=\"submit\"\n//                         style={{ backgroundColor: \"#00AAEE\" }}\n//                         onClick={() =>\n//                           //  UpdateUser()\n//                           {\n//                             const editUser = { name, lastName, email };\n//                             console.log(editUser, \"editUser\");\n//                             const userId = localStorage.getItem(\"id\");\n//                             axios.put(\n//                               `http://localhost:2000/api/auth/${userId}`,\n//                               editUser\n//                             );\n//                             alert(\"edit user profile with success\");\n//                           }\n//                         }\n//                       >\n//                         Submit\n//                       </Button>\n//                     </div>\n//                   </Form>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </section>\n//     </>\n//   );\n// };\n// export default EditProfile;\n//************* */\n// import React, { useState } from \"react\";\n// // import { Grid, Header, Icon, Image, Dropdown } from \"semantic-ui-react\";\n// import { connect } from \"react-redux\";\n// // import firebase from \"../../../server/firebase\";\n// import { Button, Form } from \"react-bootstrap\";\n// // import \"./UserInfo.css\";\n// import firebase from \"../../server/firebase\";\n// const UserInfo = (props) => {\n//   const usersRef = firebase.database().ref(\"users\");\n//   const [name, setname] = useState(\"\");\n//   const [lastName, setlastName] = useState(\"\");\n//   const [email, setemail] = useState(\"\");\n//   if (props.user) {\n//     return (\n//       // <Grid>\n//       //     <Grid.Column>\n//       //         <Grid.Row className=\"userinfo_grid_row\">\n//       //             <Header inverted as=\"h2\">\n//       //                 {/* <Icon name=\"slack\" /> */}\n//       //                 <Header.Content>Soft Community</Header.Content>\n//       //             </Header>\n//       //             <Header className=\"userinfo_displayname\" inverted as=\"h4\">\n//       //                 <Dropdown\n//       //                     trigger={\n//       //                         <span>\n//       //                             {props.user.displayName}\n//       //                         </span>\n//       //                     }\n//       //                     options={getDropDownOptions()}\n//       //                 >\n//       //                 </Dropdown>\n//       //             </Header>\n//       //         </Grid.Row>\n//       //     </Grid.Column>\n//       // </Grid>\n//       <>\n//         <section id=\"cover\" class=\"min-vh-100\">\n//           <div id=\"cover-caption\" style={{ marginTop: \"100px\" }}>\n//             <div class=\"container\">\n//               <div class=\"row text-white\">\n//                 <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\n//                   <div class=\"px-2\">\n//                     <Form>\n//                       <Form.Group controlId=\"formBasicEmail\">\n//                         <Form.Label className=\"itemlabel\">Name</Form.Label>\n//                         <Form.Control\n//                           className=\"itemStyle\"\n//                           type=\"name\"\n//                           placeholder={props.user.displayName}\n//                           name=\"name\"\n//                           value={name}\n//                           onChange={(e) => setname(e.target.value)}\n//                         />\n//                       </Form.Group>\n//                       <Form.Group controlId=\"formBasicPassword\">\n//                         <Form.Label className=\"itemlabel\">lastName</Form.Label>\n//                         <Form.Control\n//                           type=\"lastName\"\n//                           placeholder={props.user.displayName}\n//                           name=\"lastName\"\n//                           value={lastName}\n//                           className=\"itemStyle\"\n//                           onChange={(e) => setlastName(e.target.value)}\n//                         />\n//                       </Form.Group>\n//                       <Form.Group controlId=\"formBasicPassword\">\n//                         <Form.Label className=\"itemlabel\">Email</Form.Label>\n//                         <Form.Control\n//                           type=\"email\"\n//                           placeholder={props.user.email}\n//                           name=\"email\"\n//                           value={email}\n//                           className=\"itemStyle\"\n//                           onChange={(e) => setemail(e.target.value)}\n//                         />\n//                       </Form.Group>\n//                       <div\n//                         style={{\n//                           justifyContent: \"space-between\",\n//                           padding: \"5% 14%\",\n//                         }}\n//                       >\n//                         {console.log(props.user.uid, \"ttfdbn\")}\n//                         <Button\n//                           className=\"buttonStyle\"\n//                           variant=\"primary\"\n//                           type=\"submit\"\n//                           style={{ backgroundColor: \"#00AAEE\" }}\n//                           onClick={(id = props.user.uid) =>\n//                             //  UpdateUser()\n//                             {\n//                               // console.log(editUser, \"editUser\");\n//                               // const userId = localStorage.getItem(\"id\");\n//                               // axios.put(\n//                               //   `http://localhost:2000/api/auth/${userId}`,\n//                               //   editUser\n//                               // );\n//                               {\n//                                 console.log(id, \"yyyy\");\n//                               }\n//                               const accountStatus = usersRef.child(id);\n//                               accountStatus.update({\n//                                 email: email,\n//                                 displayName: name,\n//                               });\n//                               alert(\"edit user profile with success\");\n//                             }\n//                           }\n//                         >\n//                           Submit\n//                         </Button>\n//                       </div>\n//                     </Form>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </section>\n//       </>\n//     );\n//   }\n//   return null;\n// };\n// const mapStateToProps = (state) => {\n//   return {\n//     user: state.user.currentUser,\n//   };\n// };\n// export default connect(mapStateToProps)(UserInfo);\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\"; // import firebase from \"../../server/firebase\";\n\nimport firebase from \"../../server/firebase\";\nimport store from \"../../index\"; // import { Nav, Navbar, Container, Button } from \"react-bootstrap\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditProfile = props => {\n  _s();\n\n  const [usersState, setUsersState] = useState([]);\n  const [connectedUsersState, setConnectedUsersState] = useState([]);\n  const usersRef = firebase.database().ref(\"users\");\n  const connectedRef = firebase.database().ref(\".info/connected\");\n  const statusRef = firebase.database().ref(\"status\");\n  useEffect(() => {\n    usersRef.on(\"child_added\", snap => {\n      setUsersState(currentState => {\n        let updatedState = [...currentState];\n        let user = snap.val();\n        user.name = user.displayName;\n        user.email = user.email;\n        user.status = user.status;\n        user.id = snap.key;\n        user.isPrivateChat = true;\n        updatedState.push(user);\n        return updatedState;\n      });\n    });\n    connectedRef.on(\"value\", snap => {\n      if (props.user && snap.val()) {\n        const userStatusRef = statusRef.child(props.user.uid);\n        userStatusRef.set(true);\n        userStatusRef.onDisconnect().remove();\n      }\n    });\n    return () => {\n      usersRef.off();\n      connectedRef.off();\n    };\n  }, [props.user]);\n  useEffect(() => {\n    statusRef.on(\"child_added\", snap => {\n      setConnectedUsersState(currentState => {\n        let updatedState = [...currentState];\n        updatedState.push(snap.key);\n        return updatedState;\n      });\n    });\n    statusRef.on(\"child_removed\", snap => {\n      setConnectedUsersState(currentState => {\n        let updatedState = [...currentState];\n        let index = updatedState.indexOf(snap.key);\n        updatedState.splice(index, 1);\n        return updatedState;\n      });\n    });\n    return () => statusRef.off();\n  }, [usersState]);\n\n  const displayUser = () => {\n    if (usersState.length > 0) {\n      return usersState.filter(user => user.id === store.getState().user.currentUser.uid).map(user => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"section\", {\n            id: \"cover\",\n            class: \"min-vh-100\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"cover-caption\",\n              style: {\n                marginTop: \"100px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"container\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"row text-white\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"px-2\",\n                      children: /*#__PURE__*/_jsxDEV(Form, {\n                        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                          controlId: \"formBasicEmail\",\n                          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                            className: \"itemlabel\",\n                            children: \"Name\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 338,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                            className: \"itemStyle\",\n                            type: \"name\",\n                            placeholder: props.user.displayName,\n                            name: \"name\",\n                            value: name,\n                            onChange: e => setname(e.target.value)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 341,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 337,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                          controlId: \"formBasicPassword\",\n                          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                            className: \"itemlabel\",\n                            children: \"lastName\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 352,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                            type: \"lastName\",\n                            placeholder: props.user.displayName,\n                            name: \"lastName\",\n                            value: lastName,\n                            className: \"itemStyle\",\n                            onChange: e => setlastName(e.target.value)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 355,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 351,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                          controlId: \"formBasicPassword\",\n                          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                            className: \"itemlabel\",\n                            children: \"Email\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 366,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                            type: \"email\",\n                            placeholder: props.user.email,\n                            name: \"email\",\n                            value: email,\n                            className: \"itemStyle\",\n                            onChange: e => setemail(e.target.value)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 369,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 365,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            justifyContent: \"space-between\",\n                            padding: \"5% 14%\"\n                          },\n                          children: [console.log(props.user.uid, \"ttfdbn\"), /*#__PURE__*/_jsxDEV(Button, {\n                            className: \"buttonStyle\",\n                            variant: \"primary\",\n                            type: \"submit\",\n                            style: {\n                              backgroundColor: \"#00AAEE\"\n                            },\n                            onClick: (id = props.user.uid) => //  UpdateUser()\n                            {\n                              // console.log(editUser, \"editUser\");\n                              // const userId = localStorage.getItem(\"id\");\n                              // axios.put(\n                              //   `http://localhost:2000/api/auth/${userId}`,\n                              //   editUser\n                              // );\n                              {\n                                console.log(id, \"yyyy\");\n                              }\n                              const accountStatus = usersRef.child(id);\n                              accountStatus.update({\n                                email: email,\n                                displayName: name\n                              });\n                              alert(\"edit user profile with success\");\n                            },\n                            children: \"Submit\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 385,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 378,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 336,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 335,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: displayUser()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 428,\n    columnNumber: 10\n  }, this);\n};\n\n_s(EditProfile, \"6U/V5/w1SKMexB1MZPyGIwXk8Wk=\");\n\n_c = EditProfile;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.currentUser,\n    channel: state.channel.currentChannel\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {// selectChannel: (channel) => dispatch(setChannel(channel)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfile);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfile\");","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/EditProfile.js"],"names":["React","useState","useEffect","connect","firebase","store","EditProfile","props","usersState","setUsersState","connectedUsersState","setConnectedUsersState","usersRef","database","ref","connectedRef","statusRef","on","snap","currentState","updatedState","user","val","name","displayName","email","status","id","key","isPrivateChat","push","userStatusRef","child","uid","set","onDisconnect","remove","off","index","indexOf","splice","displayUser","length","filter","getState","currentUser","map","marginTop","e","setname","target","value","lastName","setlastName","setemail","justifyContent","padding","console","log","backgroundColor","accountStatus","update","alert","mapStateToProps","state","channel","currentChannel","mapDispatchToProps","dispatch"],"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","sourcesContent":["// import React, { useEffect } from \"react\";\n// import { Button, Form } from \"react-bootstrap\";\n// import { useState } from \"react\";\n// import { useHistory } from \"react-router\";\n// import axios from \"axios\";\n\n// const EditProfile = () => {\n//   const [data, setData] = useState([]);\n//   const [name, setname] = useState(\"\");\n//   const [lastName, setlastName] = useState(\"\");\n//   const [email, setemail] = useState(\"\");\n//   const history = useHistory();\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const userId = localStorage.getItem(\"id\");\n//       const result = await axios(`http://localhost:2000/api/auth/${userId}`);\n//       console.log(result.data, \"useerrr\");\n//       setData(result.data);\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <>\n//       <section id=\"cover\" class=\"min-vh-100\">\n//         <div id=\"cover-caption\" style={{ marginTop: \"100px\" }}>\n//           <div class=\"container\">\n//             <div class=\"row text-white\">\n//               <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\n//                 <div class=\"px-2\">\n//                   <Form>\n//                     <Form.Group controlId=\"formBasicEmail\">\n//                       <Form.Label className=\"itemlabel\">Name</Form.Label>\n//                       <Form.Control\n//                         className=\"itemStyle\"\n//                         type=\"name\"\n//                         placeholder={data.name}\n//                         name=\"name\"\n//                         value={name}\n//                         onChange={(e) => setname(e.target.value)}\n//                       />\n//                     </Form.Group>\n\n//                     <Form.Group controlId=\"formBasicPassword\">\n//                       <Form.Label className=\"itemlabel\">lastName</Form.Label>\n//                       <Form.Control\n//                         type=\"lastName\"\n//                         placeholder={data.lastName}\n//                         name=\"lastName\"\n//                         value={lastName}\n//                         className=\"itemStyle\"\n//                         onChange={(e) => setlastName(e.target.value)}\n//                       />\n//                     </Form.Group>\n\n//                     <Form.Group controlId=\"formBasicPassword\">\n//                       <Form.Label className=\"itemlabel\">Email</Form.Label>\n//                       <Form.Control\n//                         type=\"email\"\n//                         placeholder={data.email}\n//                         name=\"email\"\n//                         value={email}\n//                         className=\"itemStyle\"\n//                         onChange={(e) => setemail(e.target.value)}\n//                       />\n//                     </Form.Group>\n//                     <div\n//                       style={{\n//                         justifyContent: \"space-between\",\n//                         padding: \"5% 14%\",\n//                       }}\n//                     >\n//                       <Button\n//                         className=\"buttonStyle\"\n//                         variant=\"primary\"\n//                         type=\"submit\"\n//                         style={{ backgroundColor: \"#00AAEE\" }}\n//                         onClick={() =>\n//                           //  UpdateUser()\n//                           {\n//                             const editUser = { name, lastName, email };\n\n//                             console.log(editUser, \"editUser\");\n//                             const userId = localStorage.getItem(\"id\");\n//                             axios.put(\n//                               `http://localhost:2000/api/auth/${userId}`,\n//                               editUser\n//                             );\n//                             alert(\"edit user profile with success\");\n//                           }\n//                         }\n//                       >\n//                         Submit\n//                       </Button>\n//                     </div>\n//                   </Form>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </section>\n//     </>\n//   );\n// };\n\n// export default EditProfile;\n\n//************* */\n\n// import React, { useState } from \"react\";\n// // import { Grid, Header, Icon, Image, Dropdown } from \"semantic-ui-react\";\n// import { connect } from \"react-redux\";\n// // import firebase from \"../../../server/firebase\";\n// import { Button, Form } from \"react-bootstrap\";\n// // import \"./UserInfo.css\";\n// import firebase from \"../../server/firebase\";\n// const UserInfo = (props) => {\n//   const usersRef = firebase.database().ref(\"users\");\n//   const [name, setname] = useState(\"\");\n//   const [lastName, setlastName] = useState(\"\");\n//   const [email, setemail] = useState(\"\");\n//   if (props.user) {\n//     return (\n//       // <Grid>\n//       //     <Grid.Column>\n//       //         <Grid.Row className=\"userinfo_grid_row\">\n//       //             <Header inverted as=\"h2\">\n//       //                 {/* <Icon name=\"slack\" /> */}\n//       //                 <Header.Content>Soft Community</Header.Content>\n//       //             </Header>\n//       //             <Header className=\"userinfo_displayname\" inverted as=\"h4\">\n//       //                 <Dropdown\n//       //                     trigger={\n//       //                         <span>\n\n//       //                             {props.user.displayName}\n//       //                         </span>\n//       //                     }\n//       //                     options={getDropDownOptions()}\n//       //                 >\n//       //                 </Dropdown>\n\n//       //             </Header>\n//       //         </Grid.Row>\n//       //     </Grid.Column>\n//       // </Grid>\n\n//       <>\n//         <section id=\"cover\" class=\"min-vh-100\">\n//           <div id=\"cover-caption\" style={{ marginTop: \"100px\" }}>\n//             <div class=\"container\">\n//               <div class=\"row text-white\">\n//                 <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\n//                   <div class=\"px-2\">\n//                     <Form>\n//                       <Form.Group controlId=\"formBasicEmail\">\n//                         <Form.Label className=\"itemlabel\">Name</Form.Label>\n//                         <Form.Control\n//                           className=\"itemStyle\"\n//                           type=\"name\"\n//                           placeholder={props.user.displayName}\n//                           name=\"name\"\n//                           value={name}\n//                           onChange={(e) => setname(e.target.value)}\n//                         />\n//                       </Form.Group>\n\n//                       <Form.Group controlId=\"formBasicPassword\">\n//                         <Form.Label className=\"itemlabel\">lastName</Form.Label>\n//                         <Form.Control\n//                           type=\"lastName\"\n//                           placeholder={props.user.displayName}\n//                           name=\"lastName\"\n//                           value={lastName}\n//                           className=\"itemStyle\"\n//                           onChange={(e) => setlastName(e.target.value)}\n//                         />\n//                       </Form.Group>\n\n//                       <Form.Group controlId=\"formBasicPassword\">\n//                         <Form.Label className=\"itemlabel\">Email</Form.Label>\n//                         <Form.Control\n//                           type=\"email\"\n//                           placeholder={props.user.email}\n//                           name=\"email\"\n//                           value={email}\n//                           className=\"itemStyle\"\n//                           onChange={(e) => setemail(e.target.value)}\n//                         />\n//                       </Form.Group>\n//                       <div\n//                         style={{\n//                           justifyContent: \"space-between\",\n//                           padding: \"5% 14%\",\n//                         }}\n//                       >\n//                         {console.log(props.user.uid, \"ttfdbn\")}\n//                         <Button\n//                           className=\"buttonStyle\"\n//                           variant=\"primary\"\n//                           type=\"submit\"\n//                           style={{ backgroundColor: \"#00AAEE\" }}\n//                           onClick={(id = props.user.uid) =>\n//                             //  UpdateUser()\n//                             {\n//                               // console.log(editUser, \"editUser\");\n//                               // const userId = localStorage.getItem(\"id\");\n//                               // axios.put(\n//                               //   `http://localhost:2000/api/auth/${userId}`,\n//                               //   editUser\n//                               // );\n//                               {\n//                                 console.log(id, \"yyyy\");\n//                               }\n//                               const accountStatus = usersRef.child(id);\n\n//                               accountStatus.update({\n//                                 email: email,\n//                                 displayName: name,\n//                               });\n//                               alert(\"edit user profile with success\");\n//                             }\n//                           }\n//                         >\n//                           Submit\n//                         </Button>\n//                       </div>\n//                     </Form>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </section>\n//       </>\n//     );\n//   }\n//   return null;\n// };\n\n// const mapStateToProps = (state) => {\n//   return {\n//     user: state.user.currentUser,\n//   };\n// };\n\n// export default connect(mapStateToProps)(UserInfo);\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n// import firebase from \"../../server/firebase\";\nimport firebase from \"../../server/firebase\";\n\nimport store from \"../../index\";\n// import { Nav, Navbar, Container, Button } from \"react-bootstrap\";\n\nconst EditProfile = (props) => {\n  const [usersState, setUsersState] = useState([]);\n\n  const [connectedUsersState, setConnectedUsersState] = useState([]);\n\n  const usersRef = firebase.database().ref(\"users\");\n\n  const connectedRef = firebase.database().ref(\".info/connected\");\n\n  const statusRef = firebase.database().ref(\"status\");\n\n  useEffect(() => {\n    usersRef.on(\"child_added\", (snap) => {\n      setUsersState((currentState) => {\n        let updatedState = [...currentState];\n\n        let user = snap.val();\n        user.name = user.displayName;\n        user.email = user.email;\n        user.status = user.status;\n        user.id = snap.key;\n        user.isPrivateChat = true;\n        updatedState.push(user);\n\n        return updatedState;\n      });\n    });\n\n    connectedRef.on(\"value\", (snap) => {\n      if (props.user && snap.val()) {\n        const userStatusRef = statusRef.child(props.user.uid);\n        userStatusRef.set(true);\n        userStatusRef.onDisconnect().remove();\n      }\n    });\n\n    return () => {\n      usersRef.off();\n      connectedRef.off();\n    };\n  }, [props.user]);\n\n  useEffect(() => {\n    statusRef.on(\"child_added\", (snap) => {\n      setConnectedUsersState((currentState) => {\n        let updatedState = [...currentState];\n        updatedState.push(snap.key);\n        return updatedState;\n      });\n    });\n\n    statusRef.on(\"child_removed\", (snap) => {\n      setConnectedUsersState((currentState) => {\n        let updatedState = [...currentState];\n\n        let index = updatedState.indexOf(snap.key);\n        updatedState.splice(index, 1);\n        return updatedState;\n      });\n    });\n\n    return () => statusRef.off();\n  }, [usersState]);\n\n  const displayUser = () => {\n    if (usersState.length > 0) {\n      return usersState\n        .filter((user) => user.id === store.getState().user.currentUser.uid)\n        .map((user) => {\n          return (\n            <>\n              <section id=\"cover\" class=\"min-vh-100\">\n                <div id=\"cover-caption\" style={{ marginTop: \"100px\" }}>\n                  <div class=\"container\">\n                    <div class=\"row text-white\">\n                      <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\n                        <div class=\"px-2\">\n                          <Form>\n                            <Form.Group controlId=\"formBasicEmail\">\n                              <Form.Label className=\"itemlabel\">\n                                Name\n                              </Form.Label>\n                              <Form.Control\n                                className=\"itemStyle\"\n                                type=\"name\"\n                                placeholder={props.user.displayName}\n                                name=\"name\"\n                                value={name}\n                                onChange={(e) => setname(e.target.value)}\n                              />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formBasicPassword\">\n                              <Form.Label className=\"itemlabel\">\n                                lastName\n                              </Form.Label>\n                              <Form.Control\n                                type=\"lastName\"\n                                placeholder={props.user.displayName}\n                                name=\"lastName\"\n                                value={lastName}\n                                className=\"itemStyle\"\n                                onChange={(e) => setlastName(e.target.value)}\n                              />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formBasicPassword\">\n                              <Form.Label className=\"itemlabel\">\n                                Email\n                              </Form.Label>\n                              <Form.Control\n                                type=\"email\"\n                                placeholder={props.user.email}\n                                name=\"email\"\n                                value={email}\n                                className=\"itemStyle\"\n                                onChange={(e) => setemail(e.target.value)}\n                              />\n                            </Form.Group>\n                            <div\n                              style={{\n                                justifyContent: \"space-between\",\n                                padding: \"5% 14%\",\n                              }}\n                            >\n                              {console.log(props.user.uid, \"ttfdbn\")}\n                              <Button\n                                className=\"buttonStyle\"\n                                variant=\"primary\"\n                                type=\"submit\"\n                                style={{ backgroundColor: \"#00AAEE\" }}\n                                onClick={(id = props.user.uid) =>\n                                  //  UpdateUser()\n                                  {\n                                    // console.log(editUser, \"editUser\");\n                                    // const userId = localStorage.getItem(\"id\");\n                                    // axios.put(\n                                    //   `http://localhost:2000/api/auth/${userId}`,\n                                    //   editUser\n                                    // );\n                                    {\n                                      console.log(id, \"yyyy\");\n                                    }\n                                    const accountStatus = usersRef.child(id);\n\n                                    accountStatus.update({\n                                      email: email,\n                                      displayName: name,\n                                    });\n                                    alert(\"edit user profile with success\");\n                                  }\n                                }\n                              >\n                                Submit\n                              </Button>\n                            </div>\n                          </Form>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </section>\n            </>\n          );\n        });\n    }\n  };\n\n  return <div>{displayUser()}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.currentUser,\n    channel: state.channel.currentChannel,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // selectChannel: (channel) => dispatch(setChannel(channel)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfile);\n"]},"metadata":{},"sourceType":"module"}