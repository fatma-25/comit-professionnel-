{"ast":null,"code":"var _jsxFileName = \"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/Auth /Register/Register.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Grid, Form, Segment, Header, Icon, Button, Message } from 'semantic-ui-react';\nimport firebase from '../../../server/firebase';\nimport \"../Auth.css\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  let user = {\n    userName: '',\n    email: '',\n    password: '',\n    confirmpassword: ''\n  };\n  let errors = [];\n  let userCollectionRef = firebase.database().ref('users');\n  const [userState, setuserState] = useState(user);\n  const [errorState, seterrorState] = useState(errors);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  const handleInput = event => {\n    let target = event.target;\n    setuserState(currentState => {\n      let currentuser = { ...currentState\n      };\n      currentuser[target.name] = target.value;\n      return currentuser;\n    });\n  };\n\n  const checkForm = () => {\n    if (isFormEmpty()) {\n      seterrorState(error => error.concat({\n        message: \"Please fill in all fields\"\n      }));\n      return false;\n    } else if (!checkPassword()) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const isFormEmpty = () => {\n    return !userState.userName.length || !userState.password.length || !userState.confirmpassword.length || !userState.email.length;\n  };\n\n  const checkPassword = () => {\n    if (userState.password.length < 8) {\n      seterrorState(error => error.concat({\n        message: \"Password length should be greater than 8\"\n      }));\n      return false;\n    } else if (userState.password !== userState.confirmpassword) {\n      seterrorState(error => error.concat({\n        message: \"Password and Confirm Password does not match\"\n      }));\n      return false;\n    }\n\n    return true;\n  };\n\n  const onSubmit = event => {\n    seterrorState(() => []);\n    setIsSuccess(false);\n\n    if (checkForm()) {\n      setIsLoading(true);\n      firebase.auth().createUserWithEmailAndPassword(userState.email, userState.password).then(createdUser => {\n        setIsLoading(false);\n        updateuserDetails(createdUser);\n      }).catch(serverError => {\n        setIsLoading(false);\n        seterrorState(error => error.concat(serverError));\n      });\n    }\n  };\n\n  const updateuserDetails = createdUser => {\n    if (createdUser) {\n      setIsLoading(true);\n      createdUser.user.updateProfile({\n        displayName: userState.userName,\n        photoURL: `http://gravatar.com/avatar/${createdUser.user.uid}?d=identicon`\n      }).then(() => {\n        setIsLoading(false);\n        saveUserInDB(createdUser);\n      }).catch(serverError => {\n        setIsLoading(false);\n        seterrorState(error => error.concat(serverError));\n      });\n    }\n  };\n\n  const saveUserInDB = createdUser => {\n    setIsLoading(true);\n    userCollectionRef.child(createdUser.user.uid).set({\n      displayName: createdUser.user.displayName,\n      photoURL: createdUser.user.photoURL\n    }).then(() => {\n      setIsLoading(false);\n      setIsSuccess(true);\n    }).catch(serverError => {\n      setIsLoading(false);\n      seterrorState(error => error.concat(serverError));\n    });\n  };\n\n  const formaterrors = () => {\n    return errorState.map((error, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.message\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 49\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    verticalAlign: \"middle\",\n    textAlign: \"center\",\n    className: \"grid-form\",\n    children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n      style: {\n        maxWidth: '500px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        icon: true,\n        as: \"h2\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"slack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this), \"Register\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Segment, {\n          stacked: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            name: \"userName\",\n            value: userState.userName,\n            icon: \"user\",\n            iconPosition: \"left\",\n            onChange: handleInput,\n            type: \"text\",\n            placeholder: \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            name: \"email\",\n            value: userState.email,\n            icon: \"mail\",\n            iconPosition: \"left\",\n            onChange: handleInput,\n            type: \"email\",\n            placeholder: \"User Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            name: \"password\",\n            value: userState.password,\n            icon: \"lock\",\n            iconPosition: \"left\",\n            onChange: handleInput,\n            type: \"password\",\n            placeholder: \"User Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            name: \"confirmpassword\",\n            value: userState.confirmpassword,\n            icon: \"lock\",\n            iconPosition: \"left\",\n            onChange: handleInput,\n            type: \"password\",\n            placeholder: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: isLoading,\n          loading: isLoading,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), errorState.length > 0 && /*#__PURE__*/_jsxDEV(Message, {\n        error: true,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Errors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this), formaterrors()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 39\n      }, this), isSuccess && /*#__PURE__*/_jsxDEV(Message, {\n        success: true,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Successfully Registered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        children: [\"Already an User? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Register, \"I4mEU4JF18Tc1CoNSALgC2AKlpY=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/Auth /Register/Register.component.jsx"],"names":["React","useState","Grid","Form","Segment","Header","Icon","Button","Message","firebase","Link","Register","user","userName","email","password","confirmpassword","errors","userCollectionRef","database","ref","userState","setuserState","errorState","seterrorState","isLoading","setIsLoading","isSuccess","setIsSuccess","handleInput","event","target","currentState","currentuser","name","value","checkForm","isFormEmpty","error","concat","message","checkPassword","length","onSubmit","auth","createUserWithEmailAndPassword","then","createdUser","updateuserDetails","catch","serverError","updateProfile","displayName","photoURL","uid","saveUserInDB","child","set","formaterrors","map","index","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Grid, Form, Segment, Header, Icon, Button, Message } from 'semantic-ui-react'\nimport firebase from '../../../server/firebase';\n\nimport \"../Auth.css\"\nimport { Link } from 'react-router-dom';\n\nconst Register = () => {\n\n    let user = {\n        userName: '',\n        email: '',\n        password: '',\n        confirmpassword: ''\n    }\n\n    let errors = [];\n\n    let userCollectionRef = firebase.database().ref('users');\n\n    const [userState, setuserState] = useState(user);\n    const [errorState, seterrorState] = useState(errors);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isSuccess, setIsSuccess] = useState(false);\n\n    const handleInput = (event) => {\n        let target = event.target;\n        setuserState((currentState) => {\n            let currentuser = { ...currentState };\n            currentuser[target.name] = target.value;\n            return currentuser;\n        })\n    }\n\n    const checkForm = () => {\n        if (isFormEmpty()) {\n            seterrorState((error) => error.concat({ message: \"Please fill in all fields\" }));\n            return false;\n        }\n        else if (!checkPassword()) {\n            return false;\n        }\n        return true;\n    }\n\n    const isFormEmpty = () => {\n        return !userState.userName.length ||\n            !userState.password.length ||\n            !userState.confirmpassword.length ||\n            !userState.email.length;\n    }\n\n    const checkPassword = () => {\n        if (userState.password.length < 8) {\n            seterrorState((error) => error.concat({ message: \"Password length should be greater than 8\" }));\n            return false;\n        }\n        else if (userState.password !== userState.confirmpassword) {\n            seterrorState((error) => error.concat({ message: \"Password and Confirm Password does not match\" }));\n            return false;\n        }\n        return true;\n    }\n\n    const onSubmit = (event) => {\n        seterrorState(() => []);\n        setIsSuccess(false);\n        if (checkForm()) {\n            setIsLoading(true);\n            firebase.auth()\n                .createUserWithEmailAndPassword(userState.email, userState.password)\n                .then(createdUser => {\n                    setIsLoading(false);\n                    updateuserDetails(createdUser);\n                })\n                .catch(serverError => {\n                    setIsLoading(false);\n                    seterrorState((error) => error.concat(serverError));\n                })\n\n        }\n    }\n\n    const updateuserDetails = (createdUser) => {\n        if (createdUser) {\n            setIsLoading(true);\n            createdUser.user\n                .updateProfile({\n                    displayName: userState.userName,\n                    photoURL: `http://gravatar.com/avatar/${createdUser.user.uid}?d=identicon`\n                })\n                .then(() => {\n                    setIsLoading(false);\n                    saveUserInDB(createdUser);\n                })\n                .catch((serverError) => {\n                    setIsLoading(false);\n                    seterrorState((error) => error.concat(serverError));\n                })\n        }\n    }\n\n    const saveUserInDB = (createdUser) => {\n        setIsLoading(true);\n        userCollectionRef.child(createdUser.user.uid).set({\n            displayName: createdUser.user.displayName,\n            photoURL: createdUser.user.photoURL\n        })\n            .then(() => {\n                setIsLoading(false);\n                setIsSuccess(true);\n            })\n            .catch(serverError => {\n                setIsLoading(false);\n                seterrorState((error) => error.concat(serverError));\n            })\n    }\n\n    const formaterrors = () => {\n        return errorState.map((error, index) => <p key={index}>{error.message}</p>)\n    }\n\n    return (<Grid verticalAlign=\"middle\" textAlign=\"center\" className=\"grid-form\" >\n        <Grid.Column style={{ maxWidth: '500px' }}>\n            <Header icon as=\"h2\">\n                <Icon name=\"slack\" />\n                Register\n            </Header>\n            <Form onSubmit={onSubmit}>\n                <Segment stacked>\n                    <Form.Input\n                        name=\"userName\"\n                        value={userState.userName}\n                        icon=\"user\"\n                        iconPosition=\"left\"\n                        onChange={handleInput}\n                        type=\"text\"\n                        placeholder=\"User Name\"\n                    />\n                    <Form.Input\n                        name=\"email\"\n                        value={userState.email}\n                        icon=\"mail\"\n                        iconPosition=\"left\"\n                        onChange={handleInput}\n                        type=\"email\"\n                        placeholder=\"User Email\"\n                    />\n                    <Form.Input\n                        name=\"password\"\n                        value={userState.password}\n                        icon=\"lock\"\n                        iconPosition=\"left\"\n                        onChange={handleInput}\n                        type=\"password\"\n                        placeholder=\"User Password\"\n                    />\n                    <Form.Input\n                        name=\"confirmpassword\"\n                        value={userState.confirmpassword}\n                        icon=\"lock\"\n                        iconPosition=\"left\"\n                        onChange={handleInput}\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                    />\n                </Segment>\n                <Button disabled={isLoading} loading={isLoading}>Submit</Button>\n            </Form>\n            {errorState.length > 0 && <Message error>\n                <h3>Errors</h3>\n                {formaterrors()}\n            </Message>\n            }\n            {isSuccess && <Message success>\n                <h3>Successfully Registered</h3>\n            </Message>\n            }\n            <Message>\n                Already an User? <Link to=\"/login\" >Login </Link>\n            </Message>\n        </Grid.Column>\n    </Grid>)\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}