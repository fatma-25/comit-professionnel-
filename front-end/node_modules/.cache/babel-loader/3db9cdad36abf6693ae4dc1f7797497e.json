{"ast":null,"code":"var _jsxFileName = \"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/SideBar/SideBar.component.jsx\",\n    _s = $RefreshSig$();\n\n// import React from 'react';\n// import { Menu } from 'semantic-ui-react';\n// import UserInfo from \"./UserInfo/UserInfo.component\";\n// import Channels from \"./Channels/Channels.component\";\n// import PrivateChat from \"./PrivateChat/PrivateChat.component\";\n// import FavouriteChannels from \"./FavouriteChannels/FavouriteChannels.component\";\n// import { Link, useHistory } from \"react-router-dom\";\n// // import { Nav, Navbar, Container, Button } from \"react-bootstrap\";\n// import \"./SideBar.css\";\n// export const SideBar = () => {\n//     return (<Menu vertical fixed=\"left\" borderless size=\"large\" className=\"side_bar\">\n//         <UserInfo />\n//         <FavouriteChannels />\n//         <Channels /> \n//         <PrivateChat />\n//   <div style={{display:\"flex\", flexDirection:\"column\"}}>\n//         <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/calendar\"\n//               >\n//                Calendar\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/listcontact\"\n//               >\n//                 List Contact\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/upload\"\n//               >\n//                 Upload\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/shared\"\n//               >\n//                 Shared Document\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/edit\"\n//               >\n//                 Edit Profile\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/ApprouveUser\"\n//               >\n//                 ApprouveUser\n//               </Link>\n//    </div>\n//     </Menu>\n//     )\n// }\n//****** */\n// import React, { useState, useEffect } from \"react\";\n// import { connect } from \"react-redux\";\n// // import firebase from \"../../server/firebase\";\n// import firebase from \"../../server/firebase\";\n// import { Menu } from 'semantic-ui-react';\n// import UserInfo from \"./UserInfo/UserInfo.component\";\n// import Channels from \"./Channels/Channels.component\";\n// import PrivateChat from \"./PrivateChat/PrivateChat.component\";\n// import FavouriteChannels from \"./FavouriteChannels/FavouriteChannels.component\";\n// import { Link, useHistory } from \"react-router-dom\";\n// import store from '../../index'\n// // import { Nav, Navbar, Container, Button } from \"react-bootstrap\";\n// import \"./SideBar.css\";\n// export const SideBar = (props) => {\n//   // if (!props.user) {\n//     const [usersState, setUsersState] = useState([]);\n//     const usersRef = firebase.database().ref(\"users\");\n//     return (\n//  <Menu vertical fixed=\"left\" borderless size=\"large\" className=\"side_bar\">\n//         <UserInfo />\n//         <FavouriteChannels />\n//        <Channels /> \n//         <PrivateChat />\n//   <div style={{display:\"flex\", flexDirection:\"column\"}}>\n//         <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/calendar\"\n//               >\n//                Calendar\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/listcontact\"\n//               >\n//                 List Contact\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/upload\"\n//               >\n//                 Upload\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/shared\"\n//               >\n//                 Shared Document\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/edit\"\n//               >\n//                 Edit Profile\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/ApprouveUser\"\n//               >\n//                 ApprouveUser\n//               </Link>\n//               <div>{console.log(store.getState().user.currentUser,'sttoore')}</div>\n//    </div>\n//     </Menu>\n//     )\n// }\n// const mapStateToProps = (state) => {\n// return {\n//     user: state.user.currentUser\n// }\n// }\n// connect(mapStateToProps)(SideBar);\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\"; // import firebase from \"../../server/firebase\";\n\nimport firebase from \"../../server/firebase\";\nimport { Menu } from 'semantic-ui-react';\nimport UserInfo from \"./UserInfo/UserInfo.component\";\nimport Channels from \"./Channels/Channels.component\";\nimport PrivateChat from \"./PrivateChat/PrivateChat.component\";\nimport FavouriteChannels from \"./FavouriteChannels/FavouriteChannels.component\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport store from '../../index'; // import { Nav, Navbar, Container, Button } from \"react-bootstrap\";\n\nimport \"./SideBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SideBar = props => {\n  _s();\n\n  const [usersState, setUsersState] = useState([]);\n  const [connectedUsersState, setConnectedUsersState] = useState([]);\n  const usersRef = firebase.database().ref(\"users\");\n  const connectedRef = firebase.database().ref(\".info/connected\");\n  const statusRef = firebase.database().ref(\"status\");\n  useEffect(() => {\n    usersRef.on(\"child_added\", snap => {\n      setUsersState(currentState => {\n        let updatedState = [...currentState];\n        let user = snap.val();\n        user.name = user.displayName;\n        user.email = user.email;\n        user.id = snap.key;\n        user.isPrivateChat = true;\n        updatedState.push(user);\n        return updatedState;\n      });\n    });\n    connectedRef.on(\"value\", snap => {\n      if (props.user && snap.val()) {\n        const userStatusRef = statusRef.child(props.user.uid);\n        userStatusRef.set(true);\n        userStatusRef.onDisconnect().remove();\n      }\n    });\n    return () => {\n      usersRef.off();\n      connectedRef.off();\n    };\n  }, [props.user]);\n  useEffect(() => {\n    statusRef.on(\"child_added\", snap => {\n      setConnectedUsersState(currentState => {\n        let updatedState = [...currentState];\n        updatedState.push(snap.key);\n        return updatedState;\n      });\n    });\n    statusRef.on(\"child_removed\", snap => {\n      setConnectedUsersState(currentState => {\n        let updatedState = [...currentState];\n        let index = updatedState.indexOf(snap.key);\n        updatedState.splice(index, 1);\n        return updatedState;\n      });\n    });\n    return () => statusRef.off();\n  }, [usersState]);\n\n  const displayUsers = () => {\n    if (usersState.length > 0) {\n      return usersState.filter(user => user.id !== props.user.uid).map(user => {\n        return (\n          /*#__PURE__*/\n          // <div\n          //   style={{\n          //     display: \"flex\",\n          //     justifyContent: \"space-around\",\n          //     marginBottom: 20,\n          //   }}\n          // >\n          //   <div>\n          //     {console.log(user, \"uuuuusre\")}\n          //     {user.name}\n          //   </div>\n          //   <div>\n          //     {/* {user.name}@SoftCommunity.com */}\n          //     {user.email}\n          //   </div>\n          //   <button\n          //     type=\"button\"\n          //     class=\"btn btn-link\"\n          //     onClick={() => {\n          //       alert(` user approved`);\n          //       const accountStatus = usersRef.child(user.id);\n          //       accountStatus.update({ status: true });\n          //       // axios.put(`http://localhost:2000/api/auth/${user._id}`, {\n          //       //   account: true,\n          //       // });\n          //     }}\n          //   >\n          //     approuve user\n          //   </button>\n          // </div>\n          _jsxDEV(Menu, {\n            vertical: true,\n            fixed: \"left\",\n            borderless: true,\n            size: \"large\",\n            className: \"side_bar\",\n            children: [/*#__PURE__*/_jsxDEV(UserInfo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(FavouriteChannels, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Channels, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(PrivateChat, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                flexDirection: \"column\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                style: {\n                  color: \"white\",\n                  textDecoration: \"none\"\n                },\n                to: \"/calendar\",\n                children: \"Calendar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                style: {\n                  color: \"white\",\n                  textDecoration: \"none\"\n                },\n                to: \"/listcontact\",\n                children: \"List Contact\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                style: {\n                  color: \"white\",\n                  textDecoration: \"none\"\n                },\n                to: \"/upload\",\n                children: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                style: {\n                  color: \"white\",\n                  textDecoration: \"none\"\n                },\n                to: \"/shared\",\n                children: \"Shared Document\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                style: {\n                  color: \"white\",\n                  textDecoration: \"none\"\n                },\n                to: \"/edit\",\n                children: \"Edit Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                style: {\n                  color: \"white\",\n                  textDecoration: \"none\"\n                },\n                to: \"/ApprouveUser\",\n                children: \"ApprouveUser\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: console.log(store.getState().user.currentUser, 'sttoore')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 14\n          }, this)\n        );\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: displayUsers()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 10\n  }, this);\n};\n\n_s(SideBar, \"6U/V5/w1SKMexB1MZPyGIwXk8Wk=\");\n\n_c = SideBar;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.currentUser,\n    channel: state.channel.currentChannel\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {// selectChannel: (channel) => dispatch(setChannel(channel)),\n  };\n};\n\nconnect(mapStateToProps, mapDispatchToProps)(SideBar);\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/SideBar/SideBar.component.jsx"],"names":["React","useState","useEffect","connect","firebase","Menu","UserInfo","Channels","PrivateChat","FavouriteChannels","Link","useHistory","store","SideBar","props","usersState","setUsersState","connectedUsersState","setConnectedUsersState","usersRef","database","ref","connectedRef","statusRef","on","snap","currentState","updatedState","user","val","name","displayName","email","id","key","isPrivateChat","push","userStatusRef","child","uid","set","onDisconnect","remove","off","index","indexOf","splice","displayUsers","length","filter","map","display","flexDirection","color","textDecoration","console","log","getState","currentUser","mapStateToProps","state","channel","currentChannel","mapDispatchToProps","dispatch"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,iBAAP,MAA8B,iDAA9B;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AACA,OAAO,eAAP;;AAEA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM,CAACgB,mBAAD,EAAsBC,sBAAtB,IAAgDjB,QAAQ,CAAC,EAAD,CAA9D;AAEA,QAAMkB,QAAQ,GAAGf,QAAQ,CA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","sourcesContent":["// import React from 'react';\n// import { Menu } from 'semantic-ui-react';\n// import UserInfo from \"./UserInfo/UserInfo.component\";\n// import Channels from \"./Channels/Channels.component\";\n// import PrivateChat from \"./PrivateChat/PrivateChat.component\";\n// import FavouriteChannels from \"./FavouriteChannels/FavouriteChannels.component\";\n// import { Link, useHistory } from \"react-router-dom\";\n// // import { Nav, Navbar, Container, Button } from \"react-bootstrap\";\n// import \"./SideBar.css\";\n\n// export const SideBar = () => {\n//     return (<Menu vertical fixed=\"left\" borderless size=\"large\" className=\"side_bar\">\n//         <UserInfo />\n//         <FavouriteChannels />\n//         <Channels /> \n//         <PrivateChat />\n//   <div style={{display:\"flex\", flexDirection:\"column\"}}>\n//         <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/calendar\"\n//               >\n//                Calendar\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/listcontact\"\n//               >\n//                 List Contact\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/upload\"\n//               >\n//                 Upload\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/shared\"\n//               >\n//                 Shared Document\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/edit\"\n//               >\n//                 Edit Profile\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/ApprouveUser\"\n//               >\n//                 ApprouveUser\n//               </Link>\n//    </div>\n//     </Menu>\n//     )\n// }\n\n\n\n//****** */\n\n// import React, { useState, useEffect } from \"react\";\n// import { connect } from \"react-redux\";\n// // import firebase from \"../../server/firebase\";\n// import firebase from \"../../server/firebase\";\n\n// import { Menu } from 'semantic-ui-react';\n// import UserInfo from \"./UserInfo/UserInfo.component\";\n// import Channels from \"./Channels/Channels.component\";\n// import PrivateChat from \"./PrivateChat/PrivateChat.component\";\n// import FavouriteChannels from \"./FavouriteChannels/FavouriteChannels.component\";\n// import { Link, useHistory } from \"react-router-dom\";\n// import store from '../../index'\n// // import { Nav, Navbar, Container, Button } from \"react-bootstrap\";\n// import \"./SideBar.css\";\n\n// export const SideBar = (props) => {\n//   // if (!props.user) {\n//     const [usersState, setUsersState] = useState([]);\n//     const usersRef = firebase.database().ref(\"users\");\n\n//     return (\n \n//  <Menu vertical fixed=\"left\" borderless size=\"large\" className=\"side_bar\">\n//         <UserInfo />\n//         <FavouriteChannels />\n//        <Channels /> \n//         <PrivateChat />\n//   <div style={{display:\"flex\", flexDirection:\"column\"}}>\n//         <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/calendar\"\n//               >\n//                Calendar\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/listcontact\"\n//               >\n//                 List Contact\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/upload\"\n//               >\n//                 Upload\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/shared\"\n//               >\n//                 Shared Document\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/edit\"\n//               >\n//                 Edit Profile\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/ApprouveUser\"\n//               >\n//                 ApprouveUser\n//               </Link>\n//               <div>{console.log(store.getState().user.currentUser,'sttoore')}</div>\n//    </div>\n//     </Menu>\n//     )\n\n\n\n\n// }\n\n// const mapStateToProps = (state) => {\n// return {\n//     user: state.user.currentUser\n// }\n// }\n\n// connect(mapStateToProps)(SideBar);\n\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n// import firebase from \"../../server/firebase\";\nimport firebase from \"../../server/firebase\";\n\nimport { Menu } from 'semantic-ui-react';\nimport UserInfo from \"./UserInfo/UserInfo.component\";\nimport Channels from \"./Channels/Channels.component\";\nimport PrivateChat from \"./PrivateChat/PrivateChat.component\";\nimport FavouriteChannels from \"./FavouriteChannels/FavouriteChannels.component\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport store from '../../index'\n// import { Nav, Navbar, Container, Button } from \"react-bootstrap\";\nimport \"./SideBar.css\";\n\nexport const SideBar = (props) => {\n  const [usersState, setUsersState] = useState([]);\n\n  const [connectedUsersState, setConnectedUsersState] = useState([]);\n\n  const usersRef = firebase.database().ref(\"users\");\n\n  const connectedRef = firebase.database().ref(\".info/connected\");\n\n  const statusRef = firebase.database().ref(\"status\");\n\n  useEffect(() => {\n    usersRef.on(\"child_added\", (snap) => {\n      setUsersState((currentState) => {\n        let updatedState = [...currentState];\n\n        let user = snap.val();\n        user.name = user.displayName;\n        user.email = user.email;\n        user.id = snap.key;\n        user.isPrivateChat = true;\n        updatedState.push(user);\n\n        return updatedState;\n      });\n    });\n\n    connectedRef.on(\"value\", (snap) => {\n      if (props.user && snap.val()) {\n        const userStatusRef = statusRef.child(props.user.uid);\n        userStatusRef.set(true);\n        userStatusRef.onDisconnect().remove();\n      }\n    });\n\n    return () => {\n      usersRef.off();\n      connectedRef.off();\n    };\n  }, [props.user]);\n\n  useEffect(() => {\n    statusRef.on(\"child_added\", (snap) => {\n      setConnectedUsersState((currentState) => {\n        let updatedState = [...currentState];\n        updatedState.push(snap.key);\n        return updatedState;\n      });\n    });\n\n    statusRef.on(\"child_removed\", (snap) => {\n      setConnectedUsersState((currentState) => {\n        let updatedState = [...currentState];\n\n        let index = updatedState.indexOf(snap.key);\n        updatedState.splice(index, 1);\n        return updatedState;\n      });\n    });\n\n    return () => statusRef.off();\n  }, [usersState]);\n\n  const displayUsers = () => {\n    if (usersState.length > 0) {\n      return usersState\n        .filter((user) => user.id !== props.user.uid)\n        .map((user) => {\n          return (\n            // <div\n            //   style={{\n            //     display: \"flex\",\n            //     justifyContent: \"space-around\",\n            //     marginBottom: 20,\n            //   }}\n            // >\n            //   <div>\n            //     {console.log(user, \"uuuuusre\")}\n            //     {user.name}\n            //   </div>\n            //   <div>\n            //     {/* {user.name}@SoftCommunity.com */}\n            //     {user.email}\n            //   </div>\n            //   <button\n            //     type=\"button\"\n            //     class=\"btn btn-link\"\n            //     onClick={() => {\n            //       alert(` user approved`);\n\n            //       const accountStatus = usersRef.child(user.id);\n\n            //       accountStatus.update({ status: true });\n            //       // axios.put(`http://localhost:2000/api/auth/${user._id}`, {\n            //       //   account: true,\n            //       // });\n            //     }}\n            //   >\n            //     approuve user\n            //   </button>\n            // </div>\n             <Menu vertical fixed=\"left\" borderless size=\"large\" className=\"side_bar\">\n        <UserInfo />\n        <FavouriteChannels />\n       <Channels /> \n        <PrivateChat />\n  <div style={{display:\"flex\", flexDirection:\"column\"}}>\n        <Link\n                style={{ color: \"white\", textDecoration: \"none\" }}\n                to=\"/calendar\"\n              >\n               Calendar\n              </Link>\n              <Link\n                style={{ color: \"white\", textDecoration: \"none\" }}\n                to=\"/listcontact\"\n              >\n                List Contact\n              </Link>\n              <Link\n                style={{ color: \"white\", textDecoration: \"none\" }}\n                to=\"/upload\"\n              >\n                Upload\n              </Link>\n              <Link\n                style={{ color: \"white\", textDecoration: \"none\" }}\n                to=\"/shared\"\n              >\n                Shared Document\n              </Link>\n              <Link\n                style={{ color: \"white\", textDecoration: \"none\" }}\n                to=\"/edit\"\n              >\n                Edit Profile\n              </Link>\n              <Link\n                style={{ color: \"white\", textDecoration: \"none\" }}\n                to=\"/ApprouveUser\"\n              >\n                ApprouveUser\n              </Link>\n              <div>{console.log(store.getState().user.currentUser,'sttoore')}</div>\n   </div>\n    </Menu>\n          );\n        });\n    }\n  };\n\n  return <div>{displayUsers()}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.currentUser,\n    channel: state.channel.currentChannel,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // selectChannel: (channel) => dispatch(setChannel(channel)),\n  };\n};\n\nconnect(mapStateToProps, mapDispatchToProps)(SideBar);\n"]},"metadata":{},"sourceType":"module"}