{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/modelProvider.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getGroupCount } from \"./resources/utils\";\nimport { isObject } from \"../../core/utils/type\";\nimport { getCurrentView } from \"../../renovation/ui/scheduler/model/views\";\nexport class ModelProvider {\n  constructor(model) {\n    this.model = model;\n    this.currentView = null;\n  }\n\n  get key() {\n    return this.model.key;\n  }\n\n  get loadedResources() {\n    return this.model.loadedResources;\n  }\n\n  get startDayHour() {\n    return this.model.startDayHour;\n  }\n\n  get endDayHour() {\n    return this.model.endDayHour;\n  }\n\n  get adaptivityEnabled() {\n    return this.model.adaptivityEnabled;\n  }\n\n  get rtlEnabled() {\n    return this.model.rtlEnabled;\n  }\n\n  get maxAppointmentsPerCell() {\n    return this.getCurrentViewOption(\"maxAppointmentsPerCell\");\n  }\n\n  get currentViewOptions() {\n    return this.currentView;\n  }\n\n  get currentViewType() {\n    return isObject(this.currentView) ? this.currentView.type : this.currentView;\n  }\n\n  get agendaDuration() {\n    return this.model.agendaDuration;\n  }\n\n  get currentDate() {\n    return this.model.currentDate;\n  }\n\n  get timeZone() {\n    return this.model.timeZone;\n  }\n\n  get isRenovatedAppointments() {\n    return this.model.isRenovatedAppointments;\n  }\n\n  supportAllDayResizing() {\n    return \"day\" !== this.currentViewType || this.currentView.intervalCount > 1;\n  }\n\n  updateCurrentView() {\n    var views = this.model.views;\n    var currentView = this.model.currentView;\n    this.currentView = getCurrentView(currentView, views);\n  }\n\n  isGroupedByDate() {\n    return this.model.groupByDate && this._isHorizontalGroupedWorkSpace() && getGroupCount(this.loadedResources) > 0;\n  }\n\n  _isHorizontalGroupedWorkSpace() {\n    return !!this.loadedResources.length && \"horizontal\" === this.model.groupOrientation;\n  }\n\n  getCurrentViewOption(optionName) {\n    if (this.currentView && void 0 !== this.currentView[optionName]) {\n      return this.currentView[optionName];\n    }\n\n    return this.model[optionName];\n  }\n\n}","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/node_modules/devextreme/esm/ui/scheduler/modelProvider.js"],"names":["getGroupCount","isObject","getCurrentView","ModelProvider","constructor","model","currentView","key","loadedResources","startDayHour","endDayHour","adaptivityEnabled","rtlEnabled","maxAppointmentsPerCell","getCurrentViewOption","currentViewOptions","currentViewType","type","agendaDuration","currentDate","timeZone","isRenovatedAppointments","supportAllDayResizing","intervalCount","updateCurrentView","views","isGroupedByDate","groupByDate","_isHorizontalGroupedWorkSpace","length","groupOrientation","optionName"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,aADJ,QAEO,mBAFP;AAGA,SACIC,QADJ,QAEO,uBAFP;AAGA,SACIC,cADJ,QAEO,2CAFP;AAGA,OAAO,MAAMC,aAAN,CAAoB;AACvBC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACH;;AACM,MAAHC,GAAG,GAAG;AACN,WAAO,KAAKF,KAAL,CAAWE,GAAlB;AACH;;AACkB,MAAfC,eAAe,GAAG;AAClB,WAAO,KAAKH,KAAL,CAAWG,eAAlB;AACH;;AACe,MAAZC,YAAY,GAAG;AACf,WAAO,KAAKJ,KAAL,CAAWI,YAAlB;AACH;;AACa,MAAVC,UAAU,GAAG;AACb,WAAO,KAAKL,KAAL,CAAWK,UAAlB;AACH;;AACoB,MAAjBC,iBAAiB,GAAG;AACpB,WAAO,KAAKN,KAAL,CAAWM,iBAAlB;AACH;;AACa,MAAVC,UAAU,GAAG;AACb,WAAO,KAAKP,KAAL,CAAWO,UAAlB;AACH;;AACyB,MAAtBC,sBAAsB,GAAG;AACzB,WAAO,KAAKC,oBAAL,CAA0B,wBAA1B,CAAP;AACH;;AACqB,MAAlBC,kBAAkB,GAAG;AACrB,WAAO,KAAKT,WAAZ;AACH;;AACkB,MAAfU,eAAe,GAAG;AAClB,WAAOf,QAAQ,CAAC,KAAKK,WAAN,CAAR,GAA6B,KAAKA,WAAL,CAAiBW,IAA9C,GAAqD,KAAKX,WAAjE;AACH;;AACiB,MAAdY,cAAc,GAAG;AACjB,WAAO,KAAKb,KAAL,CAAWa,cAAlB;AACH;;AACc,MAAXC,WAAW,GAAG;AACd,WAAO,KAAKd,KAAL,CAAWc,WAAlB;AACH;;AACW,MAARC,QAAQ,GAAG;AACX,WAAO,KAAKf,KAAL,CAAWe,QAAlB;AACH;;AAC0B,MAAvBC,uBAAuB,GAAG;AAC1B,WAAO,KAAKhB,KAAL,CAAWgB,uBAAlB;AACH;;AACDC,EAAAA,qBAAqB,GAAG;AACpB,WAAO,UAAU,KAAKN,eAAf,IAAkC,KAAKV,WAAL,CAAiBiB,aAAjB,GAAiC,CAA1E;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,KAAK,GAAG,KAAKpB,KAAL,CAAWoB,KAAvB;AACA,QAAInB,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA7B;AACA,SAAKA,WAAL,GAAmBJ,cAAc,CAACI,WAAD,EAAcmB,KAAd,CAAjC;AACH;;AACDC,EAAAA,eAAe,GAAG;AACd,WAAO,KAAKrB,KAAL,CAAWsB,WAAX,IAA0B,KAAKC,6BAAL,EAA1B,IAAkE5B,aAAa,CAAC,KAAKQ,eAAN,CAAb,GAAsC,CAA/G;AACH;;AACDoB,EAAAA,6BAA6B,GAAG;AAC5B,WAAO,CAAC,CAAC,KAAKpB,eAAL,CAAqBqB,MAAvB,IAAiC,iBAAiB,KAAKxB,KAAL,CAAWyB,gBAApE;AACH;;AACDhB,EAAAA,oBAAoB,CAACiB,UAAD,EAAa;AAC7B,QAAI,KAAKzB,WAAL,IAAoB,KAAK,CAAL,KAAW,KAAKA,WAAL,CAAiByB,UAAjB,CAAnC,EAAiE;AAC7D,aAAO,KAAKzB,WAAL,CAAiByB,UAAjB,CAAP;AACH;;AACD,WAAO,KAAK1B,KAAL,CAAW0B,UAAX,CAAP;AACH;;AA/DsB","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/modelProvider.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getGroupCount\r\n} from \"./resources/utils\";\r\nimport {\r\n    isObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getCurrentView\r\n} from \"../../renovation/ui/scheduler/model/views\";\r\nexport class ModelProvider {\r\n    constructor(model) {\r\n        this.model = model;\r\n        this.currentView = null\r\n    }\r\n    get key() {\r\n        return this.model.key\r\n    }\r\n    get loadedResources() {\r\n        return this.model.loadedResources\r\n    }\r\n    get startDayHour() {\r\n        return this.model.startDayHour\r\n    }\r\n    get endDayHour() {\r\n        return this.model.endDayHour\r\n    }\r\n    get adaptivityEnabled() {\r\n        return this.model.adaptivityEnabled\r\n    }\r\n    get rtlEnabled() {\r\n        return this.model.rtlEnabled\r\n    }\r\n    get maxAppointmentsPerCell() {\r\n        return this.getCurrentViewOption(\"maxAppointmentsPerCell\")\r\n    }\r\n    get currentViewOptions() {\r\n        return this.currentView\r\n    }\r\n    get currentViewType() {\r\n        return isObject(this.currentView) ? this.currentView.type : this.currentView\r\n    }\r\n    get agendaDuration() {\r\n        return this.model.agendaDuration\r\n    }\r\n    get currentDate() {\r\n        return this.model.currentDate\r\n    }\r\n    get timeZone() {\r\n        return this.model.timeZone\r\n    }\r\n    get isRenovatedAppointments() {\r\n        return this.model.isRenovatedAppointments\r\n    }\r\n    supportAllDayResizing() {\r\n        return \"day\" !== this.currentViewType || this.currentView.intervalCount > 1\r\n    }\r\n    updateCurrentView() {\r\n        var views = this.model.views;\r\n        var currentView = this.model.currentView;\r\n        this.currentView = getCurrentView(currentView, views)\r\n    }\r\n    isGroupedByDate() {\r\n        return this.model.groupByDate && this._isHorizontalGroupedWorkSpace() && getGroupCount(this.loadedResources) > 0\r\n    }\r\n    _isHorizontalGroupedWorkSpace() {\r\n        return !!this.loadedResources.length && \"horizontal\" === this.model.groupOrientation\r\n    }\r\n    getCurrentViewOption(optionName) {\r\n        if (this.currentView && void 0 !== this.currentView[optionName]) {\r\n            return this.currentView[optionName]\r\n        }\r\n        return this.model[optionName]\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}