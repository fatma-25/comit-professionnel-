{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/appointmentPopup/form.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport $ from \"../../../core/renderer\";\nimport Form from \"../../form\";\nimport dateSerialization from \"../../../core/utils/date_serialization\";\nimport messageLocalization from \"../../../localization/message\";\nimport devices from \"../../../core/devices\";\nimport DataSource from \"../../../data/data_source\";\nimport timeZoneDataUtils from \"../timezones/utils.timezones_data\";\nimport { extend } from \"../../../core/utils/extend\";\nimport dateUtils from \"../../../core/utils/date\";\nimport { Semaphore } from \"../../../renovation/ui/scheduler/semaphore\";\nimport \"../recurrence_editor\";\nimport \"../../text_area\";\nimport \"../../tag_box\";\nimport \"../../switch\";\nimport \"../../select_box\";\nvar SCREEN_SIZE_OF_SINGLE_COLUMN = 600;\nexport var APPOINTMENT_FORM_GROUP_NAMES = {\n  Main: \"mainGroup\",\n  Recurrence: \"recurrenceGroup\"\n};\n\nvar getStartDateWithStartHour = (startDate, startDayHour) => new Date(new Date(startDate).setHours(startDayHour));\n\nvar validateAppointmentFormDate = (editor, value, previousValue) => {\n  var isCurrentDateCorrect = null === value || !!value;\n  var isPreviousDateCorrect = null === previousValue || !!previousValue;\n\n  if (!isCurrentDateCorrect && isPreviousDateCorrect) {\n    editor.option(\"value\", previousValue);\n  }\n};\n\nvar updateRecurrenceItemVisibility = (recurrenceRuleExpr, value, form) => {\n  var _form$getEditor;\n\n  form.itemOption(APPOINTMENT_FORM_GROUP_NAMES.Recurrence, \"visible\", value);\n  !value && form.updateData(recurrenceRuleExpr, \"\");\n  null === (_form$getEditor = form.getEditor(recurrenceRuleExpr)) || void 0 === _form$getEditor ? void 0 : _form$getEditor.changeValueByVisibility(value);\n};\n\nvar createDateBoxEditor = (dataField, colSpan, firstDayOfWeek, label, onValueChanged) => ({\n  editorType: \"dxDateBox\",\n  dataField: dataField,\n  colSpan: colSpan,\n  label: {\n    text: messageLocalization.format(label)\n  },\n  validationRules: [{\n    type: \"required\"\n  }],\n  editorOptions: {\n    width: \"100%\",\n    calendarOptions: {\n      firstDayOfWeek: firstDayOfWeek\n    },\n    onValueChanged: onValueChanged,\n    useMaskBehavior: true\n  }\n});\n\nexport class AppointmentForm {\n  constructor(scheduler) {\n    this.scheduler = scheduler;\n    this.form = null;\n    this.semaphore = new Semaphore();\n  }\n\n  get dxForm() {\n    return this.form;\n  }\n\n  set readOnly(value) {\n    this.form.option(\"readOnly\", value);\n    var {\n      recurrenceRuleExpr: recurrenceRuleExpr\n    } = this.scheduler.getDataAccessors().expr;\n    var recurrenceEditor = this.form.getEditor(recurrenceRuleExpr);\n    null === recurrenceEditor || void 0 === recurrenceEditor ? void 0 : recurrenceEditor.option(\"readOnly\", value);\n  }\n\n  get formData() {\n    return this.form.option(\"formData\");\n  }\n\n  set formData(value) {\n    this.form.option(\"formData\", value);\n  }\n\n  create(triggerResize, changeSize, formData) {\n    var allowTimeZoneEditing = this.scheduler.getEditingConfig().allowTimeZoneEditing;\n    var {\n      expr: expr\n    } = this.scheduler.getDataAccessors();\n    var recurrenceEditorVisibility = !!formData[expr.recurrenceRuleExpr];\n    var colSpan = recurrenceEditorVisibility ? 1 : 2;\n    var mainItems = [...this._createMainItems(expr, triggerResize, changeSize, allowTimeZoneEditing), ...this.scheduler.createResourceEditorModel()];\n    changeSize(recurrenceEditorVisibility);\n    var items = [{\n      itemType: \"group\",\n      name: APPOINTMENT_FORM_GROUP_NAMES.Main,\n      colCountByScreen: {\n        lg: 2,\n        xs: 1\n      },\n      colSpan: colSpan,\n      items: mainItems\n    }, {\n      itemType: \"group\",\n      name: APPOINTMENT_FORM_GROUP_NAMES.Recurrence,\n      visible: recurrenceEditorVisibility,\n      colSpan: colSpan,\n      items: this._createRecurrenceEditor(expr)\n    }];\n    var element = $(\"<div>\");\n    this.form = this.scheduler.createComponent(element, Form, {\n      items: items,\n      showValidationSummary: true,\n      scrollingEnabled: true,\n      colCount: \"auto\",\n      colCountByScreen: {\n        lg: 2,\n        xs: 1\n      },\n      formData: formData,\n      showColonAfterLabel: false,\n      labelLocation: \"top\",\n      screenByWidth: width => width < SCREEN_SIZE_OF_SINGLE_COLUMN || \"desktop\" !== devices.current().deviceType ? \"xs\" : \"lg\"\n    });\n  }\n\n  _dateBoxValueChanged(args, dateExpr, isNeedCorrect) {\n    validateAppointmentFormDate(args.component, args.value, args.previousValue);\n    var value = dateSerialization.deserializeDate(args.value);\n    var previousValue = dateSerialization.deserializeDate(args.previousValue);\n    var dateEditor = this.form.getEditor(dateExpr);\n    var dateValue = dateSerialization.deserializeDate(dateEditor.option(\"value\"));\n\n    if (this.semaphore.isFree() && dateValue && value && isNeedCorrect(dateValue, value)) {\n      var duration = previousValue ? dateValue.getTime() - previousValue.getTime() : 0;\n      dateEditor.option(\"value\", new Date(value.getTime() + duration));\n    }\n  }\n\n  _createTimezoneEditor(timeZoneExpr, secondTimeZoneExpr, visibleIndex, colSpan, isMainTimeZone) {\n    var visible = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : false;\n    var noTzTitle = messageLocalization.format(\"dxScheduler-noTimezoneTitle\");\n    return {\n      dataField: timeZoneExpr,\n      editorType: \"dxSelectBox\",\n      visibleIndex: visibleIndex,\n      colSpan: colSpan,\n      label: {\n        text: \" \"\n      },\n      editorOptions: {\n        displayExpr: \"title\",\n        valueExpr: \"id\",\n        placeholder: noTzTitle,\n        searchEnabled: true,\n        onValueChanged: args => {\n          var form = this.form;\n          var secondTimezoneEditor = form.getEditor(secondTimeZoneExpr);\n\n          if (isMainTimeZone) {\n            secondTimezoneEditor.option(\"value\", args.value);\n          }\n        }\n      },\n      visible: visible\n    };\n  }\n\n  _createDateBoxItems(dataExprs, allowTimeZoneEditing) {\n    var colSpan = allowTimeZoneEditing ? 2 : 1;\n    var firstDayOfWeek = this.scheduler.getFirstDayOfWeek();\n    return [createDateBoxEditor(dataExprs.startDateExpr, colSpan, firstDayOfWeek, \"dxScheduler-editorLabelStartDate\", args => {\n      this._dateBoxValueChanged(args, dataExprs.endDateExpr, (endValue, startValue) => endValue < startValue);\n    }), this._createTimezoneEditor(dataExprs.startDateTimeZoneExpr, dataExprs.endDateTimeZoneExpr, 1, colSpan, true, allowTimeZoneEditing), createDateBoxEditor(dataExprs.endDateExpr, colSpan, firstDayOfWeek, \"dxScheduler-editorLabelEndDate\", args => {\n      this._dateBoxValueChanged(args, dataExprs.startDateExpr, (startValue, endValue) => endValue < startValue);\n    }), this._createTimezoneEditor(dataExprs.endDateTimeZoneExpr, dataExprs.startDateTimeZoneExpr, 3, colSpan, false, allowTimeZoneEditing)];\n  }\n\n  _changeFormItemDateType(itemPath, isAllDay) {\n    var itemEditorOptions = this.form.itemOption(itemPath).editorOptions;\n    var type = isAllDay ? \"date\" : \"datetime\";\n\n    var newEditorOption = _extends({}, itemEditorOptions, {\n      type: type\n    });\n\n    this.form.itemOption(itemPath, \"editorOptions\", newEditorOption);\n  }\n\n  _createMainItems(dataExprs, triggerResize, changeSize, allowTimeZoneEditing) {\n    return [{\n      dataField: dataExprs.textExpr,\n      editorType: \"dxTextBox\",\n      colSpan: 2,\n      label: {\n        text: messageLocalization.format(\"dxScheduler-editorLabelTitle\")\n      }\n    }, {\n      itemType: \"group\",\n      colSpan: 2,\n      colCountByScreen: {\n        lg: 2,\n        xs: 1\n      },\n      items: this._createDateBoxItems(dataExprs, allowTimeZoneEditing)\n    }, {\n      itemType: \"group\",\n      colCountByScreen: {\n        lg: 3,\n        xs: 3\n      },\n      colSpan: 2,\n      items: [{\n        dataField: dataExprs.allDayExpr,\n        cssClass: \"dx-appointment-form-switch\",\n        editorType: \"dxSwitch\",\n        label: {\n          text: messageLocalization.format(\"dxScheduler-allDay\"),\n          location: \"right\"\n        },\n        editorOptions: {\n          onValueChanged: args => {\n            var value = args.value;\n            var startDateEditor = this.form.getEditor(dataExprs.startDateExpr);\n            var endDateEditor = this.form.getEditor(dataExprs.endDateExpr);\n            var startDate = dateSerialization.deserializeDate(startDateEditor.option(\"value\"));\n\n            if (this.semaphore.isFree() && startDate) {\n              if (value) {\n                var allDayStartDate = dateUtils.trimTime(startDate);\n                startDateEditor.option(\"value\", new Date(allDayStartDate));\n                endDateEditor.option(\"value\", new Date(allDayStartDate));\n              } else {\n                var startDateWithStartHour = getStartDateWithStartHour(startDate, this.scheduler.getStartDayHour());\n                var endDate = this.scheduler.getCalculatedEndDate(startDateWithStartHour);\n                startDateEditor.option(\"value\", startDateWithStartHour);\n                endDateEditor.option(\"value\", endDate);\n              }\n            }\n\n            var startDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, \".\").concat(dataExprs.startDateExpr);\n            var endDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, \".\").concat(dataExprs.endDateExpr);\n\n            this._changeFormItemDateType(startDateItemPath, value);\n\n            this._changeFormItemDateType(endDateItemPath, value);\n          }\n        }\n      }, {\n        editorType: \"dxSwitch\",\n        dataField: \"repeat\",\n        cssClass: \"dx-appointment-form-switch\",\n        name: \"visibilityChanged\",\n        label: {\n          text: messageLocalization.format(\"dxScheduler-editorLabelRecurrence\"),\n          location: \"right\"\n        },\n        editorOptions: {\n          onValueChanged: args => {\n            var form = this.form;\n            var colSpan = args.value ? 1 : 2;\n            form.itemOption(APPOINTMENT_FORM_GROUP_NAMES.Main, \"colSpan\", colSpan);\n            form.itemOption(APPOINTMENT_FORM_GROUP_NAMES.Recurrence, \"colSpan\", colSpan);\n            updateRecurrenceItemVisibility(dataExprs.recurrenceRuleExpr, args.value, form);\n            changeSize(args.value);\n            triggerResize();\n          }\n        }\n      }]\n    }, {\n      itemType: \"empty\",\n      colSpan: 2\n    }, {\n      dataField: dataExprs.descriptionExpr,\n      editorType: \"dxTextArea\",\n      colSpan: 2,\n      label: {\n        text: messageLocalization.format(\"dxScheduler-editorLabelDescription\")\n      }\n    }, {\n      itemType: \"empty\",\n      colSpan: 2\n    }];\n  }\n\n  _createRecurrenceEditor(dataExprs) {\n    return [{\n      dataField: dataExprs.recurrenceRuleExpr,\n      editorType: \"dxRecurrenceEditor\",\n      editorOptions: {\n        firstDayOfWeek: this.scheduler.getFirstDayOfWeek()\n      },\n      label: {\n        text: \" \",\n        visible: false\n      }\n    }];\n  }\n\n  setEditorsType(allDay) {\n    var {\n      startDateExpr: startDateExpr,\n      endDateExpr: endDateExpr\n    } = this.scheduler.getDataAccessors().expr;\n    var startDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, \".\").concat(startDateExpr);\n    var endDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Recurrence, \".\").concat(endDateExpr);\n    var startDateFormItem = this.form.itemOption(startDateItemPath);\n    var endDateFormItem = this.form.itemOption(endDateItemPath);\n\n    if (startDateFormItem && endDateFormItem) {\n      var startDateEditorOptions = startDateFormItem.editorOptions;\n      var endDateEditorOptions = endDateFormItem.editorOptions;\n      startDateEditorOptions.type = endDateEditorOptions.type = allDay ? \"date\" : \"datetime\";\n      this.form.itemOption(startDateItemPath, \"editorOptions\", startDateEditorOptions);\n      this.form.itemOption(endDateItemPath, \"editorOptions\", endDateEditorOptions);\n    }\n  }\n\n  updateTimeZoneEditorDataSource(date, expression) {\n    var timeZoneDataSource = new DataSource({\n      store: timeZoneDataUtils.getDisplayedTimeZones(date),\n      paginate: true,\n      pageSize: 10\n    });\n    var options = {\n      dataSource: timeZoneDataSource\n    };\n    this.setEditorOptions(expression, \"Main\", options);\n  }\n\n  updateRecurrenceEditorStartDate(date, expression) {\n    var options = {\n      startDate: date\n    };\n    this.setEditorOptions(expression, \"Recurrence\", options);\n  }\n\n  setEditorOptions(name, groupName, options) {\n    var editorPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.groupName, \".\").concat(name);\n    var editor = this.form.itemOption(editorPath);\n    editor && this.form.itemOption(editorPath, \"editorOptions\", extend({}, editor.editorOptions, options));\n  }\n\n  updateFormData(formData) {\n    this.semaphore.take();\n    var dataExprs = this.scheduler.getDataAccessors().expr;\n    var allDay = formData[dataExprs.allDayExpr];\n    var startDate = new Date(formData[dataExprs.startDateExpr]);\n    var endDate = new Date(formData[dataExprs.endDateExpr]);\n    this.updateTimeZoneEditorDataSource(startDate, dataExprs.startDateTimeZoneExpr);\n    this.updateTimeZoneEditorDataSource(endDate, dataExprs.endDateTimeZoneExpr);\n    this.updateRecurrenceEditorStartDate(startDate, dataExprs.recurrenceRuleExpr);\n    this.form.option(\"formData\", formData);\n    this.setEditorsType(allDay);\n    this.semaphore.release();\n  }\n\n}","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/node_modules/devextreme/esm/ui/scheduler/appointmentPopup/form.js"],"names":["_extends","$","Form","dateSerialization","messageLocalization","devices","DataSource","timeZoneDataUtils","extend","dateUtils","Semaphore","SCREEN_SIZE_OF_SINGLE_COLUMN","APPOINTMENT_FORM_GROUP_NAMES","Main","Recurrence","getStartDateWithStartHour","startDate","startDayHour","Date","setHours","validateAppointmentFormDate","editor","value","previousValue","isCurrentDateCorrect","isPreviousDateCorrect","option","updateRecurrenceItemVisibility","recurrenceRuleExpr","form","_form$getEditor","itemOption","updateData","getEditor","changeValueByVisibility","createDateBoxEditor","dataField","colSpan","firstDayOfWeek","label","onValueChanged","editorType","text","format","validationRules","type","editorOptions","width","calendarOptions","useMaskBehavior","AppointmentForm","constructor","scheduler","semaphore","dxForm","readOnly","getDataAccessors","expr","recurrenceEditor","formData","create","triggerResize","changeSize","allowTimeZoneEditing","getEditingConfig","recurrenceEditorVisibility","mainItems","_createMainItems","createResourceEditorModel","items","itemType","name","colCountByScreen","lg","xs","visible","_createRecurrenceEditor","element","createComponent","showValidationSummary","scrollingEnabled","colCount","showColonAfterLabel","labelLocation","screenByWidth","current","deviceType","_dateBoxValueChanged","args","dateExpr","isNeedCorrect","component","deserializeDate","dateEditor","dateValue","isFree","duration","getTime","_createTimezoneEditor","timeZoneExpr","secondTimeZoneExpr","visibleIndex","isMainTimeZone","arguments","length","noTzTitle","displayExpr","valueExpr","placeholder","searchEnabled","secondTimezoneEditor","_createDateBoxItems","dataExprs","getFirstDayOfWeek","startDateExpr","endDateExpr","endValue","startValue","startDateTimeZoneExpr","endDateTimeZoneExpr","_changeFormItemDateType","itemPath","isAllDay","itemEditorOptions","newEditorOption","textExpr","allDayExpr","cssClass","location","startDateEditor","endDateEditor","allDayStartDate","trimTime","startDateWithStartHour","getStartDayHour","endDate","getCalculatedEndDate","startDateItemPath","concat","endDateItemPath","descriptionExpr","setEditorsType","allDay","startDateFormItem","endDateFormItem","startDateEditorOptions","endDateEditorOptions","updateTimeZoneEditorDataSource","date","expression","timeZoneDataSource","store","getDisplayedTimeZones","paginate","pageSize","options","dataSource","setEditorOptions","updateRecurrenceEditorStartDate","groupName","editorPath","updateFormData","take","release"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,CAAP,MAAc,wBAAd;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,SACIC,MADJ,QAEO,4BAFP;AAGA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SACIC,SADJ,QAEO,4CAFP;AAGA,OAAO,sBAAP;AACA,OAAO,iBAAP;AACA,OAAO,eAAP;AACA,OAAO,cAAP;AACA,OAAO,kBAAP;AACA,IAAIC,4BAA4B,GAAG,GAAnC;AACA,OAAO,IAAIC,4BAA4B,GAAG;AACtCC,EAAAA,IAAI,EAAE,WADgC;AAEtCC,EAAAA,UAAU,EAAE;AAF0B,CAAnC;;AAIP,IAAIC,yBAAyB,GAAG,CAACC,SAAD,EAAYC,YAAZ,KAA6B,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,CAASF,SAAT,EAAoBG,QAApB,CAA6BF,YAA7B,CAAT,CAA7D;;AACA,IAAIG,2BAA2B,GAAG,CAACC,MAAD,EAASC,KAAT,EAAgBC,aAAhB,KAAkC;AAChE,MAAIC,oBAAoB,GAAG,SAASF,KAAT,IAAkB,CAAC,CAACA,KAA/C;AACA,MAAIG,qBAAqB,GAAG,SAASF,aAAT,IAA0B,CAAC,CAACA,aAAxD;;AACA,MAAI,CAACC,oBAAD,IAAyBC,qBAA7B,EAAoD;AAChDJ,IAAAA,MAAM,CAACK,MAAP,CAAc,OAAd,EAAuBH,aAAvB;AACH;AACJ,CAND;;AAOA,IAAII,8BAA8B,GAAG,CAACC,kBAAD,EAAqBN,KAArB,EAA4BO,IAA5B,KAAqC;AACtE,MAAIC,eAAJ;;AACAD,EAAAA,IAAI,CAACE,UAAL,CAAgBnB,4BAA4B,CAACE,UAA7C,EAAyD,SAAzD,EAAoEQ,KAApE;AACA,GAACA,KAAD,IAAUO,IAAI,CAACG,UAAL,CAAgBJ,kBAAhB,EAAoC,EAApC,CAAV;AACA,YAAUE,eAAe,GAAGD,IAAI,CAACI,SAAL,CAAeL,kBAAf,CAA5B,KAAmE,KAAK,CAAL,KAAWE,eAA9E,GAAgG,KAAK,CAArG,GAAyGA,eAAe,CAACI,uBAAhB,CAAwCZ,KAAxC,CAAzG;AACH,CALD;;AAMA,IAAIa,mBAAmB,GAAG,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,cAArB,EAAqCC,KAArC,EAA4CC,cAA5C,MAAgE;AACtFC,EAAAA,UAAU,EAAE,WAD0E;AAEtFL,EAAAA,SAAS,EAAEA,SAF2E;AAGtFC,EAAAA,OAAO,EAAEA,OAH6E;AAItFE,EAAAA,KAAK,EAAE;AACHG,IAAAA,IAAI,EAAEtC,mBAAmB,CAACuC,MAApB,CAA2BJ,KAA3B;AADH,GAJ+E;AAOtFK,EAAAA,eAAe,EAAE,CAAC;AACdC,IAAAA,IAAI,EAAE;AADQ,GAAD,CAPqE;AAUtFC,EAAAA,aAAa,EAAE;AACXC,IAAAA,KAAK,EAAE,MADI;AAEXC,IAAAA,eAAe,EAAE;AACbV,MAAAA,cAAc,EAAEA;AADH,KAFN;AAKXE,IAAAA,cAAc,EAAEA,cALL;AAMXS,IAAAA,eAAe,EAAE;AANN;AAVuE,CAAhE,CAA1B;;AAmBA,OAAO,MAAMC,eAAN,CAAsB;AACzBC,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACA,SAAKvB,IAAL,GAAY,IAAZ;AACA,SAAKwB,SAAL,GAAiB,IAAI3C,SAAJ,EAAjB;AACH;;AACS,MAAN4C,MAAM,GAAG;AACT,WAAO,KAAKzB,IAAZ;AACH;;AACW,MAAR0B,QAAQ,CAACjC,KAAD,EAAQ;AAChB,SAAKO,IAAL,CAAUH,MAAV,CAAiB,UAAjB,EAA6BJ,KAA7B;AACA,QAAI;AACAM,MAAAA,kBAAkB,EAAEA;AADpB,QAEA,KAAKwB,SAAL,CAAeI,gBAAf,GAAkCC,IAFtC;AAGA,QAAIC,gBAAgB,GAAG,KAAK7B,IAAL,CAAUI,SAAV,CAAoBL,kBAApB,CAAvB;AACA,aAAS8B,gBAAT,IAA6B,KAAK,CAAL,KAAWA,gBAAxC,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,CAAChC,MAAjB,CAAwB,UAAxB,EAAoCJ,KAApC,CAApE;AACH;;AACW,MAARqC,QAAQ,GAAG;AACX,WAAO,KAAK9B,IAAL,CAAUH,MAAV,CAAiB,UAAjB,CAAP;AACH;;AACW,MAARiC,QAAQ,CAACrC,KAAD,EAAQ;AAChB,SAAKO,IAAL,CAAUH,MAAV,CAAiB,UAAjB,EAA6BJ,KAA7B;AACH;;AACDsC,EAAAA,MAAM,CAACC,aAAD,EAAgBC,UAAhB,EAA4BH,QAA5B,EAAsC;AACxC,QAAII,oBAAoB,GAAG,KAAKX,SAAL,CAAeY,gBAAf,GAAkCD,oBAA7D;AACA,QAAI;AACAN,MAAAA,IAAI,EAAEA;AADN,QAEA,KAAKL,SAAL,CAAeI,gBAAf,EAFJ;AAGA,QAAIS,0BAA0B,GAAG,CAAC,CAACN,QAAQ,CAACF,IAAI,CAAC7B,kBAAN,CAA3C;AACA,QAAIS,OAAO,GAAG4B,0BAA0B,GAAG,CAAH,GAAO,CAA/C;AACA,QAAIC,SAAS,GAAG,CAAC,GAAG,KAAKC,gBAAL,CAAsBV,IAAtB,EAA4BI,aAA5B,EAA2CC,UAA3C,EAAuDC,oBAAvD,CAAJ,EAAkF,GAAG,KAAKX,SAAL,CAAegB,yBAAf,EAArF,CAAhB;AACAN,IAAAA,UAAU,CAACG,0BAAD,CAAV;AACA,QAAII,KAAK,GAAG,CAAC;AACTC,MAAAA,QAAQ,EAAE,OADD;AAETC,MAAAA,IAAI,EAAE3D,4BAA4B,CAACC,IAF1B;AAGT2D,MAAAA,gBAAgB,EAAE;AACdC,QAAAA,EAAE,EAAE,CADU;AAEdC,QAAAA,EAAE,EAAE;AAFU,OAHT;AAOTrC,MAAAA,OAAO,EAAEA,OAPA;AAQTgC,MAAAA,KAAK,EAAEH;AARE,KAAD,EAST;AACCI,MAAAA,QAAQ,EAAE,OADX;AAECC,MAAAA,IAAI,EAAE3D,4BAA4B,CAACE,UAFpC;AAGC6D,MAAAA,OAAO,EAAEV,0BAHV;AAIC5B,MAAAA,OAAO,EAAEA,OAJV;AAKCgC,MAAAA,KAAK,EAAE,KAAKO,uBAAL,CAA6BnB,IAA7B;AALR,KATS,CAAZ;AAgBA,QAAIoB,OAAO,GAAG5E,CAAC,CAAC,OAAD,CAAf;AACA,SAAK4B,IAAL,GAAY,KAAKuB,SAAL,CAAe0B,eAAf,CAA+BD,OAA/B,EAAwC3E,IAAxC,EAA8C;AACtDmE,MAAAA,KAAK,EAAEA,KAD+C;AAEtDU,MAAAA,qBAAqB,EAAE,IAF+B;AAGtDC,MAAAA,gBAAgB,EAAE,IAHoC;AAItDC,MAAAA,QAAQ,EAAE,MAJ4C;AAKtDT,MAAAA,gBAAgB,EAAE;AACdC,QAAAA,EAAE,EAAE,CADU;AAEdC,QAAAA,EAAE,EAAE;AAFU,OALoC;AAStDf,MAAAA,QAAQ,EAAEA,QAT4C;AAUtDuB,MAAAA,mBAAmB,EAAE,KAViC;AAWtDC,MAAAA,aAAa,EAAE,KAXuC;AAYtDC,MAAAA,aAAa,EAAErC,KAAK,IAAIA,KAAK,GAAGpC,4BAAR,IAAwC,cAAcN,OAAO,CAACgF,OAAR,GAAkBC,UAAxE,GAAqF,IAArF,GAA4F;AAZ9D,KAA9C,CAAZ;AAcH;;AACDC,EAAAA,oBAAoB,CAACC,IAAD,EAAOC,QAAP,EAAiBC,aAAjB,EAAgC;AAChDtE,IAAAA,2BAA2B,CAACoE,IAAI,CAACG,SAAN,EAAiBH,IAAI,CAAClE,KAAtB,EAA6BkE,IAAI,CAACjE,aAAlC,CAA3B;AACA,QAAID,KAAK,GAAGnB,iBAAiB,CAACyF,eAAlB,CAAkCJ,IAAI,CAAClE,KAAvC,CAAZ;AACA,QAAIC,aAAa,GAAGpB,iBAAiB,CAACyF,eAAlB,CAAkCJ,IAAI,CAACjE,aAAvC,CAApB;AACA,QAAIsE,UAAU,GAAG,KAAKhE,IAAL,CAAUI,SAAV,CAAoBwD,QAApB,CAAjB;AACA,QAAIK,SAAS,GAAG3F,iBAAiB,CAACyF,eAAlB,CAAkCC,UAAU,CAACnE,MAAX,CAAkB,OAAlB,CAAlC,CAAhB;;AACA,QAAI,KAAK2B,SAAL,CAAe0C,MAAf,MAA2BD,SAA3B,IAAwCxE,KAAxC,IAAiDoE,aAAa,CAACI,SAAD,EAAYxE,KAAZ,CAAlE,EAAsF;AAClF,UAAI0E,QAAQ,GAAGzE,aAAa,GAAGuE,SAAS,CAACG,OAAV,KAAsB1E,aAAa,CAAC0E,OAAd,EAAzB,GAAmD,CAA/E;AACAJ,MAAAA,UAAU,CAACnE,MAAX,CAAkB,OAAlB,EAA2B,IAAIR,IAAJ,CAASI,KAAK,CAAC2E,OAAN,KAAkBD,QAA3B,CAA3B;AACH;AACJ;;AACDE,EAAAA,qBAAqB,CAACC,YAAD,EAAeC,kBAAf,EAAmCC,YAAnC,EAAiDhE,OAAjD,EAA0DiE,cAA1D,EAA0E;AAC3F,QAAI3B,OAAO,GAAG4B,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwB,KAAK,CAAL,KAAWD,SAAS,CAAC,CAAD,CAA5C,GAAkDA,SAAS,CAAC,CAAD,CAA3D,GAAiE,KAA/E;AACA,QAAIE,SAAS,GAAGrG,mBAAmB,CAACuC,MAApB,CAA2B,6BAA3B,CAAhB;AACA,WAAO;AACHP,MAAAA,SAAS,EAAE+D,YADR;AAEH1D,MAAAA,UAAU,EAAE,aAFT;AAGH4D,MAAAA,YAAY,EAAEA,YAHX;AAIHhE,MAAAA,OAAO,EAAEA,OAJN;AAKHE,MAAAA,KAAK,EAAE;AACHG,QAAAA,IAAI,EAAE;AADH,OALJ;AAQHI,MAAAA,aAAa,EAAE;AACX4D,QAAAA,WAAW,EAAE,OADF;AAEXC,QAAAA,SAAS,EAAE,IAFA;AAGXC,QAAAA,WAAW,EAAEH,SAHF;AAIXI,QAAAA,aAAa,EAAE,IAJJ;AAKXrE,QAAAA,cAAc,EAAEgD,IAAI,IAAI;AACpB,cAAI3D,IAAI,GAAG,KAAKA,IAAhB;AACA,cAAIiF,oBAAoB,GAAGjF,IAAI,CAACI,SAAL,CAAemE,kBAAf,CAA3B;;AACA,cAAIE,cAAJ,EAAoB;AAChBQ,YAAAA,oBAAoB,CAACpF,MAArB,CAA4B,OAA5B,EAAqC8D,IAAI,CAAClE,KAA1C;AACH;AACJ;AAXU,OARZ;AAqBHqD,MAAAA,OAAO,EAAEA;AArBN,KAAP;AAuBH;;AACDoC,EAAAA,mBAAmB,CAACC,SAAD,EAAYjD,oBAAZ,EAAkC;AACjD,QAAI1B,OAAO,GAAG0B,oBAAoB,GAAG,CAAH,GAAO,CAAzC;AACA,QAAIzB,cAAc,GAAG,KAAKc,SAAL,CAAe6D,iBAAf,EAArB;AACA,WAAO,CAAC9E,mBAAmB,CAAC6E,SAAS,CAACE,aAAX,EAA0B7E,OAA1B,EAAmCC,cAAnC,EAAmD,kCAAnD,EAAuFkD,IAAI,IAAI;AACtH,WAAKD,oBAAL,CAA0BC,IAA1B,EAAgCwB,SAAS,CAACG,WAA1C,EAAuD,CAACC,QAAD,EAAWC,UAAX,KAA0BD,QAAQ,GAAGC,UAA5F;AACH,KAF0B,CAApB,EAEH,KAAKnB,qBAAL,CAA2Bc,SAAS,CAACM,qBAArC,EAA4DN,SAAS,CAACO,mBAAtE,EAA2F,CAA3F,EAA8FlF,OAA9F,EAAuG,IAAvG,EAA6G0B,oBAA7G,CAFG,EAEiI5B,mBAAmB,CAAC6E,SAAS,CAACG,WAAX,EAAwB9E,OAAxB,EAAiCC,cAAjC,EAAiD,gCAAjD,EAAmFkD,IAAI,IAAI;AAClP,WAAKD,oBAAL,CAA0BC,IAA1B,EAAgCwB,SAAS,CAACE,aAA1C,EAAyD,CAACG,UAAD,EAAaD,QAAb,KAA0BA,QAAQ,GAAGC,UAA9F;AACH,KAF0J,CAFpJ,EAIH,KAAKnB,qBAAL,CAA2Bc,SAAS,CAACO,mBAArC,EAA0DP,SAAS,CAACM,qBAApE,EAA2F,CAA3F,EAA8FjF,OAA9F,EAAuG,KAAvG,EAA8G0B,oBAA9G,CAJG,CAAP;AAKH;;AACDyD,EAAAA,uBAAuB,CAACC,QAAD,EAAWC,QAAX,EAAqB;AACxC,QAAIC,iBAAiB,GAAG,KAAK9F,IAAL,CAAUE,UAAV,CAAqB0F,QAArB,EAA+B3E,aAAvD;AACA,QAAID,IAAI,GAAG6E,QAAQ,GAAG,MAAH,GAAY,UAA/B;;AACA,QAAIE,eAAe,GAAG5H,QAAQ,CAAC,EAAD,EAAK2H,iBAAL,EAAwB;AAClD9E,MAAAA,IAAI,EAAEA;AAD4C,KAAxB,CAA9B;;AAGA,SAAKhB,IAAL,CAAUE,UAAV,CAAqB0F,QAArB,EAA+B,eAA/B,EAAgDG,eAAhD;AACH;;AACDzD,EAAAA,gBAAgB,CAAC6C,SAAD,EAAYnD,aAAZ,EAA2BC,UAA3B,EAAuCC,oBAAvC,EAA6D;AACzE,WAAO,CAAC;AACJ3B,MAAAA,SAAS,EAAE4E,SAAS,CAACa,QADjB;AAEJpF,MAAAA,UAAU,EAAE,WAFR;AAGJJ,MAAAA,OAAO,EAAE,CAHL;AAIJE,MAAAA,KAAK,EAAE;AACHG,QAAAA,IAAI,EAAEtC,mBAAmB,CAACuC,MAApB,CAA2B,8BAA3B;AADH;AAJH,KAAD,EAOJ;AACC2B,MAAAA,QAAQ,EAAE,OADX;AAECjC,MAAAA,OAAO,EAAE,CAFV;AAGCmC,MAAAA,gBAAgB,EAAE;AACdC,QAAAA,EAAE,EAAE,CADU;AAEdC,QAAAA,EAAE,EAAE;AAFU,OAHnB;AAOCL,MAAAA,KAAK,EAAE,KAAK0C,mBAAL,CAAyBC,SAAzB,EAAoCjD,oBAApC;AAPR,KAPI,EAeJ;AACCO,MAAAA,QAAQ,EAAE,OADX;AAECE,MAAAA,gBAAgB,EAAE;AACdC,QAAAA,EAAE,EAAE,CADU;AAEdC,QAAAA,EAAE,EAAE;AAFU,OAFnB;AAMCrC,MAAAA,OAAO,EAAE,CANV;AAOCgC,MAAAA,KAAK,EAAE,CAAC;AACJjC,QAAAA,SAAS,EAAE4E,SAAS,CAACc,UADjB;AAEJC,QAAAA,QAAQ,EAAE,4BAFN;AAGJtF,QAAAA,UAAU,EAAE,UAHR;AAIJF,QAAAA,KAAK,EAAE;AACHG,UAAAA,IAAI,EAAEtC,mBAAmB,CAACuC,MAApB,CAA2B,oBAA3B,CADH;AAEHqF,UAAAA,QAAQ,EAAE;AAFP,SAJH;AAQJlF,QAAAA,aAAa,EAAE;AACXN,UAAAA,cAAc,EAAEgD,IAAI,IAAI;AACpB,gBAAIlE,KAAK,GAAGkE,IAAI,CAAClE,KAAjB;AACA,gBAAI2G,eAAe,GAAG,KAAKpG,IAAL,CAAUI,SAAV,CAAoB+E,SAAS,CAACE,aAA9B,CAAtB;AACA,gBAAIgB,aAAa,GAAG,KAAKrG,IAAL,CAAUI,SAAV,CAAoB+E,SAAS,CAACG,WAA9B,CAApB;AACA,gBAAInG,SAAS,GAAGb,iBAAiB,CAACyF,eAAlB,CAAkCqC,eAAe,CAACvG,MAAhB,CAAuB,OAAvB,CAAlC,CAAhB;;AACA,gBAAI,KAAK2B,SAAL,CAAe0C,MAAf,MAA2B/E,SAA/B,EAA0C;AACtC,kBAAIM,KAAJ,EAAW;AACP,oBAAI6G,eAAe,GAAG1H,SAAS,CAAC2H,QAAV,CAAmBpH,SAAnB,CAAtB;AACAiH,gBAAAA,eAAe,CAACvG,MAAhB,CAAuB,OAAvB,EAAgC,IAAIR,IAAJ,CAASiH,eAAT,CAAhC;AACAD,gBAAAA,aAAa,CAACxG,MAAd,CAAqB,OAArB,EAA8B,IAAIR,IAAJ,CAASiH,eAAT,CAA9B;AACH,eAJD,MAIO;AACH,oBAAIE,sBAAsB,GAAGtH,yBAAyB,CAACC,SAAD,EAAY,KAAKoC,SAAL,CAAekF,eAAf,EAAZ,CAAtD;AACA,oBAAIC,OAAO,GAAG,KAAKnF,SAAL,CAAeoF,oBAAf,CAAoCH,sBAApC,CAAd;AACAJ,gBAAAA,eAAe,CAACvG,MAAhB,CAAuB,OAAvB,EAAgC2G,sBAAhC;AACAH,gBAAAA,aAAa,CAACxG,MAAd,CAAqB,OAArB,EAA8B6G,OAA9B;AACH;AACJ;;AACD,gBAAIE,iBAAiB,GAAG,GAAGC,MAAH,CAAU9H,4BAA4B,CAACC,IAAvC,EAA6C,GAA7C,EAAkD6H,MAAlD,CAAyD1B,SAAS,CAACE,aAAnE,CAAxB;AACA,gBAAIyB,eAAe,GAAG,GAAGD,MAAH,CAAU9H,4BAA4B,CAACC,IAAvC,EAA6C,GAA7C,EAAkD6H,MAAlD,CAAyD1B,SAAS,CAACG,WAAnE,CAAtB;;AACA,iBAAKK,uBAAL,CAA6BiB,iBAA7B,EAAgDnH,KAAhD;;AACA,iBAAKkG,uBAAL,CAA6BmB,eAA7B,EAA8CrH,KAA9C;AACH;AAtBU;AARX,OAAD,EAgCJ;AACCmB,QAAAA,UAAU,EAAE,UADb;AAECL,QAAAA,SAAS,EAAE,QAFZ;AAGC2F,QAAAA,QAAQ,EAAE,4BAHX;AAICxD,QAAAA,IAAI,EAAE,mBAJP;AAKChC,QAAAA,KAAK,EAAE;AACHG,UAAAA,IAAI,EAAEtC,mBAAmB,CAACuC,MAApB,CAA2B,mCAA3B,CADH;AAEHqF,UAAAA,QAAQ,EAAE;AAFP,SALR;AASClF,QAAAA,aAAa,EAAE;AACXN,UAAAA,cAAc,EAAEgD,IAAI,IAAI;AACpB,gBAAI3D,IAAI,GAAG,KAAKA,IAAhB;AACA,gBAAIQ,OAAO,GAAGmD,IAAI,CAAClE,KAAL,GAAa,CAAb,GAAiB,CAA/B;AACAO,YAAAA,IAAI,CAACE,UAAL,CAAgBnB,4BAA4B,CAACC,IAA7C,EAAmD,SAAnD,EAA8DwB,OAA9D;AACAR,YAAAA,IAAI,CAACE,UAAL,CAAgBnB,4BAA4B,CAACE,UAA7C,EAAyD,SAAzD,EAAoEuB,OAApE;AACAV,YAAAA,8BAA8B,CAACqF,SAAS,CAACpF,kBAAX,EAA+B4D,IAAI,CAAClE,KAApC,EAA2CO,IAA3C,CAA9B;AACAiC,YAAAA,UAAU,CAAC0B,IAAI,CAAClE,KAAN,CAAV;AACAuC,YAAAA,aAAa;AAChB;AATU;AAThB,OAhCI;AAPR,KAfI,EA2EJ;AACCS,MAAAA,QAAQ,EAAE,OADX;AAECjC,MAAAA,OAAO,EAAE;AAFV,KA3EI,EA8EJ;AACCD,MAAAA,SAAS,EAAE4E,SAAS,CAAC4B,eADtB;AAECnG,MAAAA,UAAU,EAAE,YAFb;AAGCJ,MAAAA,OAAO,EAAE,CAHV;AAICE,MAAAA,KAAK,EAAE;AACHG,QAAAA,IAAI,EAAEtC,mBAAmB,CAACuC,MAApB,CAA2B,oCAA3B;AADH;AAJR,KA9EI,EAqFJ;AACC2B,MAAAA,QAAQ,EAAE,OADX;AAECjC,MAAAA,OAAO,EAAE;AAFV,KArFI,CAAP;AAyFH;;AACDuC,EAAAA,uBAAuB,CAACoC,SAAD,EAAY;AAC/B,WAAO,CAAC;AACJ5E,MAAAA,SAAS,EAAE4E,SAAS,CAACpF,kBADjB;AAEJa,MAAAA,UAAU,EAAE,oBAFR;AAGJK,MAAAA,aAAa,EAAE;AACXR,QAAAA,cAAc,EAAE,KAAKc,SAAL,CAAe6D,iBAAf;AADL,OAHX;AAMJ1E,MAAAA,KAAK,EAAE;AACHG,QAAAA,IAAI,EAAE,GADH;AAEHiC,QAAAA,OAAO,EAAE;AAFN;AANH,KAAD,CAAP;AAWH;;AACDkE,EAAAA,cAAc,CAACC,MAAD,EAAS;AACnB,QAAI;AACA5B,MAAAA,aAAa,EAAEA,aADf;AAEAC,MAAAA,WAAW,EAAEA;AAFb,QAGA,KAAK/D,SAAL,CAAeI,gBAAf,GAAkCC,IAHtC;AAIA,QAAIgF,iBAAiB,GAAG,GAAGC,MAAH,CAAU9H,4BAA4B,CAACC,IAAvC,EAA6C,GAA7C,EAAkD6H,MAAlD,CAAyDxB,aAAzD,CAAxB;AACA,QAAIyB,eAAe,GAAG,GAAGD,MAAH,CAAU9H,4BAA4B,CAACE,UAAvC,EAAmD,GAAnD,EAAwD4H,MAAxD,CAA+DvB,WAA/D,CAAtB;AACA,QAAI4B,iBAAiB,GAAG,KAAKlH,IAAL,CAAUE,UAAV,CAAqB0G,iBAArB,CAAxB;AACA,QAAIO,eAAe,GAAG,KAAKnH,IAAL,CAAUE,UAAV,CAAqB4G,eAArB,CAAtB;;AACA,QAAII,iBAAiB,IAAIC,eAAzB,EAA0C;AACtC,UAAIC,sBAAsB,GAAGF,iBAAiB,CAACjG,aAA/C;AACA,UAAIoG,oBAAoB,GAAGF,eAAe,CAAClG,aAA3C;AACAmG,MAAAA,sBAAsB,CAACpG,IAAvB,GAA8BqG,oBAAoB,CAACrG,IAArB,GAA4BiG,MAAM,GAAG,MAAH,GAAY,UAA5E;AACA,WAAKjH,IAAL,CAAUE,UAAV,CAAqB0G,iBAArB,EAAwC,eAAxC,EAAyDQ,sBAAzD;AACA,WAAKpH,IAAL,CAAUE,UAAV,CAAqB4G,eAArB,EAAsC,eAAtC,EAAuDO,oBAAvD;AACH;AACJ;;AACDC,EAAAA,8BAA8B,CAACC,IAAD,EAAOC,UAAP,EAAmB;AAC7C,QAAIC,kBAAkB,GAAG,IAAIhJ,UAAJ,CAAe;AACpCiJ,MAAAA,KAAK,EAAEhJ,iBAAiB,CAACiJ,qBAAlB,CAAwCJ,IAAxC,CAD6B;AAEpCK,MAAAA,QAAQ,EAAE,IAF0B;AAGpCC,MAAAA,QAAQ,EAAE;AAH0B,KAAf,CAAzB;AAKA,QAAIC,OAAO,GAAG;AACVC,MAAAA,UAAU,EAAEN;AADF,KAAd;AAGA,SAAKO,gBAAL,CAAsBR,UAAtB,EAAkC,MAAlC,EAA0CM,OAA1C;AACH;;AACDG,EAAAA,+BAA+B,CAACV,IAAD,EAAOC,UAAP,EAAmB;AAC9C,QAAIM,OAAO,GAAG;AACV3I,MAAAA,SAAS,EAAEoI;AADD,KAAd;AAGA,SAAKS,gBAAL,CAAsBR,UAAtB,EAAkC,YAAlC,EAAgDM,OAAhD;AACH;;AACDE,EAAAA,gBAAgB,CAACtF,IAAD,EAAOwF,SAAP,EAAkBJ,OAAlB,EAA2B;AACvC,QAAIK,UAAU,GAAG,GAAGtB,MAAH,CAAU9H,4BAA4B,CAACmJ,SAAvC,EAAkD,GAAlD,EAAuDrB,MAAvD,CAA8DnE,IAA9D,CAAjB;AACA,QAAIlD,MAAM,GAAG,KAAKQ,IAAL,CAAUE,UAAV,CAAqBiI,UAArB,CAAb;AACA3I,IAAAA,MAAM,IAAI,KAAKQ,IAAL,CAAUE,UAAV,CAAqBiI,UAArB,EAAiC,eAAjC,EAAkDxJ,MAAM,CAAC,EAAD,EAAKa,MAAM,CAACyB,aAAZ,EAA2B6G,OAA3B,CAAxD,CAAV;AACH;;AACDM,EAAAA,cAAc,CAACtG,QAAD,EAAW;AACrB,SAAKN,SAAL,CAAe6G,IAAf;AACA,QAAIlD,SAAS,GAAG,KAAK5D,SAAL,CAAeI,gBAAf,GAAkCC,IAAlD;AACA,QAAIqF,MAAM,GAAGnF,QAAQ,CAACqD,SAAS,CAACc,UAAX,CAArB;AACA,QAAI9G,SAAS,GAAG,IAAIE,IAAJ,CAASyC,QAAQ,CAACqD,SAAS,CAACE,aAAX,CAAjB,CAAhB;AACA,QAAIqB,OAAO,GAAG,IAAIrH,IAAJ,CAASyC,QAAQ,CAACqD,SAAS,CAACG,WAAX,CAAjB,CAAd;AACA,SAAKgC,8BAAL,CAAoCnI,SAApC,EAA+CgG,SAAS,CAACM,qBAAzD;AACA,SAAK6B,8BAAL,CAAoCZ,OAApC,EAA6CvB,SAAS,CAACO,mBAAvD;AACA,SAAKuC,+BAAL,CAAqC9I,SAArC,EAAgDgG,SAAS,CAACpF,kBAA1D;AACA,SAAKC,IAAL,CAAUH,MAAV,CAAiB,UAAjB,EAA6BiC,QAA7B;AACA,SAAKkF,cAAL,CAAoBC,MAApB;AACA,SAAKzF,SAAL,CAAe8G,OAAf;AACH;;AAlRwB","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/appointmentPopup/form.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../../../core/renderer\";\r\nimport Form from \"../../form\";\r\nimport dateSerialization from \"../../../core/utils/date_serialization\";\r\nimport messageLocalization from \"../../../localization/message\";\r\nimport devices from \"../../../core/devices\";\r\nimport DataSource from \"../../../data/data_source\";\r\nimport timeZoneDataUtils from \"../timezones/utils.timezones_data\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport dateUtils from \"../../../core/utils/date\";\r\nimport {\r\n    Semaphore\r\n} from \"../../../renovation/ui/scheduler/semaphore\";\r\nimport \"../recurrence_editor\";\r\nimport \"../../text_area\";\r\nimport \"../../tag_box\";\r\nimport \"../../switch\";\r\nimport \"../../select_box\";\r\nvar SCREEN_SIZE_OF_SINGLE_COLUMN = 600;\r\nexport var APPOINTMENT_FORM_GROUP_NAMES = {\r\n    Main: \"mainGroup\",\r\n    Recurrence: \"recurrenceGroup\"\r\n};\r\nvar getStartDateWithStartHour = (startDate, startDayHour) => new Date(new Date(startDate).setHours(startDayHour));\r\nvar validateAppointmentFormDate = (editor, value, previousValue) => {\r\n    var isCurrentDateCorrect = null === value || !!value;\r\n    var isPreviousDateCorrect = null === previousValue || !!previousValue;\r\n    if (!isCurrentDateCorrect && isPreviousDateCorrect) {\r\n        editor.option(\"value\", previousValue)\r\n    }\r\n};\r\nvar updateRecurrenceItemVisibility = (recurrenceRuleExpr, value, form) => {\r\n    var _form$getEditor;\r\n    form.itemOption(APPOINTMENT_FORM_GROUP_NAMES.Recurrence, \"visible\", value);\r\n    !value && form.updateData(recurrenceRuleExpr, \"\");\r\n    null === (_form$getEditor = form.getEditor(recurrenceRuleExpr)) || void 0 === _form$getEditor ? void 0 : _form$getEditor.changeValueByVisibility(value)\r\n};\r\nvar createDateBoxEditor = (dataField, colSpan, firstDayOfWeek, label, onValueChanged) => ({\r\n    editorType: \"dxDateBox\",\r\n    dataField: dataField,\r\n    colSpan: colSpan,\r\n    label: {\r\n        text: messageLocalization.format(label)\r\n    },\r\n    validationRules: [{\r\n        type: \"required\"\r\n    }],\r\n    editorOptions: {\r\n        width: \"100%\",\r\n        calendarOptions: {\r\n            firstDayOfWeek: firstDayOfWeek\r\n        },\r\n        onValueChanged: onValueChanged,\r\n        useMaskBehavior: true\r\n    }\r\n});\r\nexport class AppointmentForm {\r\n    constructor(scheduler) {\r\n        this.scheduler = scheduler;\r\n        this.form = null;\r\n        this.semaphore = new Semaphore\r\n    }\r\n    get dxForm() {\r\n        return this.form\r\n    }\r\n    set readOnly(value) {\r\n        this.form.option(\"readOnly\", value);\r\n        var {\r\n            recurrenceRuleExpr: recurrenceRuleExpr\r\n        } = this.scheduler.getDataAccessors().expr;\r\n        var recurrenceEditor = this.form.getEditor(recurrenceRuleExpr);\r\n        null === recurrenceEditor || void 0 === recurrenceEditor ? void 0 : recurrenceEditor.option(\"readOnly\", value)\r\n    }\r\n    get formData() {\r\n        return this.form.option(\"formData\")\r\n    }\r\n    set formData(value) {\r\n        this.form.option(\"formData\", value)\r\n    }\r\n    create(triggerResize, changeSize, formData) {\r\n        var allowTimeZoneEditing = this.scheduler.getEditingConfig().allowTimeZoneEditing;\r\n        var {\r\n            expr: expr\r\n        } = this.scheduler.getDataAccessors();\r\n        var recurrenceEditorVisibility = !!formData[expr.recurrenceRuleExpr];\r\n        var colSpan = recurrenceEditorVisibility ? 1 : 2;\r\n        var mainItems = [...this._createMainItems(expr, triggerResize, changeSize, allowTimeZoneEditing), ...this.scheduler.createResourceEditorModel()];\r\n        changeSize(recurrenceEditorVisibility);\r\n        var items = [{\r\n            itemType: \"group\",\r\n            name: APPOINTMENT_FORM_GROUP_NAMES.Main,\r\n            colCountByScreen: {\r\n                lg: 2,\r\n                xs: 1\r\n            },\r\n            colSpan: colSpan,\r\n            items: mainItems\r\n        }, {\r\n            itemType: \"group\",\r\n            name: APPOINTMENT_FORM_GROUP_NAMES.Recurrence,\r\n            visible: recurrenceEditorVisibility,\r\n            colSpan: colSpan,\r\n            items: this._createRecurrenceEditor(expr)\r\n        }];\r\n        var element = $(\"<div>\");\r\n        this.form = this.scheduler.createComponent(element, Form, {\r\n            items: items,\r\n            showValidationSummary: true,\r\n            scrollingEnabled: true,\r\n            colCount: \"auto\",\r\n            colCountByScreen: {\r\n                lg: 2,\r\n                xs: 1\r\n            },\r\n            formData: formData,\r\n            showColonAfterLabel: false,\r\n            labelLocation: \"top\",\r\n            screenByWidth: width => width < SCREEN_SIZE_OF_SINGLE_COLUMN || \"desktop\" !== devices.current().deviceType ? \"xs\" : \"lg\"\r\n        })\r\n    }\r\n    _dateBoxValueChanged(args, dateExpr, isNeedCorrect) {\r\n        validateAppointmentFormDate(args.component, args.value, args.previousValue);\r\n        var value = dateSerialization.deserializeDate(args.value);\r\n        var previousValue = dateSerialization.deserializeDate(args.previousValue);\r\n        var dateEditor = this.form.getEditor(dateExpr);\r\n        var dateValue = dateSerialization.deserializeDate(dateEditor.option(\"value\"));\r\n        if (this.semaphore.isFree() && dateValue && value && isNeedCorrect(dateValue, value)) {\r\n            var duration = previousValue ? dateValue.getTime() - previousValue.getTime() : 0;\r\n            dateEditor.option(\"value\", new Date(value.getTime() + duration))\r\n        }\r\n    }\r\n    _createTimezoneEditor(timeZoneExpr, secondTimeZoneExpr, visibleIndex, colSpan, isMainTimeZone) {\r\n        var visible = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : false;\r\n        var noTzTitle = messageLocalization.format(\"dxScheduler-noTimezoneTitle\");\r\n        return {\r\n            dataField: timeZoneExpr,\r\n            editorType: \"dxSelectBox\",\r\n            visibleIndex: visibleIndex,\r\n            colSpan: colSpan,\r\n            label: {\r\n                text: \" \"\r\n            },\r\n            editorOptions: {\r\n                displayExpr: \"title\",\r\n                valueExpr: \"id\",\r\n                placeholder: noTzTitle,\r\n                searchEnabled: true,\r\n                onValueChanged: args => {\r\n                    var form = this.form;\r\n                    var secondTimezoneEditor = form.getEditor(secondTimeZoneExpr);\r\n                    if (isMainTimeZone) {\r\n                        secondTimezoneEditor.option(\"value\", args.value)\r\n                    }\r\n                }\r\n            },\r\n            visible: visible\r\n        }\r\n    }\r\n    _createDateBoxItems(dataExprs, allowTimeZoneEditing) {\r\n        var colSpan = allowTimeZoneEditing ? 2 : 1;\r\n        var firstDayOfWeek = this.scheduler.getFirstDayOfWeek();\r\n        return [createDateBoxEditor(dataExprs.startDateExpr, colSpan, firstDayOfWeek, \"dxScheduler-editorLabelStartDate\", args => {\r\n            this._dateBoxValueChanged(args, dataExprs.endDateExpr, (endValue, startValue) => endValue < startValue)\r\n        }), this._createTimezoneEditor(dataExprs.startDateTimeZoneExpr, dataExprs.endDateTimeZoneExpr, 1, colSpan, true, allowTimeZoneEditing), createDateBoxEditor(dataExprs.endDateExpr, colSpan, firstDayOfWeek, \"dxScheduler-editorLabelEndDate\", args => {\r\n            this._dateBoxValueChanged(args, dataExprs.startDateExpr, (startValue, endValue) => endValue < startValue)\r\n        }), this._createTimezoneEditor(dataExprs.endDateTimeZoneExpr, dataExprs.startDateTimeZoneExpr, 3, colSpan, false, allowTimeZoneEditing)]\r\n    }\r\n    _changeFormItemDateType(itemPath, isAllDay) {\r\n        var itemEditorOptions = this.form.itemOption(itemPath).editorOptions;\r\n        var type = isAllDay ? \"date\" : \"datetime\";\r\n        var newEditorOption = _extends({}, itemEditorOptions, {\r\n            type: type\r\n        });\r\n        this.form.itemOption(itemPath, \"editorOptions\", newEditorOption)\r\n    }\r\n    _createMainItems(dataExprs, triggerResize, changeSize, allowTimeZoneEditing) {\r\n        return [{\r\n            dataField: dataExprs.textExpr,\r\n            editorType: \"dxTextBox\",\r\n            colSpan: 2,\r\n            label: {\r\n                text: messageLocalization.format(\"dxScheduler-editorLabelTitle\")\r\n            }\r\n        }, {\r\n            itemType: \"group\",\r\n            colSpan: 2,\r\n            colCountByScreen: {\r\n                lg: 2,\r\n                xs: 1\r\n            },\r\n            items: this._createDateBoxItems(dataExprs, allowTimeZoneEditing)\r\n        }, {\r\n            itemType: \"group\",\r\n            colCountByScreen: {\r\n                lg: 3,\r\n                xs: 3\r\n            },\r\n            colSpan: 2,\r\n            items: [{\r\n                dataField: dataExprs.allDayExpr,\r\n                cssClass: \"dx-appointment-form-switch\",\r\n                editorType: \"dxSwitch\",\r\n                label: {\r\n                    text: messageLocalization.format(\"dxScheduler-allDay\"),\r\n                    location: \"right\"\r\n                },\r\n                editorOptions: {\r\n                    onValueChanged: args => {\r\n                        var value = args.value;\r\n                        var startDateEditor = this.form.getEditor(dataExprs.startDateExpr);\r\n                        var endDateEditor = this.form.getEditor(dataExprs.endDateExpr);\r\n                        var startDate = dateSerialization.deserializeDate(startDateEditor.option(\"value\"));\r\n                        if (this.semaphore.isFree() && startDate) {\r\n                            if (value) {\r\n                                var allDayStartDate = dateUtils.trimTime(startDate);\r\n                                startDateEditor.option(\"value\", new Date(allDayStartDate));\r\n                                endDateEditor.option(\"value\", new Date(allDayStartDate))\r\n                            } else {\r\n                                var startDateWithStartHour = getStartDateWithStartHour(startDate, this.scheduler.getStartDayHour());\r\n                                var endDate = this.scheduler.getCalculatedEndDate(startDateWithStartHour);\r\n                                startDateEditor.option(\"value\", startDateWithStartHour);\r\n                                endDateEditor.option(\"value\", endDate)\r\n                            }\r\n                        }\r\n                        var startDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, \".\").concat(dataExprs.startDateExpr);\r\n                        var endDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, \".\").concat(dataExprs.endDateExpr);\r\n                        this._changeFormItemDateType(startDateItemPath, value);\r\n                        this._changeFormItemDateType(endDateItemPath, value)\r\n                    }\r\n                }\r\n            }, {\r\n                editorType: \"dxSwitch\",\r\n                dataField: \"repeat\",\r\n                cssClass: \"dx-appointment-form-switch\",\r\n                name: \"visibilityChanged\",\r\n                label: {\r\n                    text: messageLocalization.format(\"dxScheduler-editorLabelRecurrence\"),\r\n                    location: \"right\"\r\n                },\r\n                editorOptions: {\r\n                    onValueChanged: args => {\r\n                        var form = this.form;\r\n                        var colSpan = args.value ? 1 : 2;\r\n                        form.itemOption(APPOINTMENT_FORM_GROUP_NAMES.Main, \"colSpan\", colSpan);\r\n                        form.itemOption(APPOINTMENT_FORM_GROUP_NAMES.Recurrence, \"colSpan\", colSpan);\r\n                        updateRecurrenceItemVisibility(dataExprs.recurrenceRuleExpr, args.value, form);\r\n                        changeSize(args.value);\r\n                        triggerResize()\r\n                    }\r\n                }\r\n            }]\r\n        }, {\r\n            itemType: \"empty\",\r\n            colSpan: 2\r\n        }, {\r\n            dataField: dataExprs.descriptionExpr,\r\n            editorType: \"dxTextArea\",\r\n            colSpan: 2,\r\n            label: {\r\n                text: messageLocalization.format(\"dxScheduler-editorLabelDescription\")\r\n            }\r\n        }, {\r\n            itemType: \"empty\",\r\n            colSpan: 2\r\n        }]\r\n    }\r\n    _createRecurrenceEditor(dataExprs) {\r\n        return [{\r\n            dataField: dataExprs.recurrenceRuleExpr,\r\n            editorType: \"dxRecurrenceEditor\",\r\n            editorOptions: {\r\n                firstDayOfWeek: this.scheduler.getFirstDayOfWeek()\r\n            },\r\n            label: {\r\n                text: \" \",\r\n                visible: false\r\n            }\r\n        }]\r\n    }\r\n    setEditorsType(allDay) {\r\n        var {\r\n            startDateExpr: startDateExpr,\r\n            endDateExpr: endDateExpr\r\n        } = this.scheduler.getDataAccessors().expr;\r\n        var startDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, \".\").concat(startDateExpr);\r\n        var endDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Recurrence, \".\").concat(endDateExpr);\r\n        var startDateFormItem = this.form.itemOption(startDateItemPath);\r\n        var endDateFormItem = this.form.itemOption(endDateItemPath);\r\n        if (startDateFormItem && endDateFormItem) {\r\n            var startDateEditorOptions = startDateFormItem.editorOptions;\r\n            var endDateEditorOptions = endDateFormItem.editorOptions;\r\n            startDateEditorOptions.type = endDateEditorOptions.type = allDay ? \"date\" : \"datetime\";\r\n            this.form.itemOption(startDateItemPath, \"editorOptions\", startDateEditorOptions);\r\n            this.form.itemOption(endDateItemPath, \"editorOptions\", endDateEditorOptions)\r\n        }\r\n    }\r\n    updateTimeZoneEditorDataSource(date, expression) {\r\n        var timeZoneDataSource = new DataSource({\r\n            store: timeZoneDataUtils.getDisplayedTimeZones(date),\r\n            paginate: true,\r\n            pageSize: 10\r\n        });\r\n        var options = {\r\n            dataSource: timeZoneDataSource\r\n        };\r\n        this.setEditorOptions(expression, \"Main\", options)\r\n    }\r\n    updateRecurrenceEditorStartDate(date, expression) {\r\n        var options = {\r\n            startDate: date\r\n        };\r\n        this.setEditorOptions(expression, \"Recurrence\", options)\r\n    }\r\n    setEditorOptions(name, groupName, options) {\r\n        var editorPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.groupName, \".\").concat(name);\r\n        var editor = this.form.itemOption(editorPath);\r\n        editor && this.form.itemOption(editorPath, \"editorOptions\", extend({}, editor.editorOptions, options))\r\n    }\r\n    updateFormData(formData) {\r\n        this.semaphore.take();\r\n        var dataExprs = this.scheduler.getDataAccessors().expr;\r\n        var allDay = formData[dataExprs.allDayExpr];\r\n        var startDate = new Date(formData[dataExprs.startDateExpr]);\r\n        var endDate = new Date(formData[dataExprs.endDateExpr]);\r\n        this.updateTimeZoneEditorDataSource(startDate, dataExprs.startDateTimeZoneExpr);\r\n        this.updateTimeZoneEditorDataSource(endDate, dataExprs.endDateTimeZoneExpr);\r\n        this.updateRecurrenceEditorStartDate(startDate, dataExprs.recurrenceRuleExpr);\r\n        this.form.option(\"formData\", formData);\r\n        this.setEditorsType(allDay);\r\n        this.semaphore.release()\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}