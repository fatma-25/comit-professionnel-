{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/utils/data.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { replaceWrongEndDate } from \"../../../../ui/scheduler/appointments/dataProvider/utils\";\nimport { createAppointmentAdapter } from \"../../../../ui/scheduler/appointmentAdapter\";\nimport { isDefined } from \"../../../../core/utils/type\";\nvar RECURRENCE_FREQ = \"freq\";\nexport var getPreparedDataItems = (dataItems, dataAccessors, cellDurationInMinutes, timeZoneCalculator) => {\n  var result = [];\n  null === dataItems || void 0 === dataItems ? void 0 : dataItems.forEach(rawAppointment => {\n    var _recurrenceRule$match;\n\n    var startDate = new Date(dataAccessors.getter.startDate(rawAppointment));\n    var endDate = new Date(dataAccessors.getter.endDate(rawAppointment));\n    replaceWrongEndDate(rawAppointment, startDate, endDate, cellDurationInMinutes, dataAccessors);\n    var adapter = createAppointmentAdapter(rawAppointment, dataAccessors, timeZoneCalculator);\n    var comparableStartDate = adapter.startDate && adapter.calculateStartDate(\"toGrid\");\n    var comparableEndDate = adapter.endDate && adapter.calculateEndDate(\"toGrid\");\n    var regex = new RegExp(RECURRENCE_FREQ, \"gi\");\n    var recurrenceRule = adapter.recurrenceRule;\n    var hasRecurrenceRule = !!(null !== recurrenceRule && void 0 !== recurrenceRule && null !== (_recurrenceRule$match = recurrenceRule.match(regex)) && void 0 !== _recurrenceRule$match && _recurrenceRule$match.length);\n    var visible = isDefined(rawAppointment.visible) ? !!rawAppointment.visible : true;\n\n    if (comparableStartDate && comparableEndDate) {\n      result.push({\n        allDay: !!adapter.allDay,\n        startDate: comparableStartDate,\n        endDate: comparableEndDate,\n        recurrenceRule: adapter.recurrenceRule,\n        recurrenceException: adapter.recurrenceException,\n        hasRecurrenceRule: hasRecurrenceRule,\n        visible: visible,\n        rawAppointment: rawAppointment\n      });\n    }\n  });\n  return result;\n};\nexport var resolveDataItems = options => Array.isArray(options) ? options : options.data;","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/node_modules/devextreme/esm/renovation/ui/scheduler/utils/data.js"],"names":["replaceWrongEndDate","createAppointmentAdapter","isDefined","RECURRENCE_FREQ","getPreparedDataItems","dataItems","dataAccessors","cellDurationInMinutes","timeZoneCalculator","result","forEach","rawAppointment","_recurrenceRule$match","startDate","Date","getter","endDate","adapter","comparableStartDate","calculateStartDate","comparableEndDate","calculateEndDate","regex","RegExp","recurrenceRule","hasRecurrenceRule","match","length","visible","push","allDay","recurrenceException","resolveDataItems","options","Array","isArray","data"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,mBADJ,QAEO,0DAFP;AAGA,SACIC,wBADJ,QAEO,6CAFP;AAGA,SACIC,SADJ,QAEO,6BAFP;AAGA,IAAIC,eAAe,GAAG,MAAtB;AACA,OAAO,IAAIC,oBAAoB,GAAG,CAACC,SAAD,EAAYC,aAAZ,EAA2BC,qBAA3B,EAAkDC,kBAAlD,KAAyE;AACvG,MAAIC,MAAM,GAAG,EAAb;AACA,WAASJ,SAAT,IAAsB,KAAK,CAAL,KAAWA,SAAjC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACK,OAAV,CAAkBC,cAAc,IAAI;AACtF,QAAIC,qBAAJ;;AACA,QAAIC,SAAS,GAAG,IAAIC,IAAJ,CAASR,aAAa,CAACS,MAAd,CAAqBF,SAArB,CAA+BF,cAA/B,CAAT,CAAhB;AACA,QAAIK,OAAO,GAAG,IAAIF,IAAJ,CAASR,aAAa,CAACS,MAAd,CAAqBC,OAArB,CAA6BL,cAA7B,CAAT,CAAd;AACAX,IAAAA,mBAAmB,CAACW,cAAD,EAAiBE,SAAjB,EAA4BG,OAA5B,EAAqCT,qBAArC,EAA4DD,aAA5D,CAAnB;AACA,QAAIW,OAAO,GAAGhB,wBAAwB,CAACU,cAAD,EAAiBL,aAAjB,EAAgCE,kBAAhC,CAAtC;AACA,QAAIU,mBAAmB,GAAGD,OAAO,CAACJ,SAAR,IAAqBI,OAAO,CAACE,kBAAR,CAA2B,QAA3B,CAA/C;AACA,QAAIC,iBAAiB,GAAGH,OAAO,CAACD,OAAR,IAAmBC,OAAO,CAACI,gBAAR,CAAyB,QAAzB,CAA3C;AACA,QAAIC,KAAK,GAAG,IAAIC,MAAJ,CAAWpB,eAAX,EAA4B,IAA5B,CAAZ;AACA,QAAIqB,cAAc,GAAGP,OAAO,CAACO,cAA7B;AACA,QAAIC,iBAAiB,GAAG,CAAC,EAAE,SAASD,cAAT,IAA2B,KAAK,CAAL,KAAWA,cAAtC,IAAwD,UAAUZ,qBAAqB,GAAGY,cAAc,CAACE,KAAf,CAAqBJ,KAArB,CAAlC,CAAxD,IAA0H,KAAK,CAAL,KAAWV,qBAArI,IAA8JA,qBAAqB,CAACe,MAAtL,CAAzB;AACA,QAAIC,OAAO,GAAG1B,SAAS,CAACS,cAAc,CAACiB,OAAhB,CAAT,GAAoC,CAAC,CAACjB,cAAc,CAACiB,OAArD,GAA+D,IAA7E;;AACA,QAAIV,mBAAmB,IAAIE,iBAA3B,EAA8C;AAC1CX,MAAAA,MAAM,CAACoB,IAAP,CAAY;AACRC,QAAAA,MAAM,EAAE,CAAC,CAACb,OAAO,CAACa,MADV;AAERjB,QAAAA,SAAS,EAAEK,mBAFH;AAGRF,QAAAA,OAAO,EAAEI,iBAHD;AAIRI,QAAAA,cAAc,EAAEP,OAAO,CAACO,cAJhB;AAKRO,QAAAA,mBAAmB,EAAEd,OAAO,CAACc,mBALrB;AAMRN,QAAAA,iBAAiB,EAAEA,iBANX;AAORG,QAAAA,OAAO,EAAEA,OAPD;AAQRjB,QAAAA,cAAc,EAAEA;AARR,OAAZ;AAUH;AACJ,GAxBqD,CAAtD;AAyBA,SAAOF,MAAP;AACH,CA5BM;AA6BP,OAAO,IAAIuB,gBAAgB,GAAGC,OAAO,IAAIC,KAAK,CAACC,OAAN,CAAcF,OAAd,IAAyBA,OAAzB,GAAmCA,OAAO,CAACG,IAA7E","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/utils/data.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    replaceWrongEndDate\r\n} from \"../../../../ui/scheduler/appointments/dataProvider/utils\";\r\nimport {\r\n    createAppointmentAdapter\r\n} from \"../../../../ui/scheduler/appointmentAdapter\";\r\nimport {\r\n    isDefined\r\n} from \"../../../../core/utils/type\";\r\nvar RECURRENCE_FREQ = \"freq\";\r\nexport var getPreparedDataItems = (dataItems, dataAccessors, cellDurationInMinutes, timeZoneCalculator) => {\r\n    var result = [];\r\n    null === dataItems || void 0 === dataItems ? void 0 : dataItems.forEach(rawAppointment => {\r\n        var _recurrenceRule$match;\r\n        var startDate = new Date(dataAccessors.getter.startDate(rawAppointment));\r\n        var endDate = new Date(dataAccessors.getter.endDate(rawAppointment));\r\n        replaceWrongEndDate(rawAppointment, startDate, endDate, cellDurationInMinutes, dataAccessors);\r\n        var adapter = createAppointmentAdapter(rawAppointment, dataAccessors, timeZoneCalculator);\r\n        var comparableStartDate = adapter.startDate && adapter.calculateStartDate(\"toGrid\");\r\n        var comparableEndDate = adapter.endDate && adapter.calculateEndDate(\"toGrid\");\r\n        var regex = new RegExp(RECURRENCE_FREQ, \"gi\");\r\n        var recurrenceRule = adapter.recurrenceRule;\r\n        var hasRecurrenceRule = !!(null !== recurrenceRule && void 0 !== recurrenceRule && null !== (_recurrenceRule$match = recurrenceRule.match(regex)) && void 0 !== _recurrenceRule$match && _recurrenceRule$match.length);\r\n        var visible = isDefined(rawAppointment.visible) ? !!rawAppointment.visible : true;\r\n        if (comparableStartDate && comparableEndDate) {\r\n            result.push({\r\n                allDay: !!adapter.allDay,\r\n                startDate: comparableStartDate,\r\n                endDate: comparableEndDate,\r\n                recurrenceRule: adapter.recurrenceRule,\r\n                recurrenceException: adapter.recurrenceException,\r\n                hasRecurrenceRule: hasRecurrenceRule,\r\n                visible: visible,\r\n                rawAppointment: rawAppointment\r\n            })\r\n        }\r\n    });\r\n    return result\r\n};\r\nexport var resolveDataItems = options => Array.isArray(options) ? options : options.data;\r\n"]},"metadata":{},"sourceType":"module"}