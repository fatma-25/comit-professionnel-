{"ast":null,"code":"var _jsxFileName = \"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/SideBar/FavouriteChannels/FavouriteChannels.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setChannel } from \"../../../store/actioncreator\";\nimport { Menu, Icon } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FavouriteChannels = props => {\n  const displayChannels = () => {\n    if (Object.keys(props.favouriteChannels).length > 0) {\n      return Object.keys(props.favouriteChannels).map(channelId => {\n        return /*#__PURE__*/_jsxDEV(Menu.Item, {\n          name: props.favouriteChannels[channelId],\n          onClick: () => props.selectChannel({\n            id: channelId,\n            name: props.favouriteChannels[channelId],\n            isFavourite: true\n          }),\n          active: props.channel && channelId === props.channel.id && props.channel.isFavourite,\n          children: \"# \" + props.favouriteChannels[channelId]\n        }, channelId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 24\n        }, this);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Menu.Menu, {\n    children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n      style: {\n        fontSize: '17px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"star\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), \" Starred\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), \"(\", Object.keys(props.favouriteChannels).length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), displayChannels()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n};\n\n_c = FavouriteChannels;\n\nconst mapStateToProps = state => {\n  return {\n    channel: state.channel.currentChannel,\n    favouriteChannels: state.favouriteChannel.favouriteChannel\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectChannel: channel => dispatch(setChannel(channel))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FavouriteChannels);\n\nvar _c;\n\n$RefreshReg$(_c, \"FavouriteChannels\");","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/SideBar/FavouriteChannels/FavouriteChannels.component.jsx"],"names":["React","connect","setChannel","Menu","Icon","FavouriteChannels","props","displayChannels","Object","keys","favouriteChannels","length","map","channelId","selectChannel","id","name","isFavourite","channel","fontSize","mapStateToProps","state","currentChannel","favouriteChannel","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,8BAA3B;AAEA,SAASC,IAAT,EAAeC,IAAf,QAA2B,mBAA3B;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAEjC,QAAMC,eAAe,GAAG,MAAM;AAC1B,QAAIC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,iBAAlB,EAAqCC,MAArC,GAA8C,CAAlD,EAAqD;AACjD,aAAOH,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,iBAAlB,EAAqCE,GAArC,CAA0CC,SAAD,IAAe;AAC3D,4BAAO,QAAC,IAAD,CAAM,IAAN;AAEH,UAAA,IAAI,EAAEP,KAAK,CAACI,iBAAN,CAAwBG,SAAxB,CAFH;AAGH,UAAA,OAAO,EAAE,MAAMP,KAAK,CAACQ,aAAN,CAAoB;AAAEC,YAAAA,EAAE,EAAEF,SAAN;AAAiBG,YAAAA,IAAI,EAAEV,KAAK,CAACI,iBAAN,CAAwBG,SAAxB,CAAvB;AAA4DI,YAAAA,WAAW,EAAG;AAA1E,WAApB,CAHZ;AAIH,UAAA,MAAM,EAAEX,KAAK,CAACY,OAAN,IAAiBL,SAAS,KAAKP,KAAK,CAACY,OAAN,CAAcH,EAA7C,IAAmDT,KAAK,CAACY,OAAN,CAAcD,WAJtE;AAAA,oBAMF,OAAOX,KAAK,CAACI,iBAAN,CAAwBG,SAAxB;AANL,WACEA,SADF;AAAA;AAAA;AAAA;AAAA,gBAAP;AAQH,OATM,CAAP;AAUH;AACJ,GAbD;;AAeA,sBAAO,QAAC,IAAD,CAAM,IAAN;AAAA,4BACH,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEM,QAAAA,QAAQ,EAAE;AAAZ,OAAlB;AAAA,8BACI;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,OAIMX,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,iBAAlB,EAAqCC,MAJ3C;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,EAOFJ,eAAe,EAPb;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AASH,CA1BD;;KAAMF,iB;;AA4BN,MAAMe,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHH,IAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,CAAcI,cADpB;AAEHZ,IAAAA,iBAAiB,EAAEW,KAAK,CAACE,gBAAN,CAAuBA;AAFvC,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHX,IAAAA,aAAa,EAAGI,OAAD,IAAaO,QAAQ,CAACvB,UAAU,CAACgB,OAAD,CAAX;AADjC,GAAP;AAGH,CAJD;;AAMA,eAAejB,OAAO,CAACmB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CnB,iBAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { setChannel } from \"../../../store/actioncreator\"\n\nimport { Menu, Icon } from 'semantic-ui-react';\n\nconst FavouriteChannels = (props) => {\n\n    const displayChannels = () => {\n        if (Object.keys(props.favouriteChannels).length > 0) {\n            return Object.keys(props.favouriteChannels).map((channelId) => {\n                return <Menu.Item\n                    key={channelId}\n                    name={props.favouriteChannels[channelId]}\n                    onClick={() => props.selectChannel({ id: channelId, name: props.favouriteChannels[channelId] , isFavourite : true })}\n                    active={props.channel && channelId === props.channel.id && props.channel.isFavourite}\n                >\n                    {\"# \" + props.favouriteChannels[channelId]}\n                </Menu.Item>\n            })\n        }\n    } \n\n    return <Menu.Menu >\n        <Menu.Item style={{ fontSize: '17px' }}>\n            <span>\n                <Icon name=\"star\" /> Starred\n            </span>\n            ({Object.keys(props.favouriteChannels).length})\n        </Menu.Item>\n        {displayChannels()}\n    </Menu.Menu>\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        channel: state.channel.currentChannel,\n        favouriteChannels: state.favouriteChannel.favouriteChannel\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        selectChannel: (channel) => dispatch(setChannel(channel))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FavouriteChannels);"]},"metadata":{},"sourceType":"module"}