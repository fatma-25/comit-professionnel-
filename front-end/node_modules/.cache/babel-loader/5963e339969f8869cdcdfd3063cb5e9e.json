{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/resources/utils.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { normalizeDataSourceOptions } from \"../../../data/data_source/utils\";\nimport { DataSource } from \"../../../data/data_source/data_source\";\nimport { when, Deferred } from \"../../../core/utils/deferred\";\nimport query from \"../../../data/query\";\nimport { compileGetter, compileSetter } from \"../../../core/utils/data\";\nimport { each } from \"../../../core/utils/iterator\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { isDefined } from \"../../../core/utils/type\";\nimport { wrapToArray, inArray } from \"../../../core/utils/array\";\nimport { deepExtendArraySafe } from \"../../../core/utils/object\";\nexport var getValueExpr = resource => resource.valueExpr || \"id\";\nexport var getDisplayExpr = resource => resource.displayExpr || \"text\";\nexport var getFieldExpr = resource => resource.fieldExpr || resource.field;\nexport var getWrappedDataSource = dataSource => {\n  if (dataSource instanceof DataSource) {\n    return dataSource;\n  }\n\n  var result = {\n    store: normalizeDataSourceOptions(dataSource).store,\n    pageSize: 0\n  };\n\n  if (!Array.isArray(dataSource)) {\n    result.filter = dataSource.filter;\n  }\n\n  return new DataSource(result);\n};\nexport var createResourcesTree = groups => {\n  var leafIndex = 0;\n\n  var make = (group, groupIndex, result, parent) => {\n    result = result || [];\n\n    for (var itemIndex = 0; itemIndex < group.items.length; itemIndex++) {\n      var _group$data;\n\n      var currentGroupItem = group.items[itemIndex];\n      var resultItem = {\n        name: group.name,\n        value: currentGroupItem.id,\n        title: currentGroupItem.text,\n        data: null === (_group$data = group.data) || void 0 === _group$data ? void 0 : _group$data[itemIndex],\n        children: [],\n        parent: parent || null\n      };\n      var nextGroupIndex = groupIndex + 1;\n\n      if (groups[nextGroupIndex]) {\n        make(groups[nextGroupIndex], nextGroupIndex, resultItem.children, resultItem);\n      }\n\n      if (!resultItem.children.length) {\n        resultItem.leafIndex = leafIndex;\n        leafIndex++;\n      }\n\n      result.push(resultItem);\n    }\n\n    return result;\n  };\n\n  return make(groups[0], 0);\n};\nexport var getPathToLeaf = (leafIndex, groups) => {\n  var tree = createResourcesTree(groups);\n\n  var findLeafByIndex = (data, index) => {\n    for (var i = 0; i < data.length; i++) {\n      if (data[i].leafIndex === index) {\n        return data[i];\n      } else {\n        var _leaf = findLeafByIndex(data[i].children, index);\n\n        if (_leaf) {\n          return _leaf;\n        }\n      }\n    }\n  };\n\n  var makeBranch = (leaf, result) => {\n    result = result || [];\n    result.push(leaf.value);\n\n    if (leaf.parent) {\n      makeBranch(leaf.parent, result);\n    }\n\n    return result;\n  };\n\n  var leaf = findLeafByIndex(tree, leafIndex);\n  return makeBranch(leaf).reverse();\n};\nexport var getCellGroups = (groupIndex, groups) => {\n  var result = [];\n\n  if (getGroupCount(groups)) {\n    if (groupIndex < 0) {\n      return;\n    }\n\n    var path = getPathToLeaf(groupIndex, groups);\n\n    for (var i = 0; i < groups.length; i++) {\n      result.push({\n        name: groups[i].name,\n        id: path[i]\n      });\n    }\n  }\n\n  return result;\n};\nexport var getGroupCount = groups => {\n  var result = 0;\n\n  for (var i = 0, len = groups.length; i < len; i++) {\n    if (!i) {\n      result = groups[i].items.length;\n    } else {\n      result *= groups[i].items.length;\n    }\n  }\n\n  return result;\n};\nexport var getGroupsObjectFromGroupsArray = groupsArray => groupsArray.reduce((currentGroups, _ref) => {\n  var {\n    name: name,\n    id: id\n  } = _ref;\n  return _extends({}, currentGroups, {\n    [name]: id\n  });\n}, {});\nexport var getAllGroups = groups => {\n  var groupCount = getGroupCount(groups);\n  return [...new Array(groupCount)].map((_, groupIndex) => {\n    var groupsArray = getCellGroups(groupIndex, groups);\n    return getGroupsObjectFromGroupsArray(groupsArray);\n  });\n};\nexport var getResourceByField = (fieldName, loadedResources) => {\n  for (var i = 0; i < loadedResources.length; i++) {\n    var resource = loadedResources[i];\n\n    if (resource.name === fieldName) {\n      return resource.data;\n    }\n  }\n\n  return [];\n};\nexport var createResourceEditorModel = (resources, loadedResources) => resources.map(resource => {\n  var dataField = getFieldExpr(resource);\n  var dataSource = getResourceByField(dataField, loadedResources);\n  return {\n    editorOptions: {\n      dataSource: dataSource.length ? dataSource : getWrappedDataSource(resource.dataSource),\n      displayExpr: getDisplayExpr(resource),\n      valueExpr: getValueExpr(resource)\n    },\n    dataField: dataField,\n    editorType: resource.allowMultiple ? \"dxTagBox\" : \"dxSelectBox\",\n    label: {\n      text: resource.label || dataField\n    }\n  };\n});\nexport var isResourceMultiple = (resources, resourceField) => {\n  var resource = resources.find(resource => {\n    var field = getFieldExpr(resource);\n    return field === resourceField;\n  });\n  return !!(null !== resource && void 0 !== resource && resource.allowMultiple);\n};\nexport var filterResources = (resources, fields) => resources.filter(resource => {\n  var field = getFieldExpr(resource);\n  return fields.indexOf(field) > -1;\n});\nexport var getPaintedResources = (resources, groups) => {\n  var newGroups = groups || [];\n  var result = resources.find(resource => resource.useColorAsDefault);\n\n  if (result) {\n    return result;\n  }\n\n  var newResources = newGroups.length ? filterResources(resources, newGroups) : resources;\n  return newResources[newResources.length - 1];\n};\nexport var getOrLoadResourceItem = (resources, resourceLoaderMap, field, value) => {\n  var result = new Deferred();\n  resources.forEach(resource => {\n    var resourceField = getFieldExpr(resource);\n\n    if (resourceField === field) {\n      var dataSource = getWrappedDataSource(resource.dataSource);\n      var valueExpr = getValueExpr(resource);\n\n      if (!resourceLoaderMap.has(field)) {\n        resourceLoaderMap.set(field, dataSource.load());\n      }\n\n      resourceLoaderMap.get(field).done(data => {\n        var filteredData = query(data).filter(valueExpr, value).toArray();\n        result.resolve(filteredData[0]);\n      }).fail(() => {\n        resourceLoaderMap.delete(field);\n        result.reject();\n      });\n    }\n  });\n  return result.promise();\n};\nexport var getDataAccessors = (dataAccessors, fieldName, type) => {\n  var actions = dataAccessors[type];\n  return actions[fieldName];\n};\nexport var getResourcesFromItem = function () {\n  var resources = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\n  var dataAccessors = arguments.length > 1 ? arguments[1] : void 0;\n  var itemData = arguments.length > 2 ? arguments[2] : void 0;\n  var wrapOnlyMultipleResources = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : false;\n  var result = null;\n  var resourceFields = resources.map(resource => getFieldExpr(resource));\n  resourceFields.forEach(field => {\n    each(itemData, (fieldName, fieldValue) => {\n      var tempObject = {};\n      tempObject[fieldName] = fieldValue;\n      var resourceData = getDataAccessors(dataAccessors, field, \"getter\")(tempObject);\n\n      if (isDefined(resourceData)) {\n        if (!result) {\n          result = {};\n        }\n\n        if (1 === resourceData.length) {\n          resourceData = resourceData[0];\n        }\n\n        if (!wrapOnlyMultipleResources || wrapOnlyMultipleResources && isResourceMultiple(resources, field)) {\n          getDataAccessors(dataAccessors, field, \"setter\")(tempObject, wrapToArray(resourceData));\n        } else {\n          getDataAccessors(dataAccessors, field, \"setter\")(tempObject, resourceData);\n        }\n\n        extend(result, tempObject);\n        return true;\n      }\n    });\n  });\n  return result;\n};\nexport var groupAppointmentsByResources = function (config, appointments) {\n  var groups = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [];\n  var result = {\n    0: appointments\n  };\n\n  if (groups.length && config.loadedResources.length) {\n    result = groupAppointmentsByResourcesCore(config, appointments, config.loadedResources);\n  }\n\n  var totalResourceCount = 0;\n  config.loadedResources.forEach((resource, index) => {\n    if (!index) {\n      totalResourceCount = resource.items.length;\n    } else {\n      totalResourceCount *= resource.items.length;\n    }\n  });\n\n  for (var index = 0; index < totalResourceCount; index++) {\n    var key = index.toString();\n\n    if (result[key]) {\n      continue;\n    }\n\n    result[key] = [];\n  }\n\n  return result;\n};\nexport var groupAppointmentsByResourcesCore = (config, appointments, resources) => {\n  var tree = createResourcesTree(resources);\n  var result = {};\n  appointments.forEach(appointment => {\n    var appointmentResources = getResourcesFromItem(config.resources, config.dataAccessors, appointment);\n    var treeLeaves = getResourceTreeLeaves((field, action) => getDataAccessors(config.dataAccessors, field, action), tree, appointmentResources);\n\n    for (var i = 0; i < treeLeaves.length; i++) {\n      if (!result[treeLeaves[i]]) {\n        result[treeLeaves[i]] = [];\n      }\n\n      result[treeLeaves[i]].push(deepExtendArraySafe({}, appointment, true));\n    }\n  });\n  return result;\n};\nexport var getResourceTreeLeaves = (getDataAccessors, tree, appointmentResources, result) => {\n  result = result || [];\n\n  for (var i = 0; i < tree.length; i++) {\n    if (!hasGroupItem(getDataAccessors, appointmentResources, tree[i].name, tree[i].value)) {\n      continue;\n    }\n\n    if (isDefined(tree[i].leafIndex)) {\n      result.push(tree[i].leafIndex);\n    }\n\n    if (tree[i].children) {\n      getResourceTreeLeaves(getDataAccessors, tree[i].children, appointmentResources, result);\n    }\n  }\n\n  return result;\n};\n\nvar hasGroupItem = (getDataAccessors, appointmentResources, groupName, itemValue) => {\n  var group = getDataAccessors(groupName, \"getter\")(appointmentResources);\n\n  if (group) {\n    if (inArray(itemValue, group) > -1) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexport var createReducedResourcesTree = (loadedResources, getDataAccessors, appointments) => {\n  var tree = createResourcesTree(loadedResources);\n  return reduceResourcesTree(getDataAccessors, tree, appointments);\n};\nexport var reduceResourcesTree = (getDataAccessors, tree, existingAppointments, _result) => {\n  _result = _result ? _result.children : [];\n  tree.forEach(function (node, index) {\n    var ok = false;\n    var resourceName = node.name;\n    var resourceValue = node.value;\n    var resourceTitle = node.title;\n    var resourceData = node.data;\n    var resourceGetter = getDataAccessors(resourceName, \"getter\");\n    existingAppointments.forEach(function (appointment) {\n      if (!ok) {\n        var resourceFromAppointment = resourceGetter(appointment);\n\n        if (Array.isArray(resourceFromAppointment)) {\n          if (resourceFromAppointment.indexOf(resourceValue) > -1) {\n            _result.push({\n              name: resourceName,\n              value: resourceValue,\n              title: resourceTitle,\n              data: resourceData,\n              children: []\n            });\n\n            ok = true;\n          }\n        } else if (resourceFromAppointment === resourceValue) {\n          _result.push({\n            name: resourceName,\n            value: resourceValue,\n            title: resourceTitle,\n            data: resourceData,\n            children: []\n          });\n\n          ok = true;\n        }\n      }\n    });\n\n    if (ok && node.children && node.children.length) {\n      reduceResourcesTree(getDataAccessors, node.children, existingAppointments, _result[index]);\n    }\n  });\n  return _result;\n};\nexport var getResourcesDataByGroups = (loadedResources, resources, groups) => {\n  if (!groups || !groups.length) {\n    return loadedResources;\n  }\n\n  var fieldNames = {};\n  var currentResourcesData = [];\n  groups.forEach(group => {\n    each(group, (name, value) => fieldNames[name] = value);\n  });\n  var resourceData = loadedResources.filter(_ref2 => {\n    var {\n      name: name\n    } = _ref2;\n    return isDefined(fieldNames[name]);\n  });\n  resourceData.forEach(data => currentResourcesData.push(extend({}, data)));\n  currentResourcesData.forEach(currentResource => {\n    var {\n      items: items,\n      data: data,\n      name: resourceName\n    } = currentResource;\n    var resource = filterResources(resources, [resourceName])[0] || {};\n    var valueExpr = getValueExpr(resource);\n    var filteredItems = [];\n    var filteredData = [];\n    groups.filter(group => isDefined(group[resourceName])).forEach(group => {\n      each(group, (name, value) => {\n        if (!filteredItems.filter(item => item.id === value && item[valueExpr] === name).length) {\n          var currentItems = items.filter(item => item.id === value);\n          var currentData = data.filter(item => item[valueExpr] === value);\n          filteredItems.push(...currentItems);\n          filteredData.push(...currentData);\n        }\n      });\n    });\n    currentResource.items = filteredItems;\n    currentResource.data = filteredData;\n  });\n  return currentResourcesData;\n};\nexport var setResourceToAppointment = (resources, dataAccessors, appointment, groups) => {\n  var resourcesSetter = dataAccessors.setter;\n\n  for (var name in groups) {\n    var resourceData = groups[name];\n    var value = isResourceMultiple(resources, name) ? wrapToArray(resourceData) : resourceData;\n    resourcesSetter[name](appointment, value);\n  }\n};\nexport var getResourceColor = (resources, resourceLoaderMap, field, value) => {\n  var result = new Deferred();\n  var resource = filterResources(resources, [field])[0] || {};\n  var colorExpr = resource.colorExpr || \"color\";\n  var colorGetter = compileGetter(colorExpr);\n  getOrLoadResourceItem(resources, resourceLoaderMap, field, value).done(resource => result.resolve(colorGetter(resource))).fail(() => result.reject());\n  return result.promise();\n};\nexport var getAppointmentColor = (resourceConfig, appointmentConfig) => {\n  var {\n    resources: resources,\n    dataAccessors: dataAccessors,\n    loadedResources: loadedResources,\n    resourceLoaderMap: resourceLoaderMap\n  } = resourceConfig;\n  var {\n    groupIndex: groupIndex,\n    groups: groups,\n    itemData: itemData\n  } = appointmentConfig;\n  var paintedResources = getPaintedResources(resources || [], groups);\n\n  if (paintedResources) {\n    var field = getFieldExpr(paintedResources);\n    var cellGroups = getCellGroups(groupIndex, loadedResources);\n    var resourceValues = wrapToArray(getDataAccessors(dataAccessors, field, \"getter\")(itemData));\n    var groupId = resourceValues[0];\n\n    for (var i = 0; i < cellGroups.length; i++) {\n      if (cellGroups[i].name === field) {\n        groupId = cellGroups[i].id;\n        break;\n      }\n    }\n\n    return getResourceColor(resources, resourceLoaderMap, field, groupId);\n  }\n\n  return new Deferred().resolve().promise();\n};\nexport var createExpressions = function () {\n  var resources = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\n  var result = {\n    getter: {},\n    setter: {}\n  };\n  resources.forEach(resource => {\n    var field = getFieldExpr(resource);\n    result.getter[field] = compileGetter(field);\n    result.setter[field] = compileSetter(field);\n  });\n  return result;\n};\n\nvar getTransformedResourceData = (resource, data) => {\n  var valueGetter = compileGetter(getValueExpr(resource));\n  var displayGetter = compileGetter(getDisplayExpr(resource));\n  return data.map(item => {\n    var result = {\n      id: valueGetter(item),\n      text: displayGetter(item)\n    };\n\n    if (item.color) {\n      result.color = item.color;\n    }\n\n    return result;\n  });\n};\n\nexport var loadResources = (groups, resources, resourceLoaderMap) => {\n  var result = new Deferred();\n  var deferreds = [];\n  var newGroups = groups || [];\n  var newResources = resources || [];\n  var loadedResources = [];\n  filterResources(newResources, newGroups).forEach(resource => {\n    var deferred = new Deferred();\n    var name = getFieldExpr(resource);\n    deferreds.push(deferred);\n    var dataSourcePromise = getWrappedDataSource(resource.dataSource).load();\n    resourceLoaderMap.set(name, dataSourcePromise);\n    dataSourcePromise.done(data => {\n      var items = getTransformedResourceData(resource, data);\n      deferred.resolve({\n        name: name,\n        items: items,\n        data: data\n      });\n    }).fail(() => deferred.reject());\n  });\n\n  if (!deferreds.length) {\n    return result.resolve(loadedResources);\n  }\n\n  when.apply(null, deferreds).done(function () {\n    for (var _len = arguments.length, resources = new Array(_len), _key = 0; _key < _len; _key++) {\n      resources[_key] = arguments[_key];\n    }\n\n    var hasEmpty = resources.some(r => 0 === r.items.length);\n    loadedResources = hasEmpty ? [] : resources;\n    result.resolve(loadedResources);\n  }).fail(() => result.reject());\n  return result.promise();\n};","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/node_modules/devextreme/esm/ui/scheduler/resources/utils.js"],"names":["_extends","normalizeDataSourceOptions","DataSource","when","Deferred","query","compileGetter","compileSetter","each","extend","isDefined","wrapToArray","inArray","deepExtendArraySafe","getValueExpr","resource","valueExpr","getDisplayExpr","displayExpr","getFieldExpr","fieldExpr","field","getWrappedDataSource","dataSource","result","store","pageSize","Array","isArray","filter","createResourcesTree","groups","leafIndex","make","group","groupIndex","parent","itemIndex","items","length","_group$data","currentGroupItem","resultItem","name","value","id","title","text","data","children","nextGroupIndex","push","getPathToLeaf","tree","findLeafByIndex","index","i","_leaf","makeBranch","leaf","reverse","getCellGroups","getGroupCount","path","len","getGroupsObjectFromGroupsArray","groupsArray","reduce","currentGroups","_ref","getAllGroups","groupCount","map","_","getResourceByField","fieldName","loadedResources","createResourceEditorModel","resources","dataField","editorOptions","editorType","allowMultiple","label","isResourceMultiple","resourceField","find","filterResources","fields","indexOf","getPaintedResources","newGroups","useColorAsDefault","newResources","getOrLoadResourceItem","resourceLoaderMap","forEach","has","set","load","get","done","filteredData","toArray","resolve","fail","delete","reject","promise","getDataAccessors","dataAccessors","type","actions","getResourcesFromItem","arguments","itemData","wrapOnlyMultipleResources","resourceFields","fieldValue","tempObject","resourceData","groupAppointmentsByResources","config","appointments","groupAppointmentsByResourcesCore","totalResourceCount","key","toString","appointment","appointmentResources","treeLeaves","getResourceTreeLeaves","action","hasGroupItem","groupName","itemValue","createReducedResourcesTree","reduceResourcesTree","existingAppointments","_result","node","ok","resourceName","resourceValue","resourceTitle","resourceGetter","resourceFromAppointment","getResourcesDataByGroups","fieldNames","currentResourcesData","_ref2","currentResource","filteredItems","item","currentItems","currentData","setResourceToAppointment","resourcesSetter","setter","getResourceColor","colorExpr","colorGetter","getAppointmentColor","resourceConfig","appointmentConfig","paintedResources","cellGroups","resourceValues","groupId","createExpressions","getter","getTransformedResourceData","valueGetter","displayGetter","color","loadResources","deferreds","deferred","dataSourcePromise","apply","_len","_key","hasEmpty","some","r"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/resources/utils.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    normalizeDataSourceOptions\r\n} from \"../../../data/data_source/utils\";\r\nimport {\r\n    DataSource\r\n} from \"../../../data/data_source/data_source\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../../core/utils/deferred\";\r\nimport query from \"../../../data/query\";\r\nimport {\r\n    compileGetter,\r\n    compileSetter\r\n} from \"../../../core/utils/data\";\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport {\r\n    isDefined\r\n} from \"../../../core/utils/type\";\r\nimport {\r\n    wrapToArray,\r\n    inArray\r\n} from \"../../../core/utils/array\";\r\nimport {\r\n    deepExtendArraySafe\r\n} from \"../../../core/utils/object\";\r\nexport var getValueExpr = resource => resource.valueExpr || \"id\";\r\nexport var getDisplayExpr = resource => resource.displayExpr || \"text\";\r\nexport var getFieldExpr = resource => resource.fieldExpr || resource.field;\r\nexport var getWrappedDataSource = dataSource => {\r\n    if (dataSource instanceof DataSource) {\r\n        return dataSource\r\n    }\r\n    var result = {\r\n        store: normalizeDataSourceOptions(dataSource).store,\r\n        pageSize: 0\r\n    };\r\n    if (!Array.isArray(dataSource)) {\r\n        result.filter = dataSource.filter\r\n    }\r\n    return new DataSource(result)\r\n};\r\nexport var createResourcesTree = groups => {\r\n    var leafIndex = 0;\r\n    var make = (group, groupIndex, result, parent) => {\r\n        result = result || [];\r\n        for (var itemIndex = 0; itemIndex < group.items.length; itemIndex++) {\r\n            var _group$data;\r\n            var currentGroupItem = group.items[itemIndex];\r\n            var resultItem = {\r\n                name: group.name,\r\n                value: currentGroupItem.id,\r\n                title: currentGroupItem.text,\r\n                data: null === (_group$data = group.data) || void 0 === _group$data ? void 0 : _group$data[itemIndex],\r\n                children: [],\r\n                parent: parent || null\r\n            };\r\n            var nextGroupIndex = groupIndex + 1;\r\n            if (groups[nextGroupIndex]) {\r\n                make(groups[nextGroupIndex], nextGroupIndex, resultItem.children, resultItem)\r\n            }\r\n            if (!resultItem.children.length) {\r\n                resultItem.leafIndex = leafIndex;\r\n                leafIndex++\r\n            }\r\n            result.push(resultItem)\r\n        }\r\n        return result\r\n    };\r\n    return make(groups[0], 0)\r\n};\r\nexport var getPathToLeaf = (leafIndex, groups) => {\r\n    var tree = createResourcesTree(groups);\r\n    var findLeafByIndex = (data, index) => {\r\n        for (var i = 0; i < data.length; i++) {\r\n            if (data[i].leafIndex === index) {\r\n                return data[i]\r\n            } else {\r\n                var _leaf = findLeafByIndex(data[i].children, index);\r\n                if (_leaf) {\r\n                    return _leaf\r\n                }\r\n            }\r\n        }\r\n    };\r\n    var makeBranch = (leaf, result) => {\r\n        result = result || [];\r\n        result.push(leaf.value);\r\n        if (leaf.parent) {\r\n            makeBranch(leaf.parent, result)\r\n        }\r\n        return result\r\n    };\r\n    var leaf = findLeafByIndex(tree, leafIndex);\r\n    return makeBranch(leaf).reverse()\r\n};\r\nexport var getCellGroups = (groupIndex, groups) => {\r\n    var result = [];\r\n    if (getGroupCount(groups)) {\r\n        if (groupIndex < 0) {\r\n            return\r\n        }\r\n        var path = getPathToLeaf(groupIndex, groups);\r\n        for (var i = 0; i < groups.length; i++) {\r\n            result.push({\r\n                name: groups[i].name,\r\n                id: path[i]\r\n            })\r\n        }\r\n    }\r\n    return result\r\n};\r\nexport var getGroupCount = groups => {\r\n    var result = 0;\r\n    for (var i = 0, len = groups.length; i < len; i++) {\r\n        if (!i) {\r\n            result = groups[i].items.length\r\n        } else {\r\n            result *= groups[i].items.length\r\n        }\r\n    }\r\n    return result\r\n};\r\nexport var getGroupsObjectFromGroupsArray = groupsArray => groupsArray.reduce((currentGroups, _ref) => {\r\n    var {\r\n        name: name,\r\n        id: id\r\n    } = _ref;\r\n    return _extends({}, currentGroups, {\r\n        [name]: id\r\n    })\r\n}, {});\r\nexport var getAllGroups = groups => {\r\n    var groupCount = getGroupCount(groups);\r\n    return [...new Array(groupCount)].map((_, groupIndex) => {\r\n        var groupsArray = getCellGroups(groupIndex, groups);\r\n        return getGroupsObjectFromGroupsArray(groupsArray)\r\n    })\r\n};\r\nexport var getResourceByField = (fieldName, loadedResources) => {\r\n    for (var i = 0; i < loadedResources.length; i++) {\r\n        var resource = loadedResources[i];\r\n        if (resource.name === fieldName) {\r\n            return resource.data\r\n        }\r\n    }\r\n    return []\r\n};\r\nexport var createResourceEditorModel = (resources, loadedResources) => resources.map(resource => {\r\n    var dataField = getFieldExpr(resource);\r\n    var dataSource = getResourceByField(dataField, loadedResources);\r\n    return {\r\n        editorOptions: {\r\n            dataSource: dataSource.length ? dataSource : getWrappedDataSource(resource.dataSource),\r\n            displayExpr: getDisplayExpr(resource),\r\n            valueExpr: getValueExpr(resource)\r\n        },\r\n        dataField: dataField,\r\n        editorType: resource.allowMultiple ? \"dxTagBox\" : \"dxSelectBox\",\r\n        label: {\r\n            text: resource.label || dataField\r\n        }\r\n    }\r\n});\r\nexport var isResourceMultiple = (resources, resourceField) => {\r\n    var resource = resources.find(resource => {\r\n        var field = getFieldExpr(resource);\r\n        return field === resourceField\r\n    });\r\n    return !!(null !== resource && void 0 !== resource && resource.allowMultiple)\r\n};\r\nexport var filterResources = (resources, fields) => resources.filter(resource => {\r\n    var field = getFieldExpr(resource);\r\n    return fields.indexOf(field) > -1\r\n});\r\nexport var getPaintedResources = (resources, groups) => {\r\n    var newGroups = groups || [];\r\n    var result = resources.find(resource => resource.useColorAsDefault);\r\n    if (result) {\r\n        return result\r\n    }\r\n    var newResources = newGroups.length ? filterResources(resources, newGroups) : resources;\r\n    return newResources[newResources.length - 1]\r\n};\r\nexport var getOrLoadResourceItem = (resources, resourceLoaderMap, field, value) => {\r\n    var result = new Deferred;\r\n    resources.forEach(resource => {\r\n        var resourceField = getFieldExpr(resource);\r\n        if (resourceField === field) {\r\n            var dataSource = getWrappedDataSource(resource.dataSource);\r\n            var valueExpr = getValueExpr(resource);\r\n            if (!resourceLoaderMap.has(field)) {\r\n                resourceLoaderMap.set(field, dataSource.load())\r\n            }\r\n            resourceLoaderMap.get(field).done(data => {\r\n                var filteredData = query(data).filter(valueExpr, value).toArray();\r\n                result.resolve(filteredData[0])\r\n            }).fail(() => {\r\n                resourceLoaderMap.delete(field);\r\n                result.reject()\r\n            })\r\n        }\r\n    });\r\n    return result.promise()\r\n};\r\nexport var getDataAccessors = (dataAccessors, fieldName, type) => {\r\n    var actions = dataAccessors[type];\r\n    return actions[fieldName]\r\n};\r\nexport var getResourcesFromItem = function() {\r\n    var resources = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\r\n    var dataAccessors = arguments.length > 1 ? arguments[1] : void 0;\r\n    var itemData = arguments.length > 2 ? arguments[2] : void 0;\r\n    var wrapOnlyMultipleResources = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : false;\r\n    var result = null;\r\n    var resourceFields = resources.map(resource => getFieldExpr(resource));\r\n    resourceFields.forEach(field => {\r\n        each(itemData, (fieldName, fieldValue) => {\r\n            var tempObject = {};\r\n            tempObject[fieldName] = fieldValue;\r\n            var resourceData = getDataAccessors(dataAccessors, field, \"getter\")(tempObject);\r\n            if (isDefined(resourceData)) {\r\n                if (!result) {\r\n                    result = {}\r\n                }\r\n                if (1 === resourceData.length) {\r\n                    resourceData = resourceData[0]\r\n                }\r\n                if (!wrapOnlyMultipleResources || wrapOnlyMultipleResources && isResourceMultiple(resources, field)) {\r\n                    getDataAccessors(dataAccessors, field, \"setter\")(tempObject, wrapToArray(resourceData))\r\n                } else {\r\n                    getDataAccessors(dataAccessors, field, \"setter\")(tempObject, resourceData)\r\n                }\r\n                extend(result, tempObject);\r\n                return true\r\n            }\r\n        })\r\n    });\r\n    return result\r\n};\r\nexport var groupAppointmentsByResources = function(config, appointments) {\r\n    var groups = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [];\r\n    var result = {\r\n        0: appointments\r\n    };\r\n    if (groups.length && config.loadedResources.length) {\r\n        result = groupAppointmentsByResourcesCore(config, appointments, config.loadedResources)\r\n    }\r\n    var totalResourceCount = 0;\r\n    config.loadedResources.forEach((resource, index) => {\r\n        if (!index) {\r\n            totalResourceCount = resource.items.length\r\n        } else {\r\n            totalResourceCount *= resource.items.length\r\n        }\r\n    });\r\n    for (var index = 0; index < totalResourceCount; index++) {\r\n        var key = index.toString();\r\n        if (result[key]) {\r\n            continue\r\n        }\r\n        result[key] = []\r\n    }\r\n    return result\r\n};\r\nexport var groupAppointmentsByResourcesCore = (config, appointments, resources) => {\r\n    var tree = createResourcesTree(resources);\r\n    var result = {};\r\n    appointments.forEach(appointment => {\r\n        var appointmentResources = getResourcesFromItem(config.resources, config.dataAccessors, appointment);\r\n        var treeLeaves = getResourceTreeLeaves((field, action) => getDataAccessors(config.dataAccessors, field, action), tree, appointmentResources);\r\n        for (var i = 0; i < treeLeaves.length; i++) {\r\n            if (!result[treeLeaves[i]]) {\r\n                result[treeLeaves[i]] = []\r\n            }\r\n            result[treeLeaves[i]].push(deepExtendArraySafe({}, appointment, true))\r\n        }\r\n    });\r\n    return result\r\n};\r\nexport var getResourceTreeLeaves = (getDataAccessors, tree, appointmentResources, result) => {\r\n    result = result || [];\r\n    for (var i = 0; i < tree.length; i++) {\r\n        if (!hasGroupItem(getDataAccessors, appointmentResources, tree[i].name, tree[i].value)) {\r\n            continue\r\n        }\r\n        if (isDefined(tree[i].leafIndex)) {\r\n            result.push(tree[i].leafIndex)\r\n        }\r\n        if (tree[i].children) {\r\n            getResourceTreeLeaves(getDataAccessors, tree[i].children, appointmentResources, result)\r\n        }\r\n    }\r\n    return result\r\n};\r\nvar hasGroupItem = (getDataAccessors, appointmentResources, groupName, itemValue) => {\r\n    var group = getDataAccessors(groupName, \"getter\")(appointmentResources);\r\n    if (group) {\r\n        if (inArray(itemValue, group) > -1) {\r\n            return true\r\n        }\r\n    }\r\n    return false\r\n};\r\nexport var createReducedResourcesTree = (loadedResources, getDataAccessors, appointments) => {\r\n    var tree = createResourcesTree(loadedResources);\r\n    return reduceResourcesTree(getDataAccessors, tree, appointments)\r\n};\r\nexport var reduceResourcesTree = (getDataAccessors, tree, existingAppointments, _result) => {\r\n    _result = _result ? _result.children : [];\r\n    tree.forEach((function(node, index) {\r\n        var ok = false;\r\n        var resourceName = node.name;\r\n        var resourceValue = node.value;\r\n        var resourceTitle = node.title;\r\n        var resourceData = node.data;\r\n        var resourceGetter = getDataAccessors(resourceName, \"getter\");\r\n        existingAppointments.forEach((function(appointment) {\r\n            if (!ok) {\r\n                var resourceFromAppointment = resourceGetter(appointment);\r\n                if (Array.isArray(resourceFromAppointment)) {\r\n                    if (resourceFromAppointment.indexOf(resourceValue) > -1) {\r\n                        _result.push({\r\n                            name: resourceName,\r\n                            value: resourceValue,\r\n                            title: resourceTitle,\r\n                            data: resourceData,\r\n                            children: []\r\n                        });\r\n                        ok = true\r\n                    }\r\n                } else if (resourceFromAppointment === resourceValue) {\r\n                    _result.push({\r\n                        name: resourceName,\r\n                        value: resourceValue,\r\n                        title: resourceTitle,\r\n                        data: resourceData,\r\n                        children: []\r\n                    });\r\n                    ok = true\r\n                }\r\n            }\r\n        }));\r\n        if (ok && node.children && node.children.length) {\r\n            reduceResourcesTree(getDataAccessors, node.children, existingAppointments, _result[index])\r\n        }\r\n    }));\r\n    return _result\r\n};\r\nexport var getResourcesDataByGroups = (loadedResources, resources, groups) => {\r\n    if (!groups || !groups.length) {\r\n        return loadedResources\r\n    }\r\n    var fieldNames = {};\r\n    var currentResourcesData = [];\r\n    groups.forEach(group => {\r\n        each(group, (name, value) => fieldNames[name] = value)\r\n    });\r\n    var resourceData = loadedResources.filter(_ref2 => {\r\n        var {\r\n            name: name\r\n        } = _ref2;\r\n        return isDefined(fieldNames[name])\r\n    });\r\n    resourceData.forEach(data => currentResourcesData.push(extend({}, data)));\r\n    currentResourcesData.forEach(currentResource => {\r\n        var {\r\n            items: items,\r\n            data: data,\r\n            name: resourceName\r\n        } = currentResource;\r\n        var resource = filterResources(resources, [resourceName])[0] || {};\r\n        var valueExpr = getValueExpr(resource);\r\n        var filteredItems = [];\r\n        var filteredData = [];\r\n        groups.filter(group => isDefined(group[resourceName])).forEach(group => {\r\n            each(group, (name, value) => {\r\n                if (!filteredItems.filter(item => item.id === value && item[valueExpr] === name).length) {\r\n                    var currentItems = items.filter(item => item.id === value);\r\n                    var currentData = data.filter(item => item[valueExpr] === value);\r\n                    filteredItems.push(...currentItems);\r\n                    filteredData.push(...currentData)\r\n                }\r\n            })\r\n        });\r\n        currentResource.items = filteredItems;\r\n        currentResource.data = filteredData\r\n    });\r\n    return currentResourcesData\r\n};\r\nexport var setResourceToAppointment = (resources, dataAccessors, appointment, groups) => {\r\n    var resourcesSetter = dataAccessors.setter;\r\n    for (var name in groups) {\r\n        var resourceData = groups[name];\r\n        var value = isResourceMultiple(resources, name) ? wrapToArray(resourceData) : resourceData;\r\n        resourcesSetter[name](appointment, value)\r\n    }\r\n};\r\nexport var getResourceColor = (resources, resourceLoaderMap, field, value) => {\r\n    var result = new Deferred;\r\n    var resource = filterResources(resources, [field])[0] || {};\r\n    var colorExpr = resource.colorExpr || \"color\";\r\n    var colorGetter = compileGetter(colorExpr);\r\n    getOrLoadResourceItem(resources, resourceLoaderMap, field, value).done(resource => result.resolve(colorGetter(resource))).fail(() => result.reject());\r\n    return result.promise()\r\n};\r\nexport var getAppointmentColor = (resourceConfig, appointmentConfig) => {\r\n    var {\r\n        resources: resources,\r\n        dataAccessors: dataAccessors,\r\n        loadedResources: loadedResources,\r\n        resourceLoaderMap: resourceLoaderMap\r\n    } = resourceConfig;\r\n    var {\r\n        groupIndex: groupIndex,\r\n        groups: groups,\r\n        itemData: itemData\r\n    } = appointmentConfig;\r\n    var paintedResources = getPaintedResources(resources || [], groups);\r\n    if (paintedResources) {\r\n        var field = getFieldExpr(paintedResources);\r\n        var cellGroups = getCellGroups(groupIndex, loadedResources);\r\n        var resourceValues = wrapToArray(getDataAccessors(dataAccessors, field, \"getter\")(itemData));\r\n        var groupId = resourceValues[0];\r\n        for (var i = 0; i < cellGroups.length; i++) {\r\n            if (cellGroups[i].name === field) {\r\n                groupId = cellGroups[i].id;\r\n                break\r\n            }\r\n        }\r\n        return getResourceColor(resources, resourceLoaderMap, field, groupId)\r\n    }\r\n    return (new Deferred).resolve().promise()\r\n};\r\nexport var createExpressions = function() {\r\n    var resources = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\r\n    var result = {\r\n        getter: {},\r\n        setter: {}\r\n    };\r\n    resources.forEach(resource => {\r\n        var field = getFieldExpr(resource);\r\n        result.getter[field] = compileGetter(field);\r\n        result.setter[field] = compileSetter(field)\r\n    });\r\n    return result\r\n};\r\nvar getTransformedResourceData = (resource, data) => {\r\n    var valueGetter = compileGetter(getValueExpr(resource));\r\n    var displayGetter = compileGetter(getDisplayExpr(resource));\r\n    return data.map(item => {\r\n        var result = {\r\n            id: valueGetter(item),\r\n            text: displayGetter(item)\r\n        };\r\n        if (item.color) {\r\n            result.color = item.color\r\n        }\r\n        return result\r\n    })\r\n};\r\nexport var loadResources = (groups, resources, resourceLoaderMap) => {\r\n    var result = new Deferred;\r\n    var deferreds = [];\r\n    var newGroups = groups || [];\r\n    var newResources = resources || [];\r\n    var loadedResources = [];\r\n    filterResources(newResources, newGroups).forEach(resource => {\r\n        var deferred = new Deferred;\r\n        var name = getFieldExpr(resource);\r\n        deferreds.push(deferred);\r\n        var dataSourcePromise = getWrappedDataSource(resource.dataSource).load();\r\n        resourceLoaderMap.set(name, dataSourcePromise);\r\n        dataSourcePromise.done(data => {\r\n            var items = getTransformedResourceData(resource, data);\r\n            deferred.resolve({\r\n                name: name,\r\n                items: items,\r\n                data: data\r\n            })\r\n        }).fail(() => deferred.reject())\r\n    });\r\n    if (!deferreds.length) {\r\n        return result.resolve(loadedResources)\r\n    }\r\n    when.apply(null, deferreds).done((function() {\r\n        for (var _len = arguments.length, resources = new Array(_len), _key = 0; _key < _len; _key++) {\r\n            resources[_key] = arguments[_key]\r\n        }\r\n        var hasEmpty = resources.some(r => 0 === r.items.length);\r\n        loadedResources = hasEmpty ? [] : resources;\r\n        result.resolve(loadedResources)\r\n    })).fail(() => result.reject());\r\n    return result.promise()\r\n};\r\n"]},"metadata":{},"sourceType":"module"}