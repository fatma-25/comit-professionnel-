{"ast":null,"code":"var _jsxFileName = \"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/ApprouveUser.js\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// const ApprouveUser = () => {\n//   const [data, setData] = useState([]);\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const result = await axios(\"http://localhost:2000/api/auth/all\");\n//       setData(result.data);\n//     };\n//     fetchData();\n//   }, []);\n//   return (\n//     <div>\n//       <table className=\"table\">\n//         <tbody className=\"table\">\n//           {data.map((user) => (\n//             <div\n//               style={{\n//                 display: \"flex\",\n//                 justifyContent: \"space-around\",\n//                 alignSelf: \"stretch\",\n//               }}\n//             >\n//               <a style={user?.account === \"true\" ? { color: \"red\" } : null}>\n//                 {user._id}\n//               </a>\n//               <a style={user?.account === \"true\" ? { color: \"red\" } : null}>\n//                 {user.name}\n//               </a>\n//               <a style={user?.account === \"true\" ? { color: \"red\" } : null}>\n//                 {user.email}\n//               </a>\n//               {/* <a style={{ color: \"red\" }}>{user.account}</a> */}\n//               <button\n//                 type=\"button\"\n//                 class=\"btn btn-link\"\n//                 onClick={() => {\n//                   alert(` user approved`);\n//                   axios.put(`http://localhost:2000/api/auth/${user._id}`, {\n//                     account: true,\n//                   });\n//                 }}\n//               >\n//                 approuve user\n//               </button>\n//             </div>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n// export default ApprouveUser;\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\"; // import firebase from \"../../server/firebase\";\n\nimport firebase from \"../../server/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ApprouveUser = props => {\n  _s();\n\n  const [usersState, setUsersState] = useState([]);\n  const [connectedUsersState, setConnectedUsersState] = useState([]);\n  const usersRef = firebase.database().ref(\"users\");\n  const connectedRef = firebase.database().ref(\".info/connected\");\n  const statusRef = firebase.database().ref(\"status\");\n  useEffect(() => {\n    usersRef.on(\"child_added\", snap => {\n      setUsersState(currentState => {\n        let updatedState = [...currentState];\n        let user = snap.val();\n        user.name = user.displayName;\n        user.email = user.email;\n        user.status = user.status;\n        user.id = snap.key;\n        user.isPrivateChat = true;\n        updatedState.push(user);\n        return updatedState;\n      });\n    });\n    connectedRef.on(\"value\", snap => {\n      if (props.user && snap.val()) {\n        const userStatusRef = statusRef.child(props.user.uid);\n        userStatusRef.set(true);\n        userStatusRef.onDisconnect().remove();\n      }\n    });\n    return () => {\n      usersRef.off();\n      connectedRef.off();\n    };\n  }, [props.user]);\n  useEffect(() => {\n    statusRef.on(\"child_added\", snap => {\n      setConnectedUsersState(currentState => {\n        let updatedState = [...currentState];\n        updatedState.push(snap.key);\n        return updatedState;\n      });\n    });\n    statusRef.on(\"child_removed\", snap => {\n      setConnectedUsersState(currentState => {\n        let updatedState = [...currentState];\n        let index = updatedState.indexOf(snap.key);\n        updatedState.splice(index, 1);\n        return updatedState;\n      });\n    });\n    return () => statusRef.off();\n  }, [usersState]);\n\n  const displayUsers = () => {\n    if (usersState.length > 0) {\n      return usersState.filter(user => user.id !== props.user.uid).map(user => {\n        return (\n          /*#__PURE__*/\n          // <div\n          //   style={{\n          //     display: \"flex\",\n          //     justifyContent: \"space-around\",\n          //     marginBottom: 20,\n          //   }}\n          // >\n          //   <div>\n          //     {console.log(user, \"uuuuusre\")}\n          //     {user.name}\n          //   </div>\n          //   <div>\n          //     {/* {user.name}@SoftCommunity.com */}\n          //     {user.email}\n          //   </div>\n          //   <button\n          //     type=\"button\"\n          //     class=\"btn btn-link\"\n          //     onClick={() => {\n          //       alert(` user approved`);\n          //       const accountStatus = usersRef.child(user.id);\n          //       accountStatus.update({ status: true });\n          //       // axios.put(`http://localhost:2000/api/auth/${user._id}`, {\n          //       //   account: true,\n          //       // });\n          //     }}\n          //   >\n          //     approuve user\n          //   </button>\n          // </div>\n          _jsxDEV(\"ul\", {\n            class: \"list-group\",\n            style: {\n              marginLeft: 100\n            },\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              class: \"list-group-item d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                style: user.status === true ? {\n                  color: \"red\"\n                } : null,\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"badge badge-primary badge-pill\",\n                children: user.status === false ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  class: \"btn btn-link\",\n                  onClick: () => {\n                    alert(` user approved`);\n                    const accountStatus = usersRef.child(user.id);\n                    accountStatus.update({\n                      status: true\n                    }); // axios.put(`http://localhost:2000/api/auth/${user._id}`, {\n                    //   account: true,\n                    // });\n                  },\n                  children: \"Approuve User\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        );\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 100\n    },\n    children: displayUsers()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ApprouveUser, \"6U/V5/w1SKMexB1MZPyGIwXk8Wk=\");\n\n_c = ApprouveUser;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.currentUser,\n    channel: state.channel.currentChannel\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {// selectChannel: (channel) => dispatch(setChannel(channel)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ApprouveUser);\n\nvar _c;\n\n$RefreshReg$(_c, \"ApprouveUser\");","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/ApprouveUser.js"],"names":["React","useState","useEffect","connect","firebase","ApprouveUser","props","usersState","setUsersState","connectedUsersState","setConnectedUsersState","usersRef","database","ref","connectedRef","statusRef","on","snap","currentState","updatedState","user","val","name","displayName","email","status","id","key","isPrivateChat","push","userStatusRef","child","uid","set","onDisconnect","remove","off","index","indexOf","splice","displayUsers","length","filter","map","marginLeft","color","alert","accountStatus","update","marginTop","mapStateToProps","state","currentUser","channel","currentChannel","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n\n// const ApprouveUser = () => {\n//   const [data, setData] = useState([]);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const result = await axios(\"http://localhost:2000/api/auth/all\");\n\n//       setData(result.data);\n//     };\n\n//     fetchData();\n//   }, []);\n//   return (\n//     <div>\n//       <table className=\"table\">\n//         <tbody className=\"table\">\n//           {data.map((user) => (\n//             <div\n//               style={{\n//                 display: \"flex\",\n//                 justifyContent: \"space-around\",\n//                 alignSelf: \"stretch\",\n//               }}\n//             >\n//               <a style={user?.account === \"true\" ? { color: \"red\" } : null}>\n//                 {user._id}\n//               </a>\n//               <a style={user?.account === \"true\" ? { color: \"red\" } : null}>\n//                 {user.name}\n//               </a>\n//               <a style={user?.account === \"true\" ? { color: \"red\" } : null}>\n//                 {user.email}\n//               </a>\n//               {/* <a style={{ color: \"red\" }}>{user.account}</a> */}\n//               <button\n//                 type=\"button\"\n//                 class=\"btn btn-link\"\n//                 onClick={() => {\n//                   alert(` user approved`);\n//                   axios.put(`http://localhost:2000/api/auth/${user._id}`, {\n//                     account: true,\n//                   });\n//                 }}\n//               >\n//                 approuve user\n//               </button>\n//             </div>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default ApprouveUser;\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n// import firebase from \"../../server/firebase\";\nimport firebase from \"../../server/firebase\";\n\nconst ApprouveUser = (props) => {\n  const [usersState, setUsersState] = useState([]);\n\n  const [connectedUsersState, setConnectedUsersState] = useState([]);\n\n  const usersRef = firebase.database().ref(\"users\");\n\n  const connectedRef = firebase.database().ref(\".info/connected\");\n\n  const statusRef = firebase.database().ref(\"status\");\n\n  useEffect(() => {\n    usersRef.on(\"child_added\", (snap) => {\n      setUsersState((currentState) => {\n        let updatedState = [...currentState];\n\n        let user = snap.val();\n        user.name = user.displayName;\n        user.email = user.email;\n        user.status = user.status;\n        user.id = snap.key;\n        user.isPrivateChat = true;\n        updatedState.push(user);\n\n        return updatedState;\n      });\n    });\n\n    connectedRef.on(\"value\", (snap) => {\n      if (props.user && snap.val()) {\n        const userStatusRef = statusRef.child(props.user.uid);\n        userStatusRef.set(true);\n        userStatusRef.onDisconnect().remove();\n      }\n    });\n\n    return () => {\n      usersRef.off();\n      connectedRef.off();\n    };\n  }, [props.user]);\n\n  useEffect(() => {\n    statusRef.on(\"child_added\", (snap) => {\n      setConnectedUsersState((currentState) => {\n        let updatedState = [...currentState];\n        updatedState.push(snap.key);\n        return updatedState;\n      });\n    });\n\n    statusRef.on(\"child_removed\", (snap) => {\n      setConnectedUsersState((currentState) => {\n        let updatedState = [...currentState];\n\n        let index = updatedState.indexOf(snap.key);\n        updatedState.splice(index, 1);\n        return updatedState;\n      });\n    });\n\n    return () => statusRef.off();\n  }, [usersState]);\n\n  const displayUsers = () => {\n    if (usersState.length > 0) {\n      return usersState\n        .filter((user) => user.id !== props.user.uid)\n        .map((user) => {\n          return (\n            // <div\n            //   style={{\n            //     display: \"flex\",\n            //     justifyContent: \"space-around\",\n            //     marginBottom: 20,\n            //   }}\n            // >\n            //   <div>\n            //     {console.log(user, \"uuuuusre\")}\n            //     {user.name}\n            //   </div>\n            //   <div>\n            //     {/* {user.name}@SoftCommunity.com */}\n            //     {user.email}\n            //   </div>\n            //   <button\n            //     type=\"button\"\n            //     class=\"btn btn-link\"\n            //     onClick={() => {\n            //       alert(` user approved`);\n\n            //       const accountStatus = usersRef.child(user.id);\n\n            //       accountStatus.update({ status: true });\n            //       // axios.put(`http://localhost:2000/api/auth/${user._id}`, {\n            //       //   account: true,\n            //       // });\n            //     }}\n            //   >\n            //     approuve user\n            //   </button>\n            // </div>\n\n            <ul class=\"list-group\" style={{ marginLeft: 100 }}>\n              <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                <a style={user.status === true ? { color: \"red\" } : null}>\n                  {user.email}\n                </a>\n                <span class=\"badge badge-primary badge-pill\">\n                  {user.status === false ? (\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-link\"\n                      onClick={() => {\n                        alert(` user approved`);\n\n                        const accountStatus = usersRef.child(user.id);\n\n                        accountStatus.update({ status: true });\n                        // axios.put(`http://localhost:2000/api/auth/${user._id}`, {\n                        //   account: true,\n                        // });\n                      }}\n                    >\n                      Approuve User\n                    </button>\n                  ) : null}\n                </span>\n              </li>\n            </ul>\n          );\n        });\n    }\n  };\n\n  return <div style={{ marginTop: 100 }}>{displayUsers()}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.currentUser,\n    channel: state.channel.currentChannel,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // selectChannel: (channel) => dispatch(setChannel(channel)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ApprouveUser);\n"]},"metadata":{},"sourceType":"module"}