{"ast":null,"code":"var _jsxFileName = \"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/index.js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./index.css\";\n// import App from \"./App\";\n// import { createStore, compose, applyMiddleware } from \"redux\";\n// import { Provider } from \"react-redux\";\n// import { rootReducer } from \"./redux/reducers/rootReducer\";\n// import thunk from \"redux-thunk\";\n// const middleware = [thunk];\n// const store = createStore(\n//   rootReducer,\n//   compose(\n//     applyMiddleware(...middleware)\n//     // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//   )\n// );\n// ReactDOM.render(\n//   <Provider store={store}>\n//     <App />\n//   </Provider>,\n//   document.getElementById(\"root\")\n// );\nimport React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router, Switch, Route, withRouter } from \"react-router-dom\";\nimport { Provider, connect } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport Register from \"./components/Auth /Register/Register.component\";\nimport Login from \"./components/Auth /Login/Login.component\";\nimport firebase from \"./server/firebase\";\nimport { combinedReducers } from \"./store/reducer\";\nimport { setUser } from \"./store/actioncreator\";\nimport { AppLoader } from \"./components/AppLoader/AppLoader.component\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst store = createStore(combinedReducers);\n\nconst Index = props => {\n  _s();\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        props.setUser(user);\n        props.history.push(\"/\");\n      } else {\n        props.setUser(null);\n        props.history.push(\"/login\");\n      }\n    });\n  }, []);\n  console.log(\"Debug\", props.currentUser);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        component: Register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        component: App\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Index, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Index;\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.user.currentUser,\n    loading: state.channel.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUser: user => {\n      dispatch(setUser(user));\n    }\n  };\n};\n\nconst IndexWithRouter = withRouter(connect(mapStateToProps, mapDispatchToProps)(Index));\n_c2 = IndexWithRouter;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(IndexWithRouter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 94,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"IndexWithRouter\");","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/index.js"],"names":["React","useEffect","ReactDOM","App","serviceWorker","BrowserRouter","Router","Switch","Route","withRouter","Provider","connect","createStore","Register","Login","firebase","combinedReducers","setUser","AppLoader","store","Index","props","auth","onAuthStateChanged","user","history","push","console","log","currentUser","mapStateToProps","state","loading","channel","mapDispatchToProps","dispatch","IndexWithRouter","render","document","getElementById","unregister"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,UAJF,QAKO,kBALP;AAMA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,aAAlC;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,QAAP,MAAqB,gDAArB;AACA,OAAOC,KAAP,MAAkB,0CAAlB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,SAAT,QAA0B,4CAA1B;AAEA,OAAO,kCAAP;;;AACA,MAAMC,KAAK,GAAGP,WAAW,CAACI,gBAAD,CAAzB;;AAEA,MAAMI,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvBpB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACO,IAAT,GAAgBC,kBAAhB,CAAoCC,IAAD,IAAU;AAC3C,UAAIA,IAAJ,EAAU;AACRH,QAAAA,KAAK,CAACJ,OAAN,CAAcO,IAAd;AACAH,QAAAA,KAAK,CAACI,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD,OAHD,MAGO;AACLL,QAAAA,KAAK,CAACJ,OAAN,CAAc,IAAd;AACAI,QAAAA,KAAK,CAACI,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACD;AACF,KARD;AASD,GAVQ,EAUN,EAVM,CAAT;AAYAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,KAAK,CAACQ,WAA3B;AACA,sBACE;AAAA,2BAEE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAEf;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,SAAS,EAAED;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,SAAS,EAAEV;AAA3B;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF,mBADF;AAUD,CAxBD;;GAAMiB,K;;KAAAA,K;;AA0BN,MAAMU,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLF,IAAAA,WAAW,EAAEE,KAAK,CAACP,IAAN,CAAWK,WADnB;AAELG,IAAAA,OAAO,EAAED,KAAK,CAACE,OAAN,CAAcD;AAFlB,GAAP;AAID,CALD;;AAOA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLlB,IAAAA,OAAO,EAAGO,IAAD,IAAU;AACjBW,MAAAA,QAAQ,CAAClB,OAAO,CAACO,IAAD,CAAR,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,MAAMY,eAAe,GAAG3B,UAAU,CAChCE,OAAO,CAACmB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cd,KAA7C,CADgC,CAAlC;MAAMgB,e;AAINlC,QAAQ,CAACmC,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAElB,KAAjB;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAQEmB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF,E,CAWA;AACA;AACA;;AACAnC,aAAa,CAACoC,UAAd","sourcesContent":["// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./index.css\";\n// import App from \"./App\";\n// import { createStore, compose, applyMiddleware } from \"redux\";\n// import { Provider } from \"react-redux\";\n// import { rootReducer } from \"./redux/reducers/rootReducer\";\n// import thunk from \"redux-thunk\";\n\n// const middleware = [thunk];\n\n// const store = createStore(\n//   rootReducer,\n//   compose(\n//     applyMiddleware(...middleware)\n//     // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//   )\n// );\n// ReactDOM.render(\n//   <Provider store={store}>\n//     <App />\n//   </Provider>,\n//   document.getElementById(\"root\")\n// );\n\nimport React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  withRouter,\n} from \"react-router-dom\";\nimport { Provider, connect } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport Register from \"./components/Auth /Register/Register.component\";\nimport Login from \"./components/Auth /Login/Login.component\";\nimport firebase from \"./server/firebase\";\nimport { combinedReducers } from \"./store/reducer\";\nimport { setUser } from \"./store/actioncreator\";\nimport { AppLoader } from \"./components/AppLoader/AppLoader.component\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nconst store = createStore(combinedReducers);\n\nconst Index = (props) => {\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        props.setUser(user);\n        props.history.push(\"/\");\n      } else {\n        props.setUser(null);\n        props.history.push(\"/login\");\n      }\n    });\n  }, []);\n\n  console.log(\"Debug\", props.currentUser);\n  return (\n    <>\n      {/* <AppLoader loading={props.loading && props.location.pathname === \"/\"} /> */}\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/\" component={App} />\n      </Switch>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.user.currentUser,\n    loading: state.channel.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setUser: (user) => {\n      dispatch(setUser(user));\n    },\n  };\n};\n\nconst IndexWithRouter = withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(Index)\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <IndexWithRouter />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}