{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/appointment/overflow_indicator/utils.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { addToStyles } from \"../../workspaces/utils\";\nexport var getOverflowIndicatorStyles = viewModel => {\n  var {\n    color: color,\n    geometry: {\n      height: height,\n      left: left,\n      top: top,\n      width: width\n    }\n  } = viewModel;\n  var result = addToStyles([{\n    attr: \"left\",\n    value: \"\".concat(left, \"px\")\n  }, {\n    attr: \"top\",\n    value: \"\".concat(top, \"px\")\n  }, {\n    attr: \"width\",\n    value: \"\".concat(width, \"px\")\n  }, {\n    attr: \"height\",\n    value: \"\".concat(height, \"px\")\n  }]);\n\n  if (color) {\n    result = addToStyles([{\n      attr: \"backgroundColor\",\n      value: color\n    }, {\n      attr: \"boxShadow\",\n      value: \"inset \".concat(width, \"px 0 0 0 rgba(0, 0, 0, 0.3)\")\n    }], result);\n  }\n\n  return result;\n};\nexport var getOverflowIndicatorColor = (color, colors) => !colors.length || 0 === colors.filter(item => item !== color).length ? color : void 0;","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/node_modules/devextreme/esm/renovation/ui/scheduler/appointment/overflow_indicator/utils.js"],"names":["addToStyles","getOverflowIndicatorStyles","viewModel","color","geometry","height","left","top","width","result","attr","value","concat","getOverflowIndicatorColor","colors","length","filter","item"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,WADJ,QAEO,wBAFP;AAGA,OAAO,IAAIC,0BAA0B,GAAGC,SAAS,IAAI;AACjD,MAAI;AACAC,IAAAA,KAAK,EAAEA,KADP;AAEAC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,MAAM,EAAEA,MADF;AAENC,MAAAA,IAAI,EAAEA,IAFA;AAGNC,MAAAA,GAAG,EAAEA,GAHC;AAINC,MAAAA,KAAK,EAAEA;AAJD;AAFV,MAQAN,SARJ;AASA,MAAIO,MAAM,GAAGT,WAAW,CAAC,CAAC;AACtBU,IAAAA,IAAI,EAAE,MADgB;AAEtBC,IAAAA,KAAK,EAAE,GAAGC,MAAH,CAAUN,IAAV,EAAgB,IAAhB;AAFe,GAAD,EAGtB;AACCI,IAAAA,IAAI,EAAE,KADP;AAECC,IAAAA,KAAK,EAAE,GAAGC,MAAH,CAAUL,GAAV,EAAe,IAAf;AAFR,GAHsB,EAMtB;AACCG,IAAAA,IAAI,EAAE,OADP;AAECC,IAAAA,KAAK,EAAE,GAAGC,MAAH,CAAUJ,KAAV,EAAiB,IAAjB;AAFR,GANsB,EAStB;AACCE,IAAAA,IAAI,EAAE,QADP;AAECC,IAAAA,KAAK,EAAE,GAAGC,MAAH,CAAUP,MAAV,EAAkB,IAAlB;AAFR,GATsB,CAAD,CAAxB;;AAaA,MAAIF,KAAJ,EAAW;AACPM,IAAAA,MAAM,GAAGT,WAAW,CAAC,CAAC;AAClBU,MAAAA,IAAI,EAAE,iBADY;AAElBC,MAAAA,KAAK,EAAER;AAFW,KAAD,EAGlB;AACCO,MAAAA,IAAI,EAAE,WADP;AAECC,MAAAA,KAAK,EAAE,SAASC,MAAT,CAAgBJ,KAAhB,EAAuB,6BAAvB;AAFR,KAHkB,CAAD,EAMhBC,MANgB,CAApB;AAOH;;AACD,SAAOA,MAAP;AACH,CAjCM;AAkCP,OAAO,IAAII,yBAAyB,GAAG,CAACV,KAAD,EAAQW,MAAR,KAAmB,CAACA,MAAM,CAACC,MAAR,IAAkB,MAAMD,MAAM,CAACE,MAAP,CAAcC,IAAI,IAAIA,IAAI,KAAKd,KAA/B,EAAsCY,MAA9D,GAAuEZ,KAAvE,GAA+E,KAAK,CAAvI","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/appointment/overflow_indicator/utils.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    addToStyles\r\n} from \"../../workspaces/utils\";\r\nexport var getOverflowIndicatorStyles = viewModel => {\r\n    var {\r\n        color: color,\r\n        geometry: {\r\n            height: height,\r\n            left: left,\r\n            top: top,\r\n            width: width\r\n        }\r\n    } = viewModel;\r\n    var result = addToStyles([{\r\n        attr: \"left\",\r\n        value: \"\".concat(left, \"px\")\r\n    }, {\r\n        attr: \"top\",\r\n        value: \"\".concat(top, \"px\")\r\n    }, {\r\n        attr: \"width\",\r\n        value: \"\".concat(width, \"px\")\r\n    }, {\r\n        attr: \"height\",\r\n        value: \"\".concat(height, \"px\")\r\n    }]);\r\n    if (color) {\r\n        result = addToStyles([{\r\n            attr: \"backgroundColor\",\r\n            value: color\r\n        }, {\r\n            attr: \"boxShadow\",\r\n            value: \"inset \".concat(width, \"px 0 0 0 rgba(0, 0, 0, 0.3)\")\r\n        }], result)\r\n    }\r\n    return result\r\n};\r\nexport var getOverflowIndicatorColor = (color, colors) => !colors.length || 0 === colors.filter(item => item !== color).length ? color : void 0;\r\n"]},"metadata":{},"sourceType":"module"}