{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/appointmentDragBehavior.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport Draggable from \"../draggable\";\nimport { extend } from \"../../core/utils/extend\";\nimport { LIST_ITEM_DATA_KEY } from \"./constants\";\nvar APPOINTMENT_ITEM_CLASS = \"dx-scheduler-appointment\";\nexport default class AppointmentDragBehavior {\n  constructor(scheduler) {\n    this.scheduler = scheduler;\n    this.appointments = scheduler._appointments;\n    this.initialPosition = {\n      left: 0,\n      top: 0\n    };\n    this.appointmentInfo = null;\n  }\n\n  isAllDay(appointment) {\n    return appointment.data(\"dxAppointmentSettings\").allDay;\n  }\n\n  onDragStart(e) {\n    var {\n      itemSettings: itemSettings,\n      itemData: itemData,\n      initialPosition: initialPosition\n    } = e;\n    this.initialPosition = initialPosition;\n    this.appointmentInfo = {\n      appointment: itemData,\n      settings: itemSettings\n    };\n    this.appointments.notifyObserver(\"hideAppointmentTooltip\");\n  }\n\n  onDragMove(e) {\n    if (e.fromComponent !== e.toComponent) {\n      this.appointments.notifyObserver(\"removeDroppableCellClass\");\n    }\n  }\n\n  getAppointmentElement(e) {\n    var itemElement = e.event.data && e.event.data.itemElement || e.itemElement;\n    return $(itemElement);\n  }\n\n  onDragEnd(e) {\n    var element = this.getAppointmentElement(e);\n\n    var rawAppointment = this.appointments._getItemData(element);\n\n    var container = this.appointments._getAppointmentContainer(this.isAllDay(element));\n\n    container.append(element);\n    this.appointments.notifyObserver(\"updateAppointmentAfterDrag\", {\n      event: e,\n      element: element,\n      rawAppointment: rawAppointment,\n      coordinates: this.initialPosition\n    });\n  }\n\n  getItemData(appointmentElement) {\n    var dataFromTooltip = $(appointmentElement).data(LIST_ITEM_DATA_KEY);\n    var itemDataFromTooltip = null === dataFromTooltip || void 0 === dataFromTooltip ? void 0 : dataFromTooltip.appointment;\n\n    var itemDataFromGrid = this.appointments._getItemData(appointmentElement);\n\n    return itemDataFromTooltip || itemDataFromGrid;\n  }\n\n  getItemSettings(appointment) {\n    var itemData = $(appointment).data(LIST_ITEM_DATA_KEY);\n    return itemData && itemData.settings || [];\n  }\n\n  createDragStartHandler(options, appointmentDragging) {\n    return e => {\n      e.itemData = this.getItemData(e.itemElement);\n      e.itemSettings = this.getItemSettings(e.itemElement);\n      appointmentDragging.onDragStart && appointmentDragging.onDragStart(e);\n\n      if (!e.cancel) {\n        options.onDragStart(e);\n      }\n    };\n  }\n\n  createDragMoveHandler(options, appointmentDragging) {\n    return e => {\n      appointmentDragging.onDragMove && appointmentDragging.onDragMove(e);\n\n      if (!e.cancel) {\n        options.onDragMove(e);\n      }\n    };\n  }\n\n  createDragEndHandler(options, appointmentDragging) {\n    return e => {\n      this.appointmentInfo = null;\n      appointmentDragging.onDragEnd && appointmentDragging.onDragEnd(e);\n\n      if (!e.cancel) {\n        options.onDragEnd(e);\n\n        if (e.fromComponent !== e.toComponent) {\n          appointmentDragging.onRemove && appointmentDragging.onRemove(e);\n        }\n      }\n    };\n  }\n\n  createDropHandler(appointmentDragging) {\n    return e => {\n      var updatedData = this.appointments.invoke(\"getUpdatedData\", e.itemData);\n      e.itemData = extend({}, e.itemData, updatedData);\n\n      if (e.fromComponent !== e.toComponent) {\n        appointmentDragging.onAdd && appointmentDragging.onAdd(e);\n      }\n    };\n  }\n\n  addTo(container, config) {\n    var appointmentDragging = this.scheduler.option(\"appointmentDragging\") || {};\n    var options = extend({\n      component: this.scheduler,\n      contentTemplate: null,\n      filter: \".\".concat(APPOINTMENT_ITEM_CLASS),\n      immediate: false,\n      onDragStart: this.onDragStart.bind(this),\n      onDragMove: this.onDragMove.bind(this),\n      onDragEnd: this.onDragEnd.bind(this)\n    }, config);\n\n    this.appointments._createComponent(container, Draggable, extend({}, options, appointmentDragging, {\n      onDragStart: this.createDragStartHandler(options, appointmentDragging),\n      onDragMove: this.createDragMoveHandler(options, appointmentDragging),\n      onDragEnd: this.createDragEndHandler(options, appointmentDragging),\n      onDrop: this.createDropHandler(appointmentDragging)\n    }));\n  }\n\n  updateDragSource(appointment, settings) {\n    var {\n      appointmentInfo: appointmentInfo\n    } = this;\n\n    if (appointmentInfo || appointment) {\n      var currentAppointment = appointment || appointmentInfo.appointment;\n      var currentSettings = settings || appointmentInfo.settings;\n\n      this.appointments._setDragSourceAppointment(currentAppointment, currentSettings);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/node_modules/devextreme/esm/ui/scheduler/appointmentDragBehavior.js"],"names":["$","Draggable","extend","LIST_ITEM_DATA_KEY","APPOINTMENT_ITEM_CLASS","AppointmentDragBehavior","constructor","scheduler","appointments","_appointments","initialPosition","left","top","appointmentInfo","isAllDay","appointment","data","allDay","onDragStart","e","itemSettings","itemData","settings","notifyObserver","onDragMove","fromComponent","toComponent","getAppointmentElement","itemElement","event","onDragEnd","element","rawAppointment","_getItemData","container","_getAppointmentContainer","append","coordinates","getItemData","appointmentElement","dataFromTooltip","itemDataFromTooltip","itemDataFromGrid","getItemSettings","createDragStartHandler","options","appointmentDragging","cancel","createDragMoveHandler","createDragEndHandler","onRemove","createDropHandler","updatedData","invoke","onAdd","addTo","config","option","component","contentTemplate","filter","concat","immediate","bind","_createComponent","onDrop","updateDragSource","currentAppointment","currentSettings","_setDragSourceAppointment"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/appointmentDragBehavior.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport Draggable from \"../draggable\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    LIST_ITEM_DATA_KEY\r\n} from \"./constants\";\r\nvar APPOINTMENT_ITEM_CLASS = \"dx-scheduler-appointment\";\r\nexport default class AppointmentDragBehavior {\r\n    constructor(scheduler) {\r\n        this.scheduler = scheduler;\r\n        this.appointments = scheduler._appointments;\r\n        this.initialPosition = {\r\n            left: 0,\r\n            top: 0\r\n        };\r\n        this.appointmentInfo = null\r\n    }\r\n    isAllDay(appointment) {\r\n        return appointment.data(\"dxAppointmentSettings\").allDay\r\n    }\r\n    onDragStart(e) {\r\n        var {\r\n            itemSettings: itemSettings,\r\n            itemData: itemData,\r\n            initialPosition: initialPosition\r\n        } = e;\r\n        this.initialPosition = initialPosition;\r\n        this.appointmentInfo = {\r\n            appointment: itemData,\r\n            settings: itemSettings\r\n        };\r\n        this.appointments.notifyObserver(\"hideAppointmentTooltip\")\r\n    }\r\n    onDragMove(e) {\r\n        if (e.fromComponent !== e.toComponent) {\r\n            this.appointments.notifyObserver(\"removeDroppableCellClass\")\r\n        }\r\n    }\r\n    getAppointmentElement(e) {\r\n        var itemElement = e.event.data && e.event.data.itemElement || e.itemElement;\r\n        return $(itemElement)\r\n    }\r\n    onDragEnd(e) {\r\n        var element = this.getAppointmentElement(e);\r\n        var rawAppointment = this.appointments._getItemData(element);\r\n        var container = this.appointments._getAppointmentContainer(this.isAllDay(element));\r\n        container.append(element);\r\n        this.appointments.notifyObserver(\"updateAppointmentAfterDrag\", {\r\n            event: e,\r\n            element: element,\r\n            rawAppointment: rawAppointment,\r\n            coordinates: this.initialPosition\r\n        })\r\n    }\r\n    getItemData(appointmentElement) {\r\n        var dataFromTooltip = $(appointmentElement).data(LIST_ITEM_DATA_KEY);\r\n        var itemDataFromTooltip = null === dataFromTooltip || void 0 === dataFromTooltip ? void 0 : dataFromTooltip.appointment;\r\n        var itemDataFromGrid = this.appointments._getItemData(appointmentElement);\r\n        return itemDataFromTooltip || itemDataFromGrid\r\n    }\r\n    getItemSettings(appointment) {\r\n        var itemData = $(appointment).data(LIST_ITEM_DATA_KEY);\r\n        return itemData && itemData.settings || []\r\n    }\r\n    createDragStartHandler(options, appointmentDragging) {\r\n        return e => {\r\n            e.itemData = this.getItemData(e.itemElement);\r\n            e.itemSettings = this.getItemSettings(e.itemElement);\r\n            appointmentDragging.onDragStart && appointmentDragging.onDragStart(e);\r\n            if (!e.cancel) {\r\n                options.onDragStart(e)\r\n            }\r\n        }\r\n    }\r\n    createDragMoveHandler(options, appointmentDragging) {\r\n        return e => {\r\n            appointmentDragging.onDragMove && appointmentDragging.onDragMove(e);\r\n            if (!e.cancel) {\r\n                options.onDragMove(e)\r\n            }\r\n        }\r\n    }\r\n    createDragEndHandler(options, appointmentDragging) {\r\n        return e => {\r\n            this.appointmentInfo = null;\r\n            appointmentDragging.onDragEnd && appointmentDragging.onDragEnd(e);\r\n            if (!e.cancel) {\r\n                options.onDragEnd(e);\r\n                if (e.fromComponent !== e.toComponent) {\r\n                    appointmentDragging.onRemove && appointmentDragging.onRemove(e)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    createDropHandler(appointmentDragging) {\r\n        return e => {\r\n            var updatedData = this.appointments.invoke(\"getUpdatedData\", e.itemData);\r\n            e.itemData = extend({}, e.itemData, updatedData);\r\n            if (e.fromComponent !== e.toComponent) {\r\n                appointmentDragging.onAdd && appointmentDragging.onAdd(e)\r\n            }\r\n        }\r\n    }\r\n    addTo(container, config) {\r\n        var appointmentDragging = this.scheduler.option(\"appointmentDragging\") || {};\r\n        var options = extend({\r\n            component: this.scheduler,\r\n            contentTemplate: null,\r\n            filter: \".\".concat(APPOINTMENT_ITEM_CLASS),\r\n            immediate: false,\r\n            onDragStart: this.onDragStart.bind(this),\r\n            onDragMove: this.onDragMove.bind(this),\r\n            onDragEnd: this.onDragEnd.bind(this)\r\n        }, config);\r\n        this.appointments._createComponent(container, Draggable, extend({}, options, appointmentDragging, {\r\n            onDragStart: this.createDragStartHandler(options, appointmentDragging),\r\n            onDragMove: this.createDragMoveHandler(options, appointmentDragging),\r\n            onDragEnd: this.createDragEndHandler(options, appointmentDragging),\r\n            onDrop: this.createDropHandler(appointmentDragging)\r\n        }))\r\n    }\r\n    updateDragSource(appointment, settings) {\r\n        var {\r\n            appointmentInfo: appointmentInfo\r\n        } = this;\r\n        if (appointmentInfo || appointment) {\r\n            var currentAppointment = appointment || appointmentInfo.appointment;\r\n            var currentSettings = settings || appointmentInfo.settings;\r\n            this.appointments._setDragSourceAppointment(currentAppointment, currentSettings)\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}