{"ast":null,"code":"import axios from \"axios\";\nimport { ERROR_USER, GET_USER, LOGIN_USER, LOGOUT_USER, REGISTER_USER } from \"../action-types/auth-action-types\";\nexport const registerHandler = newUser => async dispatch => {\n  try {\n    const res = await axios.post(\"http://localhost:2000/api/auth/register\", newUser);\n    dispatch({\n      type: REGISTER_USER,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR_USER\n    });\n  }\n};\nexport const loginHandler = (authUser, history) => async dispatch => {\n  try {\n    const res = await axios.post(\"http://localhost:2000/api/auth/login\", authUser);\n    dispatch({\n      type: LOGIN_USER,\n      payload: res.data\n    });\n  } catch (error) {\n    console.dir(error);\n    const msg = error.response.data.msg;\n\n    if (msg) {\n      alert(msg);\n    }\n\n    dispatch({\n      type: ERROR_USER\n    });\n    history.push(\"/\");\n  }\n};\nexport const logoutHandler = () => async dispatch => {\n  try {\n    dispatch({\n      type: LOGOUT_USER\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAuthUser = () => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    };\n    const res = await axios.get(\"http://localhost:2000/api/auth/user\", config);\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/comprofat/commaunitedeprofessionnel-fatma 2/authentification-main/front-end/src/redux/action/auth-action.js"],"names":["axios","ERROR_USER","GET_USER","LOGIN_USER","LOGOUT_USER","REGISTER_USER","registerHandler","newUser","dispatch","res","post","type","payload","data","error","loginHandler","authUser","history","console","dir","msg","response","alert","push","logoutHandler","log","getAuthUser","config","headers","localStorage","getItem","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,UADF,EAEEC,QAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,aALF,QAMO,mCANP;AAQA,OAAO,MAAMC,eAAe,GAAIC,OAAD,IAAa,MAAOC,QAAP,IAAoB;AAC9D,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAN,CAChB,yCADgB,EAEhBH,OAFgB,CAAlB;AAIAC,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,aADC;AAEPO,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GATD,CASE,OAAOC,KAAP,EAAc;AACdN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEV;AADC,KAAD,CAAR;AAID;AACF,CAhBM;AAkBP,OAAO,MAAMc,YAAY,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuB,MAAOT,QAAP,IAAoB;AACrE,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAN,CAChB,sCADgB,EAEhBM,QAFgB,CAAlB;AAIAR,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,UADC;AAEPS,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GATD,CASE,OAAOC,KAAP,EAAc;AACdI,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,UAAMM,GAAG,GAAGN,KAAK,CAACO,QAAN,CAAeR,IAAf,CAAoBO,GAAhC;;AAEA,QAAIA,GAAJ,EAAS;AACPE,MAAAA,KAAK,CAACF,GAAD,CAAL;AACD;;AAEDZ,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEV;AADC,KAAD,CAAR;AAGAgB,IAAAA,OAAO,CAACM,IAAR,CAAa,GAAb;AACD;AACF,CAvBM;AAyBP,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAOhB,QAAP,IAAoB;AACrD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP;AADC,KAAD,CAAR;AAGD,GAJD,CAIE,OAAOU,KAAP,EAAc;AACdI,IAAAA,OAAO,CAACO,GAAR,CAAYX,KAAZ;AACD;AACF,CARM;AASP,OAAO,MAAMY,WAAW,GAAG,MAAM,MAAOlB,QAAP,IAAoB;AACnD,MAAI;AACF,UAAMmB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,sBAAcC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADP;AADI,KAAf;AAMA,UAAMrB,GAAG,GAAG,MAAMT,KAAK,CAAC+B,GAAN,CAAU,qCAAV,EAAiDJ,MAAjD,CAAlB;AACAnB,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAET,QADC;AAEPU,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAZD,CAYE,OAAOC,KAAP,EAAc;AACdI,IAAAA,OAAO,CAACO,GAAR,CAAYX,KAAZ;AACD;AACF,CAhBM","sourcesContent":["import axios from \"axios\";\nimport {\n  ERROR_USER,\n  GET_USER,\n  LOGIN_USER,\n  LOGOUT_USER,\n  REGISTER_USER,\n} from \"../action-types/auth-action-types\";\n\nexport const registerHandler = (newUser) => async (dispatch) => {\n  try {\n    const res = await axios.post(\n      \"http://localhost:2000/api/auth/register\",\n      newUser\n    );\n    dispatch({\n      type: REGISTER_USER,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR_USER,\n    });\n   \n  }\n};\n\nexport const loginHandler = (authUser, history) => async (dispatch) => {\n  try {\n    const res = await axios.post(\n      \"http://localhost:2000/api/auth/login\",\n      authUser\n    );\n    dispatch({\n      type: LOGIN_USER,\n      payload: res.data,\n    });\n  } catch (error) {\n    console.dir(error);\n    const msg = error.response.data.msg;\n\n    if (msg) {\n      alert(msg);\n    }\n\n    dispatch({\n      type: ERROR_USER,\n    });\n    history.push(\"/\");\n  }\n};\n\nexport const logoutHandler = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: LOGOUT_USER,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAuthUser = () => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n    \n      },\n    };\n    const res = await axios.get(\"http://localhost:2000/api/auth/user\", config);\n    dispatch({\n      type: GET_USER,\n      payload: res.data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}