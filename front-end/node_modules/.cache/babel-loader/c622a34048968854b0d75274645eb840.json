{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/sortable.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getHeight, getOuterHeight, getOuterWidth, getWidth } from \"../core/utils/size\";\nimport $ from \"../core/renderer\";\nimport eventsEngine from \"../events/core/events_engine\";\nimport registerComponent from \"../core/component_registrator\";\nimport { extend } from \"../core/utils/extend\";\nimport Draggable from \"./draggable\";\nimport { getPublicElement } from \"../core/element\";\nimport { getWindow } from \"../core/utils/window\";\nimport { getBoundingRect } from \"../core/utils/position\";\nimport { resetPosition } from \"../animation/translator\";\nimport fx from \"../animation/fx\";\nimport { Deferred } from \"../core/utils/deferred\";\nvar window = getWindow();\nvar SORTABLE = \"dxSortable\";\nvar PLACEHOLDER_CLASS = \"placeholder\";\nvar CLONE_CLASS = \"clone\";\n\nvar isElementVisible = itemElement => $(itemElement).is(\":visible\");\n\nvar animate = (element, config) => {\n  var _config$to, _config$to2;\n\n  if (!element) {\n    return;\n  }\n\n  var left = (null === (_config$to = config.to) || void 0 === _config$to ? void 0 : _config$to.left) || 0;\n  var top = (null === (_config$to2 = config.to) || void 0 === _config$to2 ? void 0 : _config$to2.top) || 0;\n  element.style.transform = \"translate(\".concat(left, \"px,\").concat(top, \"px)\");\n  element.style.transition = fx.off ? \"\" : \"transform \".concat(config.duration, \"ms \").concat(config.easing);\n};\n\nvar stopAnimation = element => {\n  if (!element) {\n    return;\n  }\n\n  element.style.transform = \"\";\n  element.style.transition = \"\";\n};\n\nfunction getScrollableBoundary($scrollable) {\n  var offset = $scrollable.offset();\n  var style = $scrollable[0].style;\n  var paddingLeft = parseFloat(style.paddingLeft) || 0;\n  var paddingRight = parseFloat(style.paddingRight) || 0;\n  var paddingTop = parseFloat(style.paddingTop) || 0;\n  var width = $scrollable[0].clientWidth - (paddingLeft + paddingRight);\n  var height = getHeight($scrollable);\n  var left = offset.left + paddingLeft;\n  var top = offset.top + paddingTop;\n  return {\n    left: left,\n    right: left + width,\n    top: top,\n    bottom: top + height\n  };\n}\n\nvar Sortable = Draggable.inherit({\n  _init: function () {\n    this.callBase();\n    this._sourceScrollHandler = this._handleSourceScroll.bind(this);\n    this._sourceScrollableInfo = null;\n  },\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      clone: true,\n      filter: \"> *\",\n      itemOrientation: \"vertical\",\n      dropFeedbackMode: \"push\",\n      allowDropInsideItem: false,\n      allowReordering: true,\n      moveItemOnDrop: false,\n      onDragChange: null,\n      onAdd: null,\n      onRemove: null,\n      onReorder: null,\n      onPlaceholderPrepared: null,\n      animation: {\n        type: \"slide\",\n        duration: 300,\n        easing: \"ease\"\n      },\n      fromIndex: null,\n      toIndex: null,\n      dropInsideItem: false,\n      itemPoints: null,\n      fromIndexOffset: 0,\n      offset: 0,\n      autoUpdate: false,\n      draggableElementSize: 0\n    });\n  },\n  reset: function () {\n    this.option({\n      dropInsideItem: false,\n      toIndex: null,\n      fromIndex: null,\n      itemPoints: null,\n      fromIndexOffset: 0,\n      draggableElementSize: 0\n    });\n\n    if (this._$placeholderElement) {\n      this._$placeholderElement.remove();\n    }\n\n    this._$placeholderElement = null;\n\n    if (!this._isIndicateMode() && this._$modifiedItem) {\n      this._$modifiedItem.css(\"marginBottom\", this._modifiedItemMargin);\n\n      this._$modifiedItem = null;\n    }\n  },\n  _getPrevVisibleItem: function (items, index) {\n    return items.slice(0, index).reverse().filter(isElementVisible)[0];\n  },\n  _dragStartHandler: function (e) {\n    this.callBase.apply(this, arguments);\n\n    if (true === e.cancel) {\n      return;\n    }\n\n    var $sourceElement = this._getSourceElement();\n\n    this._updateItemPoints();\n\n    this._subscribeToSourceScroll(e);\n\n    this.option(\"fromIndex\", this._getElementIndex($sourceElement));\n    this.option(\"fromIndexOffset\", this.option(\"offset\"));\n  },\n  _subscribeToSourceScroll: function (e) {\n    var $scrollable = this._getScrollable($(e.target));\n\n    if ($scrollable) {\n      this._sourceScrollableInfo = {\n        element: $scrollable,\n        scrollLeft: $scrollable.scrollLeft(),\n        scrollTop: $scrollable.scrollTop()\n      };\n      eventsEngine.on($scrollable, \"scroll\", this._sourceScrollHandler);\n    }\n  },\n  _unsubscribeFromSourceScroll: function () {\n    if (this._sourceScrollableInfo) {\n      eventsEngine.off(this._sourceScrollableInfo.element, \"scroll\", this._sourceScrollHandler);\n      this._sourceScrollableInfo = null;\n    }\n  },\n  _handleSourceScroll: function (e) {\n    var sourceScrollableInfo = this._sourceScrollableInfo;\n\n    if (sourceScrollableInfo) {\n      [\"scrollLeft\", \"scrollTop\"].forEach(scrollProp => {\n        if (e.target[scrollProp] !== sourceScrollableInfo[scrollProp]) {\n          var scrollBy = e.target[scrollProp] - sourceScrollableInfo[scrollProp];\n\n          this._correctItemPoints(scrollBy);\n\n          this._movePlaceholder();\n\n          sourceScrollableInfo[scrollProp] = e.target[scrollProp];\n        }\n      });\n    }\n  },\n  _dragEnterHandler: function (e) {\n    this.callBase.apply(this, arguments);\n\n    this._subscribeToSourceScroll(e);\n\n    if (this === this._getSourceDraggable()) {\n      return;\n    }\n\n    this._updateItemPoints();\n\n    this.option(\"fromIndex\", -1);\n\n    if (!this._isIndicateMode()) {\n      var itemPoints = this.option(\"itemPoints\");\n      var lastItemPoint = itemPoints[itemPoints.length - 1];\n\n      if (lastItemPoint) {\n        var $element = this.$element();\n\n        var $sourceElement = this._getSourceElement();\n\n        var isVertical = this._isVerticalOrientation();\n\n        var sourceElementSize = isVertical ? getOuterHeight($sourceElement, true) : getOuterWidth($sourceElement, true);\n        var scrollSize = $element.get(0)[isVertical ? \"scrollHeight\" : \"scrollWidth\"];\n        var scrollPosition = $element.get(0)[isVertical ? \"scrollTop\" : \"scrollLeft\"];\n        var positionProp = isVertical ? \"top\" : \"left\";\n        var lastPointPosition = lastItemPoint[positionProp];\n        var elementPosition = $element.offset()[positionProp];\n        var freeSize = elementPosition + scrollSize - scrollPosition - lastPointPosition;\n\n        if (freeSize < sourceElementSize) {\n          if (isVertical) {\n            var items = this._getItems();\n\n            var $lastItem = $(this._getPrevVisibleItem(items));\n            this._$modifiedItem = $lastItem;\n            this._modifiedItemMargin = $lastItem.get(0).style.marginBottom;\n            $lastItem.css(\"marginBottom\", sourceElementSize - freeSize);\n            var $sortable = $lastItem.closest(\".dx-sortable\");\n            var sortable = $sortable.data(\"dxScrollable\") || $sortable.data(\"dxScrollView\");\n            sortable && sortable.update();\n          }\n        }\n      }\n    }\n  },\n  _dragLeaveHandler: function () {\n    this.callBase.apply(this, arguments);\n\n    this._unsubscribeFromSourceScroll();\n  },\n  dragEnter: function () {\n    if (this !== this._getTargetDraggable()) {\n      this.option(\"toIndex\", -1);\n    }\n  },\n  dragLeave: function () {\n    if (this !== this._getTargetDraggable()) {\n      this.option(\"toIndex\", this.option(\"fromIndex\"));\n    }\n  },\n  _allowDrop: function (event) {\n    var targetDraggable = this._getTargetDraggable();\n\n    var $targetDraggable = targetDraggable.$element();\n\n    var $scrollable = this._getScrollable($targetDraggable);\n\n    if ($scrollable) {\n      var {\n        left: left,\n        right: right,\n        top: top,\n        bottom: bottom\n      } = getScrollableBoundary($scrollable);\n      var toIndex = this.option(\"toIndex\");\n      var itemPoints = this.option(\"itemPoints\");\n      var itemPoint = null === itemPoints || void 0 === itemPoints ? void 0 : itemPoints.filter(item => item.index === toIndex)[0];\n\n      if (itemPoint && void 0 !== itemPoint.top) {\n        var isVertical = this._isVerticalOrientation();\n\n        if (isVertical) {\n          return top <= itemPoint.top && itemPoint.top <= bottom;\n        } else {\n          return left <= itemPoint.left && itemPoint.left <= right;\n        }\n      }\n    }\n\n    return true;\n  },\n  dragEnd: function (sourceEvent) {\n    var _sourceEvent$fromComp, _sourceEvent$fromComp2, _sourceEvent$toCompon, _sourceEvent$toCompon2;\n\n    null === (_sourceEvent$fromComp = (_sourceEvent$fromComp2 = sourceEvent.fromComponent)._unsubscribeFromSourceScroll) || void 0 === _sourceEvent$fromComp ? void 0 : _sourceEvent$fromComp.call(_sourceEvent$fromComp2);\n    null === (_sourceEvent$toCompon = (_sourceEvent$toCompon2 = sourceEvent.toComponent)._unsubscribeFromSourceScroll) || void 0 === _sourceEvent$toCompon ? void 0 : _sourceEvent$toCompon.call(_sourceEvent$toCompon2);\n\n    var $sourceElement = this._getSourceElement();\n\n    var sourceDraggable = this._getSourceDraggable();\n\n    var isSourceDraggable = sourceDraggable.NAME !== this.NAME;\n    var toIndex = this.option(\"toIndex\");\n    var event = sourceEvent.event;\n\n    var allowDrop = this._allowDrop(event);\n\n    if (null !== toIndex && toIndex >= 0 && allowDrop) {\n      var cancelAdd;\n      var cancelRemove;\n\n      if (sourceDraggable !== this) {\n        cancelAdd = this._fireAddEvent(event);\n\n        if (!cancelAdd) {\n          cancelRemove = this._fireRemoveEvent(event);\n        }\n      }\n\n      if (isSourceDraggable) {\n        resetPosition($sourceElement);\n      }\n\n      if (this.option(\"moveItemOnDrop\")) {\n        !cancelAdd && this._moveItem($sourceElement, toIndex, cancelRemove);\n      }\n\n      if (sourceDraggable === this) {\n        return this._fireReorderEvent(event);\n      }\n    }\n\n    return new Deferred().resolve();\n  },\n  dragMove: function (e) {\n    var itemPoints = this.option(\"itemPoints\");\n\n    if (!itemPoints) {\n      return;\n    }\n\n    var isVertical = this._isVerticalOrientation();\n\n    var axisName = isVertical ? \"top\" : \"left\";\n    var cursorPosition = isVertical ? e.pageY : e.pageX;\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    var itemPoint;\n\n    for (var i = itemPoints.length - 1; i >= 0; i--) {\n      var centerPosition = itemPoints[i + 1] && (itemPoints[i][axisName] + itemPoints[i + 1][axisName]) / 2;\n\n      if ((!isVertical && rtlEnabled ? cursorPosition > centerPosition : centerPosition > cursorPosition) || void 0 === centerPosition) {\n        itemPoint = itemPoints[i];\n      } else {\n        break;\n      }\n    }\n\n    if (itemPoint) {\n      this._updatePlaceholderPosition(e, itemPoint);\n\n      if (this._verticalScrollHelper.isScrolling() && this._isIndicateMode()) {\n        this._movePlaceholder();\n      }\n    }\n  },\n  _isIndicateMode: function () {\n    return \"indicate\" === this.option(\"dropFeedbackMode\") || this.option(\"allowDropInsideItem\");\n  },\n  _createPlaceholder: function () {\n    var $placeholderContainer;\n\n    if (this._isIndicateMode()) {\n      $placeholderContainer = $(\"<div>\").addClass(this._addWidgetPrefix(PLACEHOLDER_CLASS)).insertBefore(this._getSourceDraggable()._$dragElement);\n    }\n\n    this._$placeholderElement = $placeholderContainer;\n    return $placeholderContainer;\n  },\n  _getItems: function () {\n    var itemsSelector = this._getItemsSelector();\n\n    return this._$content().find(itemsSelector).not(\".\" + this._addWidgetPrefix(PLACEHOLDER_CLASS)).not(\".\" + this._addWidgetPrefix(CLONE_CLASS)).toArray();\n  },\n  _allowReordering: function () {\n    var sourceDraggable = this._getSourceDraggable();\n\n    var targetDraggable = this._getTargetDraggable();\n\n    return sourceDraggable !== targetDraggable || this.option(\"allowReordering\");\n  },\n  _isValidPoint: function (visibleIndex, draggableVisibleIndex, dropInsideItem) {\n    var allowDropInsideItem = this.option(\"allowDropInsideItem\");\n\n    var allowReordering = dropInsideItem || this._allowReordering();\n\n    if (!allowReordering && (0 !== visibleIndex || !allowDropInsideItem)) {\n      return false;\n    }\n\n    if (!this._isIndicateMode()) {\n      return true;\n    }\n\n    return -1 === draggableVisibleIndex || visibleIndex !== draggableVisibleIndex && (dropInsideItem || visibleIndex !== draggableVisibleIndex + 1);\n  },\n  _getItemPoints: function () {\n    var result = [];\n    var $item;\n    var offset;\n    var itemWidth;\n    var rtlEnabled = this.option(\"rtlEnabled\");\n\n    var isVertical = this._isVerticalOrientation();\n\n    var itemElements = this._getItems();\n\n    var visibleItemElements = itemElements.filter(isElementVisible);\n    var visibleItemCount = visibleItemElements.length;\n\n    var $draggableItem = this._getDraggableElement();\n\n    var draggableVisibleIndex = visibleItemElements.indexOf($draggableItem.get(0));\n\n    if (visibleItemCount) {\n      for (var i = 0; i <= visibleItemCount; i++) {\n        var needCorrectLeftPosition = !isVertical && rtlEnabled ^ i === visibleItemCount;\n        var needCorrectTopPosition = isVertical && i === visibleItemCount;\n\n        if (i < visibleItemCount) {\n          $item = $(visibleItemElements[i]);\n          offset = $item.offset();\n          itemWidth = getOuterWidth($item);\n        }\n\n        result.push({\n          dropInsideItem: false,\n          left: offset.left + (needCorrectLeftPosition ? itemWidth : 0),\n          top: offset.top + (needCorrectTopPosition ? result[i - 1].height : 0),\n          index: i === visibleItemCount ? itemElements.length : itemElements.indexOf($item.get(0)),\n          $item: $item,\n          width: getOuterWidth($item),\n          height: getOuterHeight($item),\n          isValid: this._isValidPoint(i, draggableVisibleIndex)\n        });\n      }\n\n      if (this.option(\"allowDropInsideItem\")) {\n        var points = result;\n        result = [];\n\n        for (var _i = 0; _i < points.length; _i++) {\n          result.push(points[_i]);\n\n          if (points[_i + 1]) {\n            result.push(extend({}, points[_i], {\n              dropInsideItem: true,\n              top: Math.floor((points[_i].top + points[_i + 1].top) / 2),\n              left: Math.floor((points[_i].left + points[_i + 1].left) / 2),\n              isValid: this._isValidPoint(_i, draggableVisibleIndex, true)\n            }));\n          }\n        }\n      }\n    } else {\n      result.push({\n        dropInsideItem: false,\n        index: 0,\n        isValid: true\n      });\n    }\n\n    return result;\n  },\n  _updateItemPoints: function (forceUpdate) {\n    if (forceUpdate || this.option(\"autoUpdate\") || !this.option(\"itemPoints\")) {\n      this.option(\"itemPoints\", this._getItemPoints());\n    }\n  },\n  _correctItemPoints: function (scrollBy) {\n    var itemPoints = this.option(\"itemPoints\");\n\n    if (scrollBy && itemPoints && !this.option(\"autoUpdate\")) {\n      var isVertical = this._isVerticalOrientation();\n\n      var positionPropName = isVertical ? \"top\" : \"left\";\n      itemPoints.forEach(itemPoint => {\n        itemPoint[positionPropName] -= scrollBy;\n      });\n    }\n  },\n  _getElementIndex: function ($itemElement) {\n    return this._getItems().indexOf($itemElement.get(0));\n  },\n  _getDragTemplateArgs: function ($element) {\n    var args = this.callBase.apply(this, arguments);\n    args.model.fromIndex = this._getElementIndex($element);\n    return args;\n  },\n  _togglePlaceholder: function (value) {\n    this._$placeholderElement && this._$placeholderElement.toggle(value);\n  },\n  _isVerticalOrientation: function () {\n    return \"vertical\" === this.option(\"itemOrientation\");\n  },\n  _normalizeToIndex: function (toIndex, dropInsideItem) {\n    var isAnotherDraggable = this._getSourceDraggable() !== this._getTargetDraggable();\n\n    var fromIndex = this.option(\"fromIndex\");\n\n    if (null === toIndex) {\n      return fromIndex;\n    }\n\n    return Math.max(isAnotherDraggable || fromIndex >= toIndex || dropInsideItem ? toIndex : toIndex - 1, 0);\n  },\n  _updatePlaceholderPosition: function (e, itemPoint) {\n    var sourceDraggable = this._getSourceDraggable();\n\n    var toIndex = this._normalizeToIndex(itemPoint.index, itemPoint.dropInsideItem);\n\n    var eventArgs = extend(this._getEventArgs(e), {\n      toIndex: toIndex,\n      dropInsideItem: itemPoint.dropInsideItem\n    });\n    itemPoint.isValid && this._getAction(\"onDragChange\")(eventArgs);\n\n    if (eventArgs.cancel || !itemPoint.isValid) {\n      if (!itemPoint.isValid) {\n        this.option({\n          dropInsideItem: false,\n          toIndex: null\n        });\n      }\n\n      return;\n    }\n\n    this.option({\n      dropInsideItem: itemPoint.dropInsideItem,\n      toIndex: itemPoint.index\n    });\n\n    this._getAction(\"onPlaceholderPrepared\")(extend(this._getEventArgs(e), {\n      placeholderElement: getPublicElement(this._$placeholderElement),\n      dragElement: getPublicElement(sourceDraggable._$dragElement)\n    }));\n\n    this._updateItemPoints();\n  },\n  _makeWidthCorrection: function ($item, width) {\n    this._$scrollable = this._getScrollable($item);\n\n    if (this._$scrollable && getWidth(this._$scrollable) < width) {\n      var scrollableWidth = getWidth(this._$scrollable);\n\n      var offsetLeft = $item.offset().left - this._$scrollable.offset().left;\n\n      var offsetRight = scrollableWidth - getOuterWidth($item) - offsetLeft;\n\n      if (offsetLeft > 0) {\n        width = scrollableWidth - offsetLeft;\n      } else if (offsetRight > 0) {\n        width = scrollableWidth - offsetRight;\n      } else {\n        width = scrollableWidth;\n      }\n    }\n\n    return width;\n  },\n  _updatePlaceholderSizes: function ($placeholderElement, itemElement) {\n    var dropInsideItem = this.option(\"dropInsideItem\");\n    var $item = $(itemElement);\n\n    var isVertical = this._isVerticalOrientation();\n\n    var width = \"\";\n    var height = \"\";\n    $placeholderElement.toggleClass(this._addWidgetPrefix(\"placeholder-inside\"), dropInsideItem);\n\n    if (isVertical || dropInsideItem) {\n      width = getOuterWidth($item);\n    }\n\n    if (!isVertical || dropInsideItem) {\n      height = getOuterHeight($item);\n    }\n\n    width = this._makeWidthCorrection($item, width);\n    $placeholderElement.css({\n      width: width,\n      height: height\n    });\n  },\n  _moveItem: function ($itemElement, index, cancelRemove) {\n    var $prevTargetItemElement;\n\n    var $itemElements = this._getItems();\n\n    var $targetItemElement = $itemElements[index];\n\n    var sourceDraggable = this._getSourceDraggable();\n\n    if (cancelRemove) {\n      $itemElement = $itemElement.clone();\n\n      sourceDraggable._toggleDragSourceClass(false, $itemElement);\n    }\n\n    if (!$targetItemElement) {\n      $prevTargetItemElement = $itemElements[index - 1];\n    }\n\n    this._moveItemCore($itemElement, $targetItemElement, $prevTargetItemElement);\n  },\n  _moveItemCore: function ($targetItem, item, prevItem) {\n    if (!item && !prevItem) {\n      $targetItem.appendTo(this.$element());\n    } else if (prevItem) {\n      $targetItem.insertAfter($(prevItem));\n    } else {\n      $targetItem.insertBefore($(item));\n    }\n  },\n  _getDragStartArgs: function (e, $itemElement) {\n    return extend(this.callBase.apply(this, arguments), {\n      fromIndex: this._getElementIndex($itemElement)\n    });\n  },\n  _getEventArgs: function (e) {\n    var sourceDraggable = this._getSourceDraggable();\n\n    var targetDraggable = this._getTargetDraggable();\n\n    var dropInsideItem = targetDraggable.option(\"dropInsideItem\");\n    return extend(this.callBase.apply(this, arguments), {\n      fromIndex: sourceDraggable.option(\"fromIndex\"),\n      toIndex: this._normalizeToIndex(targetDraggable.option(\"toIndex\"), dropInsideItem),\n      dropInsideItem: dropInsideItem\n    });\n  },\n  _optionChanged: function (args) {\n    var name = args.name;\n\n    switch (name) {\n      case \"onDragChange\":\n      case \"onPlaceholderPrepared\":\n      case \"onAdd\":\n      case \"onRemove\":\n      case \"onReorder\":\n        this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\n        break;\n\n      case \"itemOrientation\":\n      case \"allowDropInsideItem\":\n      case \"moveItemOnDrop\":\n      case \"dropFeedbackMode\":\n      case \"itemPoints\":\n      case \"animation\":\n      case \"allowReordering\":\n      case \"fromIndexOffset\":\n      case \"offset\":\n      case \"draggableElementSize\":\n      case \"autoUpdate\":\n        break;\n\n      case \"fromIndex\":\n        [false, true].forEach(isDragSource => {\n          var fromIndex = isDragSource ? args.value : args.previousValue;\n\n          if (null !== fromIndex) {\n            var $fromElement = $(this._getItems()[fromIndex]);\n\n            this._toggleDragSourceClass(isDragSource, $fromElement);\n          }\n        });\n        break;\n\n      case \"dropInsideItem\":\n        this._optionChangedDropInsideItem(args);\n\n        break;\n\n      case \"toIndex\":\n        this._optionChangedToIndex(args);\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _optionChangedDropInsideItem: function () {\n    if (this._isIndicateMode() && this._$placeholderElement) {\n      this._movePlaceholder();\n    }\n  },\n  _isPositionVisible: function (position) {\n    var $element = this.$element();\n    var scrollContainer;\n\n    if (\"hidden\" !== $element.css(\"overflow\")) {\n      scrollContainer = $element.get(0);\n    } else {\n      $element.parents().each(function () {\n        if (\"visible\" !== $(this).css(\"overflow\")) {\n          scrollContainer = this;\n          return false;\n        }\n      });\n    }\n\n    if (scrollContainer) {\n      var clientRect = getBoundingRect(scrollContainer);\n\n      var isVerticalOrientation = this._isVerticalOrientation();\n\n      var start = isVerticalOrientation ? \"top\" : \"left\";\n      var end = isVerticalOrientation ? \"bottom\" : \"right\";\n      var pageOffset = isVerticalOrientation ? window.pageYOffset : window.pageXOffset;\n\n      if (position[start] < clientRect[start] + pageOffset || position[start] > clientRect[end] + pageOffset) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n  _optionChangedToIndex: function (args) {\n    var toIndex = args.value;\n\n    if (this._isIndicateMode()) {\n      var showPlaceholder = null !== toIndex && toIndex >= 0;\n\n      this._togglePlaceholder(showPlaceholder);\n\n      if (showPlaceholder) {\n        this._movePlaceholder();\n      }\n    } else {\n      this._moveItems(args.previousValue, args.value, args.fullUpdate);\n    }\n  },\n  update: function () {\n    if (null === this.option(\"fromIndex\") && null === this.option(\"toIndex\")) {\n      return;\n    }\n\n    this._updateItemPoints(true);\n\n    this._updateDragSourceClass();\n\n    var toIndex = this.option(\"toIndex\");\n\n    this._optionChangedToIndex({\n      value: toIndex,\n      fullUpdate: true\n    });\n  },\n  _updateDragSourceClass: function () {\n    var fromIndex = this._getActualFromIndex();\n\n    var $fromElement = $(this._getItems()[fromIndex]);\n\n    if ($fromElement.length) {\n      this._$sourceElement = $fromElement;\n\n      this._toggleDragSourceClass(true, $fromElement);\n    }\n  },\n  _makeLeftCorrection: function (left, leftMargin) {\n    var $scrollable = this._$scrollable;\n\n    if ($scrollable && this._isVerticalOrientation() && $scrollable.scrollLeft() > leftMargin) {\n      left += $scrollable.scrollLeft() - leftMargin;\n    }\n\n    return left;\n  },\n  _movePlaceholder: function () {\n    var $placeholderElement = this._$placeholderElement || this._createPlaceholder();\n\n    if (!$placeholderElement) {\n      return;\n    }\n\n    var items = this._getItems();\n\n    var toIndex = this.option(\"toIndex\");\n\n    var isVerticalOrientation = this._isVerticalOrientation();\n\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    var dropInsideItem = this.option(\"dropInsideItem\");\n    var position = null;\n    var leftMargin = 0;\n    var itemElement = items[toIndex];\n\n    if (itemElement) {\n      var $itemElement = $(itemElement);\n      position = $itemElement.offset();\n      leftMargin = parseFloat($itemElement.css(\"marginLeft\"));\n\n      if (!isVerticalOrientation && rtlEnabled && !dropInsideItem) {\n        position.left += getOuterWidth($itemElement, true);\n      }\n    } else {\n      var prevVisibleItemElement = itemElement = this._getPrevVisibleItem(items, toIndex);\n\n      if (prevVisibleItemElement) {\n        position = $(prevVisibleItemElement).offset();\n\n        if (isVerticalOrientation) {\n          position.top += getOuterHeight(prevVisibleItemElement, true);\n        } else if (!rtlEnabled) {\n          position.left += getOuterWidth(prevVisibleItemElement, true);\n        }\n      }\n    }\n\n    this._updatePlaceholderSizes($placeholderElement, itemElement);\n\n    if (position && !this._isPositionVisible(position)) {\n      position = null;\n    }\n\n    if (position) {\n      position.left = this._makeLeftCorrection(position.left, leftMargin);\n\n      this._move(position, $placeholderElement);\n    }\n\n    $placeholderElement.toggle(!!position);\n  },\n  _getPositions: function (items, elementSize, fromIndex, toIndex) {\n    var positions = [];\n\n    for (var i = 0; i < items.length; i++) {\n      var position = 0;\n\n      if (null === toIndex || null === fromIndex) {\n        positions.push(position);\n        continue;\n      }\n\n      if (-1 === fromIndex) {\n        if (i >= toIndex) {\n          position = elementSize;\n        }\n      } else if (-1 === toIndex) {\n        if (i > fromIndex) {\n          position = -elementSize;\n        }\n      } else if (fromIndex < toIndex) {\n        if (i > fromIndex && i < toIndex) {\n          position = -elementSize;\n        }\n      } else if (fromIndex > toIndex) {\n        if (i >= toIndex && i < fromIndex) {\n          position = elementSize;\n        }\n      }\n\n      positions.push(position);\n    }\n\n    return positions;\n  },\n  _getDraggableElementSize: function (isVerticalOrientation) {\n    var $draggableItem = this._getDraggableElement();\n\n    var size = this.option(\"draggableElementSize\");\n\n    if (!size) {\n      size = isVerticalOrientation ? (getOuterHeight($draggableItem) + getOuterHeight($draggableItem, true)) / 2 : (getOuterWidth($draggableItem) + getOuterWidth($draggableItem, true)) / 2;\n\n      if (!this.option(\"autoUpdate\")) {\n        this.option(\"draggableElementSize\", size);\n      }\n    }\n\n    return size;\n  },\n  _getActualFromIndex: function () {\n    var {\n      fromIndex: fromIndex,\n      fromIndexOffset: fromIndexOffset,\n      offset: offset\n    } = this.option();\n    return null == fromIndex ? null : fromIndex + fromIndexOffset - offset;\n  },\n  _moveItems: function (prevToIndex, toIndex, fullUpdate) {\n    var fromIndex = this._getActualFromIndex();\n\n    var isVerticalOrientation = this._isVerticalOrientation();\n\n    var positionPropName = isVerticalOrientation ? \"top\" : \"left\";\n\n    var elementSize = this._getDraggableElementSize(isVerticalOrientation);\n\n    var items = this._getItems();\n\n    var prevPositions = this._getPositions(items, elementSize, fromIndex, prevToIndex);\n\n    var positions = this._getPositions(items, elementSize, fromIndex, toIndex);\n\n    var animationConfig = this.option(\"animation\");\n    var rtlEnabled = this.option(\"rtlEnabled\");\n\n    for (var i = 0; i < items.length; i++) {\n      var itemElement = items[i];\n      var prevPosition = prevPositions[i];\n      var position = positions[i];\n\n      if (null === toIndex || null === fromIndex) {\n        stopAnimation(itemElement);\n      } else if (prevPosition !== position || fullUpdate && position) {\n        animate(itemElement, extend({}, animationConfig, {\n          to: {\n            [positionPropName]: !isVerticalOrientation && rtlEnabled ? -position : position\n          }\n        }));\n      }\n    }\n  },\n  _toggleDragSourceClass: function (value, $element) {\n    var $sourceElement = $element || this._$sourceElement;\n    this.callBase.apply(this, arguments);\n\n    if (!this._isIndicateMode()) {\n      $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix(\"source-hidden\"), value);\n    }\n  },\n  _dispose: function () {\n    this.reset();\n    this.callBase();\n  },\n  _fireAddEvent: function (sourceEvent) {\n    var args = this._getEventArgs(sourceEvent);\n\n    this._getAction(\"onAdd\")(args);\n\n    return args.cancel;\n  },\n  _fireRemoveEvent: function (sourceEvent) {\n    var sourceDraggable = this._getSourceDraggable();\n\n    var args = this._getEventArgs(sourceEvent);\n\n    sourceDraggable._getAction(\"onRemove\")(args);\n\n    return args.cancel;\n  },\n  _fireReorderEvent: function (sourceEvent) {\n    var args = this._getEventArgs(sourceEvent);\n\n    this._getAction(\"onReorder\")(args);\n\n    return args.promise || new Deferred().resolve();\n  }\n});\nregisterComponent(SORTABLE, Sortable);\nexport default Sortable;","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/node_modules/devextreme/esm/ui/sortable.js"],"names":["getHeight","getOuterHeight","getOuterWidth","getWidth","$","eventsEngine","registerComponent","extend","Draggable","getPublicElement","getWindow","getBoundingRect","resetPosition","fx","Deferred","window","SORTABLE","PLACEHOLDER_CLASS","CLONE_CLASS","isElementVisible","itemElement","is","animate","element","config","_config$to","_config$to2","left","to","top","style","transform","concat","transition","off","duration","easing","stopAnimation","getScrollableBoundary","$scrollable","offset","paddingLeft","parseFloat","paddingRight","paddingTop","width","clientWidth","height","right","bottom","Sortable","inherit","_init","callBase","_sourceScrollHandler","_handleSourceScroll","bind","_sourceScrollableInfo","_getDefaultOptions","clone","filter","itemOrientation","dropFeedbackMode","allowDropInsideItem","allowReordering","moveItemOnDrop","onDragChange","onAdd","onRemove","onReorder","onPlaceholderPrepared","animation","type","fromIndex","toIndex","dropInsideItem","itemPoints","fromIndexOffset","autoUpdate","draggableElementSize","reset","option","_$placeholderElement","remove","_isIndicateMode","_$modifiedItem","css","_modifiedItemMargin","_getPrevVisibleItem","items","index","slice","reverse","_dragStartHandler","e","apply","arguments","cancel","$sourceElement","_getSourceElement","_updateItemPoints","_subscribeToSourceScroll","_getElementIndex","_getScrollable","target","scrollLeft","scrollTop","on","_unsubscribeFromSourceScroll","sourceScrollableInfo","forEach","scrollProp","scrollBy","_correctItemPoints","_movePlaceholder","_dragEnterHandler","_getSourceDraggable","lastItemPoint","length","$element","isVertical","_isVerticalOrientation","sourceElementSize","scrollSize","get","scrollPosition","positionProp","lastPointPosition","elementPosition","freeSize","_getItems","$lastItem","marginBottom","$sortable","closest","sortable","data","update","_dragLeaveHandler","dragEnter","_getTargetDraggable","dragLeave","_allowDrop","event","targetDraggable","$targetDraggable","itemPoint","item","dragEnd","sourceEvent","_sourceEvent$fromComp","_sourceEvent$fromComp2","_sourceEvent$toCompon","_sourceEvent$toCompon2","fromComponent","call","toComponent","sourceDraggable","isSourceDraggable","NAME","allowDrop","cancelAdd","cancelRemove","_fireAddEvent","_fireRemoveEvent","_moveItem","_fireReorderEvent","resolve","dragMove","axisName","cursorPosition","pageY","pageX","rtlEnabled","i","centerPosition","_updatePlaceholderPosition","_verticalScrollHelper","isScrolling","_createPlaceholder","$placeholderContainer","addClass","_addWidgetPrefix","insertBefore","_$dragElement","itemsSelector","_getItemsSelector","_$content","find","not","toArray","_allowReordering","_isValidPoint","visibleIndex","draggableVisibleIndex","_getItemPoints","result","$item","itemWidth","itemElements","visibleItemElements","visibleItemCount","$draggableItem","_getDraggableElement","indexOf","needCorrectLeftPosition","needCorrectTopPosition","push","isValid","points","_i","Math","floor","forceUpdate","positionPropName","$itemElement","_getDragTemplateArgs","args","model","_togglePlaceholder","value","toggle","_normalizeToIndex","isAnotherDraggable","max","eventArgs","_getEventArgs","_getAction","placeholderElement","dragElement","_makeWidthCorrection","_$scrollable","scrollableWidth","offsetLeft","offsetRight","_updatePlaceholderSizes","$placeholderElement","toggleClass","$prevTargetItemElement","$itemElements","$targetItemElement","_toggleDragSourceClass","_moveItemCore","$targetItem","prevItem","appendTo","insertAfter","_getDragStartArgs","_optionChanged","name","_createActionByOption","isDragSource","previousValue","$fromElement","_optionChangedDropInsideItem","_optionChangedToIndex","_isPositionVisible","position","scrollContainer","parents","each","clientRect","isVerticalOrientation","start","end","pageOffset","pageYOffset","pageXOffset","showPlaceholder","_moveItems","fullUpdate","_updateDragSourceClass","_getActualFromIndex","_$sourceElement","_makeLeftCorrection","leftMargin","prevVisibleItemElement","_move","_getPositions","elementSize","positions","_getDraggableElementSize","size","prevToIndex","prevPositions","animationConfig","prevPosition","_dispose","promise"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/sortable.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight,\r\n    getOuterHeight,\r\n    getOuterWidth,\r\n    getWidth\r\n} from \"../core/utils/size\";\r\nimport $ from \"../core/renderer\";\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport Draggable from \"./draggable\";\r\nimport {\r\n    getPublicElement\r\n} from \"../core/element\";\r\nimport {\r\n    getWindow\r\n} from \"../core/utils/window\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../core/utils/position\";\r\nimport {\r\n    resetPosition\r\n} from \"../animation/translator\";\r\nimport fx from \"../animation/fx\";\r\nimport {\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nvar window = getWindow();\r\nvar SORTABLE = \"dxSortable\";\r\nvar PLACEHOLDER_CLASS = \"placeholder\";\r\nvar CLONE_CLASS = \"clone\";\r\nvar isElementVisible = itemElement => $(itemElement).is(\":visible\");\r\nvar animate = (element, config) => {\r\n    var _config$to, _config$to2;\r\n    if (!element) {\r\n        return\r\n    }\r\n    var left = (null === (_config$to = config.to) || void 0 === _config$to ? void 0 : _config$to.left) || 0;\r\n    var top = (null === (_config$to2 = config.to) || void 0 === _config$to2 ? void 0 : _config$to2.top) || 0;\r\n    element.style.transform = \"translate(\".concat(left, \"px,\").concat(top, \"px)\");\r\n    element.style.transition = fx.off ? \"\" : \"transform \".concat(config.duration, \"ms \").concat(config.easing)\r\n};\r\nvar stopAnimation = element => {\r\n    if (!element) {\r\n        return\r\n    }\r\n    element.style.transform = \"\";\r\n    element.style.transition = \"\"\r\n};\r\n\r\nfunction getScrollableBoundary($scrollable) {\r\n    var offset = $scrollable.offset();\r\n    var style = $scrollable[0].style;\r\n    var paddingLeft = parseFloat(style.paddingLeft) || 0;\r\n    var paddingRight = parseFloat(style.paddingRight) || 0;\r\n    var paddingTop = parseFloat(style.paddingTop) || 0;\r\n    var width = $scrollable[0].clientWidth - (paddingLeft + paddingRight);\r\n    var height = getHeight($scrollable);\r\n    var left = offset.left + paddingLeft;\r\n    var top = offset.top + paddingTop;\r\n    return {\r\n        left: left,\r\n        right: left + width,\r\n        top: top,\r\n        bottom: top + height\r\n    }\r\n}\r\nvar Sortable = Draggable.inherit({\r\n    _init: function() {\r\n        this.callBase();\r\n        this._sourceScrollHandler = this._handleSourceScroll.bind(this);\r\n        this._sourceScrollableInfo = null\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            clone: true,\r\n            filter: \"> *\",\r\n            itemOrientation: \"vertical\",\r\n            dropFeedbackMode: \"push\",\r\n            allowDropInsideItem: false,\r\n            allowReordering: true,\r\n            moveItemOnDrop: false,\r\n            onDragChange: null,\r\n            onAdd: null,\r\n            onRemove: null,\r\n            onReorder: null,\r\n            onPlaceholderPrepared: null,\r\n            animation: {\r\n                type: \"slide\",\r\n                duration: 300,\r\n                easing: \"ease\"\r\n            },\r\n            fromIndex: null,\r\n            toIndex: null,\r\n            dropInsideItem: false,\r\n            itemPoints: null,\r\n            fromIndexOffset: 0,\r\n            offset: 0,\r\n            autoUpdate: false,\r\n            draggableElementSize: 0\r\n        })\r\n    },\r\n    reset: function() {\r\n        this.option({\r\n            dropInsideItem: false,\r\n            toIndex: null,\r\n            fromIndex: null,\r\n            itemPoints: null,\r\n            fromIndexOffset: 0,\r\n            draggableElementSize: 0\r\n        });\r\n        if (this._$placeholderElement) {\r\n            this._$placeholderElement.remove()\r\n        }\r\n        this._$placeholderElement = null;\r\n        if (!this._isIndicateMode() && this._$modifiedItem) {\r\n            this._$modifiedItem.css(\"marginBottom\", this._modifiedItemMargin);\r\n            this._$modifiedItem = null\r\n        }\r\n    },\r\n    _getPrevVisibleItem: function(items, index) {\r\n        return items.slice(0, index).reverse().filter(isElementVisible)[0]\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (true === e.cancel) {\r\n            return\r\n        }\r\n        var $sourceElement = this._getSourceElement();\r\n        this._updateItemPoints();\r\n        this._subscribeToSourceScroll(e);\r\n        this.option(\"fromIndex\", this._getElementIndex($sourceElement));\r\n        this.option(\"fromIndexOffset\", this.option(\"offset\"))\r\n    },\r\n    _subscribeToSourceScroll: function(e) {\r\n        var $scrollable = this._getScrollable($(e.target));\r\n        if ($scrollable) {\r\n            this._sourceScrollableInfo = {\r\n                element: $scrollable,\r\n                scrollLeft: $scrollable.scrollLeft(),\r\n                scrollTop: $scrollable.scrollTop()\r\n            };\r\n            eventsEngine.on($scrollable, \"scroll\", this._sourceScrollHandler)\r\n        }\r\n    },\r\n    _unsubscribeFromSourceScroll: function() {\r\n        if (this._sourceScrollableInfo) {\r\n            eventsEngine.off(this._sourceScrollableInfo.element, \"scroll\", this._sourceScrollHandler);\r\n            this._sourceScrollableInfo = null\r\n        }\r\n    },\r\n    _handleSourceScroll: function(e) {\r\n        var sourceScrollableInfo = this._sourceScrollableInfo;\r\n        if (sourceScrollableInfo) {\r\n            [\"scrollLeft\", \"scrollTop\"].forEach(scrollProp => {\r\n                if (e.target[scrollProp] !== sourceScrollableInfo[scrollProp]) {\r\n                    var scrollBy = e.target[scrollProp] - sourceScrollableInfo[scrollProp];\r\n                    this._correctItemPoints(scrollBy);\r\n                    this._movePlaceholder();\r\n                    sourceScrollableInfo[scrollProp] = e.target[scrollProp]\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _dragEnterHandler: function(e) {\r\n        this.callBase.apply(this, arguments);\r\n        this._subscribeToSourceScroll(e);\r\n        if (this === this._getSourceDraggable()) {\r\n            return\r\n        }\r\n        this._updateItemPoints();\r\n        this.option(\"fromIndex\", -1);\r\n        if (!this._isIndicateMode()) {\r\n            var itemPoints = this.option(\"itemPoints\");\r\n            var lastItemPoint = itemPoints[itemPoints.length - 1];\r\n            if (lastItemPoint) {\r\n                var $element = this.$element();\r\n                var $sourceElement = this._getSourceElement();\r\n                var isVertical = this._isVerticalOrientation();\r\n                var sourceElementSize = isVertical ? getOuterHeight($sourceElement, true) : getOuterWidth($sourceElement, true);\r\n                var scrollSize = $element.get(0)[isVertical ? \"scrollHeight\" : \"scrollWidth\"];\r\n                var scrollPosition = $element.get(0)[isVertical ? \"scrollTop\" : \"scrollLeft\"];\r\n                var positionProp = isVertical ? \"top\" : \"left\";\r\n                var lastPointPosition = lastItemPoint[positionProp];\r\n                var elementPosition = $element.offset()[positionProp];\r\n                var freeSize = elementPosition + scrollSize - scrollPosition - lastPointPosition;\r\n                if (freeSize < sourceElementSize) {\r\n                    if (isVertical) {\r\n                        var items = this._getItems();\r\n                        var $lastItem = $(this._getPrevVisibleItem(items));\r\n                        this._$modifiedItem = $lastItem;\r\n                        this._modifiedItemMargin = $lastItem.get(0).style.marginBottom;\r\n                        $lastItem.css(\"marginBottom\", sourceElementSize - freeSize);\r\n                        var $sortable = $lastItem.closest(\".dx-sortable\");\r\n                        var sortable = $sortable.data(\"dxScrollable\") || $sortable.data(\"dxScrollView\");\r\n                        sortable && sortable.update()\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _dragLeaveHandler: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._unsubscribeFromSourceScroll()\r\n    },\r\n    dragEnter: function() {\r\n        if (this !== this._getTargetDraggable()) {\r\n            this.option(\"toIndex\", -1)\r\n        }\r\n    },\r\n    dragLeave: function() {\r\n        if (this !== this._getTargetDraggable()) {\r\n            this.option(\"toIndex\", this.option(\"fromIndex\"))\r\n        }\r\n    },\r\n    _allowDrop: function(event) {\r\n        var targetDraggable = this._getTargetDraggable();\r\n        var $targetDraggable = targetDraggable.$element();\r\n        var $scrollable = this._getScrollable($targetDraggable);\r\n        if ($scrollable) {\r\n            var {\r\n                left: left,\r\n                right: right,\r\n                top: top,\r\n                bottom: bottom\r\n            } = getScrollableBoundary($scrollable);\r\n            var toIndex = this.option(\"toIndex\");\r\n            var itemPoints = this.option(\"itemPoints\");\r\n            var itemPoint = null === itemPoints || void 0 === itemPoints ? void 0 : itemPoints.filter(item => item.index === toIndex)[0];\r\n            if (itemPoint && void 0 !== itemPoint.top) {\r\n                var isVertical = this._isVerticalOrientation();\r\n                if (isVertical) {\r\n                    return top <= itemPoint.top && itemPoint.top <= bottom\r\n                } else {\r\n                    return left <= itemPoint.left && itemPoint.left <= right\r\n                }\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    dragEnd: function(sourceEvent) {\r\n        var _sourceEvent$fromComp, _sourceEvent$fromComp2, _sourceEvent$toCompon, _sourceEvent$toCompon2;\r\n        null === (_sourceEvent$fromComp = (_sourceEvent$fromComp2 = sourceEvent.fromComponent)._unsubscribeFromSourceScroll) || void 0 === _sourceEvent$fromComp ? void 0 : _sourceEvent$fromComp.call(_sourceEvent$fromComp2);\r\n        null === (_sourceEvent$toCompon = (_sourceEvent$toCompon2 = sourceEvent.toComponent)._unsubscribeFromSourceScroll) || void 0 === _sourceEvent$toCompon ? void 0 : _sourceEvent$toCompon.call(_sourceEvent$toCompon2);\r\n        var $sourceElement = this._getSourceElement();\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var isSourceDraggable = sourceDraggable.NAME !== this.NAME;\r\n        var toIndex = this.option(\"toIndex\");\r\n        var event = sourceEvent.event;\r\n        var allowDrop = this._allowDrop(event);\r\n        if (null !== toIndex && toIndex >= 0 && allowDrop) {\r\n            var cancelAdd;\r\n            var cancelRemove;\r\n            if (sourceDraggable !== this) {\r\n                cancelAdd = this._fireAddEvent(event);\r\n                if (!cancelAdd) {\r\n                    cancelRemove = this._fireRemoveEvent(event)\r\n                }\r\n            }\r\n            if (isSourceDraggable) {\r\n                resetPosition($sourceElement)\r\n            }\r\n            if (this.option(\"moveItemOnDrop\")) {\r\n                !cancelAdd && this._moveItem($sourceElement, toIndex, cancelRemove)\r\n            }\r\n            if (sourceDraggable === this) {\r\n                return this._fireReorderEvent(event)\r\n            }\r\n        }\r\n        return (new Deferred).resolve()\r\n    },\r\n    dragMove: function(e) {\r\n        var itemPoints = this.option(\"itemPoints\");\r\n        if (!itemPoints) {\r\n            return\r\n        }\r\n        var isVertical = this._isVerticalOrientation();\r\n        var axisName = isVertical ? \"top\" : \"left\";\r\n        var cursorPosition = isVertical ? e.pageY : e.pageX;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var itemPoint;\r\n        for (var i = itemPoints.length - 1; i >= 0; i--) {\r\n            var centerPosition = itemPoints[i + 1] && (itemPoints[i][axisName] + itemPoints[i + 1][axisName]) / 2;\r\n            if ((!isVertical && rtlEnabled ? cursorPosition > centerPosition : centerPosition > cursorPosition) || void 0 === centerPosition) {\r\n                itemPoint = itemPoints[i]\r\n            } else {\r\n                break\r\n            }\r\n        }\r\n        if (itemPoint) {\r\n            this._updatePlaceholderPosition(e, itemPoint);\r\n            if (this._verticalScrollHelper.isScrolling() && this._isIndicateMode()) {\r\n                this._movePlaceholder()\r\n            }\r\n        }\r\n    },\r\n    _isIndicateMode: function() {\r\n        return \"indicate\" === this.option(\"dropFeedbackMode\") || this.option(\"allowDropInsideItem\")\r\n    },\r\n    _createPlaceholder: function() {\r\n        var $placeholderContainer;\r\n        if (this._isIndicateMode()) {\r\n            $placeholderContainer = $(\"<div>\").addClass(this._addWidgetPrefix(PLACEHOLDER_CLASS)).insertBefore(this._getSourceDraggable()._$dragElement)\r\n        }\r\n        this._$placeholderElement = $placeholderContainer;\r\n        return $placeholderContainer\r\n    },\r\n    _getItems: function() {\r\n        var itemsSelector = this._getItemsSelector();\r\n        return this._$content().find(itemsSelector).not(\".\" + this._addWidgetPrefix(PLACEHOLDER_CLASS)).not(\".\" + this._addWidgetPrefix(CLONE_CLASS)).toArray()\r\n    },\r\n    _allowReordering: function() {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var targetDraggable = this._getTargetDraggable();\r\n        return sourceDraggable !== targetDraggable || this.option(\"allowReordering\")\r\n    },\r\n    _isValidPoint: function(visibleIndex, draggableVisibleIndex, dropInsideItem) {\r\n        var allowDropInsideItem = this.option(\"allowDropInsideItem\");\r\n        var allowReordering = dropInsideItem || this._allowReordering();\r\n        if (!allowReordering && (0 !== visibleIndex || !allowDropInsideItem)) {\r\n            return false\r\n        }\r\n        if (!this._isIndicateMode()) {\r\n            return true\r\n        }\r\n        return -1 === draggableVisibleIndex || visibleIndex !== draggableVisibleIndex && (dropInsideItem || visibleIndex !== draggableVisibleIndex + 1)\r\n    },\r\n    _getItemPoints: function() {\r\n        var result = [];\r\n        var $item;\r\n        var offset;\r\n        var itemWidth;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isVertical = this._isVerticalOrientation();\r\n        var itemElements = this._getItems();\r\n        var visibleItemElements = itemElements.filter(isElementVisible);\r\n        var visibleItemCount = visibleItemElements.length;\r\n        var $draggableItem = this._getDraggableElement();\r\n        var draggableVisibleIndex = visibleItemElements.indexOf($draggableItem.get(0));\r\n        if (visibleItemCount) {\r\n            for (var i = 0; i <= visibleItemCount; i++) {\r\n                var needCorrectLeftPosition = !isVertical && rtlEnabled ^ i === visibleItemCount;\r\n                var needCorrectTopPosition = isVertical && i === visibleItemCount;\r\n                if (i < visibleItemCount) {\r\n                    $item = $(visibleItemElements[i]);\r\n                    offset = $item.offset();\r\n                    itemWidth = getOuterWidth($item)\r\n                }\r\n                result.push({\r\n                    dropInsideItem: false,\r\n                    left: offset.left + (needCorrectLeftPosition ? itemWidth : 0),\r\n                    top: offset.top + (needCorrectTopPosition ? result[i - 1].height : 0),\r\n                    index: i === visibleItemCount ? itemElements.length : itemElements.indexOf($item.get(0)),\r\n                    $item: $item,\r\n                    width: getOuterWidth($item),\r\n                    height: getOuterHeight($item),\r\n                    isValid: this._isValidPoint(i, draggableVisibleIndex)\r\n                })\r\n            }\r\n            if (this.option(\"allowDropInsideItem\")) {\r\n                var points = result;\r\n                result = [];\r\n                for (var _i = 0; _i < points.length; _i++) {\r\n                    result.push(points[_i]);\r\n                    if (points[_i + 1]) {\r\n                        result.push(extend({}, points[_i], {\r\n                            dropInsideItem: true,\r\n                            top: Math.floor((points[_i].top + points[_i + 1].top) / 2),\r\n                            left: Math.floor((points[_i].left + points[_i + 1].left) / 2),\r\n                            isValid: this._isValidPoint(_i, draggableVisibleIndex, true)\r\n                        }))\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            result.push({\r\n                dropInsideItem: false,\r\n                index: 0,\r\n                isValid: true\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    _updateItemPoints: function(forceUpdate) {\r\n        if (forceUpdate || this.option(\"autoUpdate\") || !this.option(\"itemPoints\")) {\r\n            this.option(\"itemPoints\", this._getItemPoints())\r\n        }\r\n    },\r\n    _correctItemPoints: function(scrollBy) {\r\n        var itemPoints = this.option(\"itemPoints\");\r\n        if (scrollBy && itemPoints && !this.option(\"autoUpdate\")) {\r\n            var isVertical = this._isVerticalOrientation();\r\n            var positionPropName = isVertical ? \"top\" : \"left\";\r\n            itemPoints.forEach(itemPoint => {\r\n                itemPoint[positionPropName] -= scrollBy\r\n            })\r\n        }\r\n    },\r\n    _getElementIndex: function($itemElement) {\r\n        return this._getItems().indexOf($itemElement.get(0))\r\n    },\r\n    _getDragTemplateArgs: function($element) {\r\n        var args = this.callBase.apply(this, arguments);\r\n        args.model.fromIndex = this._getElementIndex($element);\r\n        return args\r\n    },\r\n    _togglePlaceholder: function(value) {\r\n        this._$placeholderElement && this._$placeholderElement.toggle(value)\r\n    },\r\n    _isVerticalOrientation: function() {\r\n        return \"vertical\" === this.option(\"itemOrientation\")\r\n    },\r\n    _normalizeToIndex: function(toIndex, dropInsideItem) {\r\n        var isAnotherDraggable = this._getSourceDraggable() !== this._getTargetDraggable();\r\n        var fromIndex = this.option(\"fromIndex\");\r\n        if (null === toIndex) {\r\n            return fromIndex\r\n        }\r\n        return Math.max(isAnotherDraggable || fromIndex >= toIndex || dropInsideItem ? toIndex : toIndex - 1, 0)\r\n    },\r\n    _updatePlaceholderPosition: function(e, itemPoint) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var toIndex = this._normalizeToIndex(itemPoint.index, itemPoint.dropInsideItem);\r\n        var eventArgs = extend(this._getEventArgs(e), {\r\n            toIndex: toIndex,\r\n            dropInsideItem: itemPoint.dropInsideItem\r\n        });\r\n        itemPoint.isValid && this._getAction(\"onDragChange\")(eventArgs);\r\n        if (eventArgs.cancel || !itemPoint.isValid) {\r\n            if (!itemPoint.isValid) {\r\n                this.option({\r\n                    dropInsideItem: false,\r\n                    toIndex: null\r\n                })\r\n            }\r\n            return\r\n        }\r\n        this.option({\r\n            dropInsideItem: itemPoint.dropInsideItem,\r\n            toIndex: itemPoint.index\r\n        });\r\n        this._getAction(\"onPlaceholderPrepared\")(extend(this._getEventArgs(e), {\r\n            placeholderElement: getPublicElement(this._$placeholderElement),\r\n            dragElement: getPublicElement(sourceDraggable._$dragElement)\r\n        }));\r\n        this._updateItemPoints()\r\n    },\r\n    _makeWidthCorrection: function($item, width) {\r\n        this._$scrollable = this._getScrollable($item);\r\n        if (this._$scrollable && getWidth(this._$scrollable) < width) {\r\n            var scrollableWidth = getWidth(this._$scrollable);\r\n            var offsetLeft = $item.offset().left - this._$scrollable.offset().left;\r\n            var offsetRight = scrollableWidth - getOuterWidth($item) - offsetLeft;\r\n            if (offsetLeft > 0) {\r\n                width = scrollableWidth - offsetLeft\r\n            } else if (offsetRight > 0) {\r\n                width = scrollableWidth - offsetRight\r\n            } else {\r\n                width = scrollableWidth\r\n            }\r\n        }\r\n        return width\r\n    },\r\n    _updatePlaceholderSizes: function($placeholderElement, itemElement) {\r\n        var dropInsideItem = this.option(\"dropInsideItem\");\r\n        var $item = $(itemElement);\r\n        var isVertical = this._isVerticalOrientation();\r\n        var width = \"\";\r\n        var height = \"\";\r\n        $placeholderElement.toggleClass(this._addWidgetPrefix(\"placeholder-inside\"), dropInsideItem);\r\n        if (isVertical || dropInsideItem) {\r\n            width = getOuterWidth($item)\r\n        }\r\n        if (!isVertical || dropInsideItem) {\r\n            height = getOuterHeight($item)\r\n        }\r\n        width = this._makeWidthCorrection($item, width);\r\n        $placeholderElement.css({\r\n            width: width,\r\n            height: height\r\n        })\r\n    },\r\n    _moveItem: function($itemElement, index, cancelRemove) {\r\n        var $prevTargetItemElement;\r\n        var $itemElements = this._getItems();\r\n        var $targetItemElement = $itemElements[index];\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        if (cancelRemove) {\r\n            $itemElement = $itemElement.clone();\r\n            sourceDraggable._toggleDragSourceClass(false, $itemElement)\r\n        }\r\n        if (!$targetItemElement) {\r\n            $prevTargetItemElement = $itemElements[index - 1]\r\n        }\r\n        this._moveItemCore($itemElement, $targetItemElement, $prevTargetItemElement)\r\n    },\r\n    _moveItemCore: function($targetItem, item, prevItem) {\r\n        if (!item && !prevItem) {\r\n            $targetItem.appendTo(this.$element())\r\n        } else if (prevItem) {\r\n            $targetItem.insertAfter($(prevItem))\r\n        } else {\r\n            $targetItem.insertBefore($(item))\r\n        }\r\n    },\r\n    _getDragStartArgs: function(e, $itemElement) {\r\n        return extend(this.callBase.apply(this, arguments), {\r\n            fromIndex: this._getElementIndex($itemElement)\r\n        })\r\n    },\r\n    _getEventArgs: function(e) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var targetDraggable = this._getTargetDraggable();\r\n        var dropInsideItem = targetDraggable.option(\"dropInsideItem\");\r\n        return extend(this.callBase.apply(this, arguments), {\r\n            fromIndex: sourceDraggable.option(\"fromIndex\"),\r\n            toIndex: this._normalizeToIndex(targetDraggable.option(\"toIndex\"), dropInsideItem),\r\n            dropInsideItem: dropInsideItem\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"onDragChange\":\r\n            case \"onPlaceholderPrepared\":\r\n            case \"onAdd\":\r\n            case \"onRemove\":\r\n            case \"onReorder\":\r\n                this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\r\n                break;\r\n            case \"itemOrientation\":\r\n            case \"allowDropInsideItem\":\r\n            case \"moveItemOnDrop\":\r\n            case \"dropFeedbackMode\":\r\n            case \"itemPoints\":\r\n            case \"animation\":\r\n            case \"allowReordering\":\r\n            case \"fromIndexOffset\":\r\n            case \"offset\":\r\n            case \"draggableElementSize\":\r\n            case \"autoUpdate\":\r\n                break;\r\n            case \"fromIndex\":\r\n                [false, true].forEach(isDragSource => {\r\n                    var fromIndex = isDragSource ? args.value : args.previousValue;\r\n                    if (null !== fromIndex) {\r\n                        var $fromElement = $(this._getItems()[fromIndex]);\r\n                        this._toggleDragSourceClass(isDragSource, $fromElement)\r\n                    }\r\n                });\r\n                break;\r\n            case \"dropInsideItem\":\r\n                this._optionChangedDropInsideItem(args);\r\n                break;\r\n            case \"toIndex\":\r\n                this._optionChangedToIndex(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _optionChangedDropInsideItem: function() {\r\n        if (this._isIndicateMode() && this._$placeholderElement) {\r\n            this._movePlaceholder()\r\n        }\r\n    },\r\n    _isPositionVisible: function(position) {\r\n        var $element = this.$element();\r\n        var scrollContainer;\r\n        if (\"hidden\" !== $element.css(\"overflow\")) {\r\n            scrollContainer = $element.get(0)\r\n        } else {\r\n            $element.parents().each((function() {\r\n                if (\"visible\" !== $(this).css(\"overflow\")) {\r\n                    scrollContainer = this;\r\n                    return false\r\n                }\r\n            }))\r\n        }\r\n        if (scrollContainer) {\r\n            var clientRect = getBoundingRect(scrollContainer);\r\n            var isVerticalOrientation = this._isVerticalOrientation();\r\n            var start = isVerticalOrientation ? \"top\" : \"left\";\r\n            var end = isVerticalOrientation ? \"bottom\" : \"right\";\r\n            var pageOffset = isVerticalOrientation ? window.pageYOffset : window.pageXOffset;\r\n            if (position[start] < clientRect[start] + pageOffset || position[start] > clientRect[end] + pageOffset) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _optionChangedToIndex: function(args) {\r\n        var toIndex = args.value;\r\n        if (this._isIndicateMode()) {\r\n            var showPlaceholder = null !== toIndex && toIndex >= 0;\r\n            this._togglePlaceholder(showPlaceholder);\r\n            if (showPlaceholder) {\r\n                this._movePlaceholder()\r\n            }\r\n        } else {\r\n            this._moveItems(args.previousValue, args.value, args.fullUpdate)\r\n        }\r\n    },\r\n    update: function() {\r\n        if (null === this.option(\"fromIndex\") && null === this.option(\"toIndex\")) {\r\n            return\r\n        }\r\n        this._updateItemPoints(true);\r\n        this._updateDragSourceClass();\r\n        var toIndex = this.option(\"toIndex\");\r\n        this._optionChangedToIndex({\r\n            value: toIndex,\r\n            fullUpdate: true\r\n        })\r\n    },\r\n    _updateDragSourceClass: function() {\r\n        var fromIndex = this._getActualFromIndex();\r\n        var $fromElement = $(this._getItems()[fromIndex]);\r\n        if ($fromElement.length) {\r\n            this._$sourceElement = $fromElement;\r\n            this._toggleDragSourceClass(true, $fromElement)\r\n        }\r\n    },\r\n    _makeLeftCorrection: function(left, leftMargin) {\r\n        var $scrollable = this._$scrollable;\r\n        if ($scrollable && this._isVerticalOrientation() && $scrollable.scrollLeft() > leftMargin) {\r\n            left += $scrollable.scrollLeft() - leftMargin\r\n        }\r\n        return left\r\n    },\r\n    _movePlaceholder: function() {\r\n        var $placeholderElement = this._$placeholderElement || this._createPlaceholder();\r\n        if (!$placeholderElement) {\r\n            return\r\n        }\r\n        var items = this._getItems();\r\n        var toIndex = this.option(\"toIndex\");\r\n        var isVerticalOrientation = this._isVerticalOrientation();\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var dropInsideItem = this.option(\"dropInsideItem\");\r\n        var position = null;\r\n        var leftMargin = 0;\r\n        var itemElement = items[toIndex];\r\n        if (itemElement) {\r\n            var $itemElement = $(itemElement);\r\n            position = $itemElement.offset();\r\n            leftMargin = parseFloat($itemElement.css(\"marginLeft\"));\r\n            if (!isVerticalOrientation && rtlEnabled && !dropInsideItem) {\r\n                position.left += getOuterWidth($itemElement, true)\r\n            }\r\n        } else {\r\n            var prevVisibleItemElement = itemElement = this._getPrevVisibleItem(items, toIndex);\r\n            if (prevVisibleItemElement) {\r\n                position = $(prevVisibleItemElement).offset();\r\n                if (isVerticalOrientation) {\r\n                    position.top += getOuterHeight(prevVisibleItemElement, true)\r\n                } else if (!rtlEnabled) {\r\n                    position.left += getOuterWidth(prevVisibleItemElement, true)\r\n                }\r\n            }\r\n        }\r\n        this._updatePlaceholderSizes($placeholderElement, itemElement);\r\n        if (position && !this._isPositionVisible(position)) {\r\n            position = null\r\n        }\r\n        if (position) {\r\n            position.left = this._makeLeftCorrection(position.left, leftMargin);\r\n            this._move(position, $placeholderElement)\r\n        }\r\n        $placeholderElement.toggle(!!position)\r\n    },\r\n    _getPositions: function(items, elementSize, fromIndex, toIndex) {\r\n        var positions = [];\r\n        for (var i = 0; i < items.length; i++) {\r\n            var position = 0;\r\n            if (null === toIndex || null === fromIndex) {\r\n                positions.push(position);\r\n                continue\r\n            }\r\n            if (-1 === fromIndex) {\r\n                if (i >= toIndex) {\r\n                    position = elementSize\r\n                }\r\n            } else if (-1 === toIndex) {\r\n                if (i > fromIndex) {\r\n                    position = -elementSize\r\n                }\r\n            } else if (fromIndex < toIndex) {\r\n                if (i > fromIndex && i < toIndex) {\r\n                    position = -elementSize\r\n                }\r\n            } else if (fromIndex > toIndex) {\r\n                if (i >= toIndex && i < fromIndex) {\r\n                    position = elementSize\r\n                }\r\n            }\r\n            positions.push(position)\r\n        }\r\n        return positions\r\n    },\r\n    _getDraggableElementSize: function(isVerticalOrientation) {\r\n        var $draggableItem = this._getDraggableElement();\r\n        var size = this.option(\"draggableElementSize\");\r\n        if (!size) {\r\n            size = isVerticalOrientation ? (getOuterHeight($draggableItem) + getOuterHeight($draggableItem, true)) / 2 : (getOuterWidth($draggableItem) + getOuterWidth($draggableItem, true)) / 2;\r\n            if (!this.option(\"autoUpdate\")) {\r\n                this.option(\"draggableElementSize\", size)\r\n            }\r\n        }\r\n        return size\r\n    },\r\n    _getActualFromIndex: function() {\r\n        var {\r\n            fromIndex: fromIndex,\r\n            fromIndexOffset: fromIndexOffset,\r\n            offset: offset\r\n        } = this.option();\r\n        return null == fromIndex ? null : fromIndex + fromIndexOffset - offset\r\n    },\r\n    _moveItems: function(prevToIndex, toIndex, fullUpdate) {\r\n        var fromIndex = this._getActualFromIndex();\r\n        var isVerticalOrientation = this._isVerticalOrientation();\r\n        var positionPropName = isVerticalOrientation ? \"top\" : \"left\";\r\n        var elementSize = this._getDraggableElementSize(isVerticalOrientation);\r\n        var items = this._getItems();\r\n        var prevPositions = this._getPositions(items, elementSize, fromIndex, prevToIndex);\r\n        var positions = this._getPositions(items, elementSize, fromIndex, toIndex);\r\n        var animationConfig = this.option(\"animation\");\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        for (var i = 0; i < items.length; i++) {\r\n            var itemElement = items[i];\r\n            var prevPosition = prevPositions[i];\r\n            var position = positions[i];\r\n            if (null === toIndex || null === fromIndex) {\r\n                stopAnimation(itemElement)\r\n            } else if (prevPosition !== position || fullUpdate && position) {\r\n                animate(itemElement, extend({}, animationConfig, {\r\n                    to: {\r\n                        [positionPropName]: !isVerticalOrientation && rtlEnabled ? -position : position\r\n                    }\r\n                }))\r\n            }\r\n        }\r\n    },\r\n    _toggleDragSourceClass: function(value, $element) {\r\n        var $sourceElement = $element || this._$sourceElement;\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._isIndicateMode()) {\r\n            $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix(\"source-hidden\"), value)\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        this.reset();\r\n        this.callBase()\r\n    },\r\n    _fireAddEvent: function(sourceEvent) {\r\n        var args = this._getEventArgs(sourceEvent);\r\n        this._getAction(\"onAdd\")(args);\r\n        return args.cancel\r\n    },\r\n    _fireRemoveEvent: function(sourceEvent) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var args = this._getEventArgs(sourceEvent);\r\n        sourceDraggable._getAction(\"onRemove\")(args);\r\n        return args.cancel\r\n    },\r\n    _fireReorderEvent: function(sourceEvent) {\r\n        var args = this._getEventArgs(sourceEvent);\r\n        this._getAction(\"onReorder\")(args);\r\n        return args.promise || (new Deferred).resolve()\r\n    }\r\n});\r\nregisterComponent(SORTABLE, Sortable);\r\nexport default Sortable;\r\n"]},"metadata":{},"sourceType":"module"}