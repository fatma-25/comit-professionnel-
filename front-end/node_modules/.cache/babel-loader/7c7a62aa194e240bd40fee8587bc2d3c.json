{"ast":null,"code":"var _jsxFileName = \"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/SideBar/SideBar.component.jsx\",\n    _s = $RefreshSig$();\n\n// import React from 'react';\n// import { Menu } from 'semantic-ui-react';\n// import UserInfo from \"./UserInfo/UserInfo.component\";\n// import Channels from \"./Channels/Channels.component\";\n// import PrivateChat from \"./PrivateChat/PrivateChat.component\";\n// import FavouriteChannels from \"./FavouriteChannels/FavouriteChannels.component\";\n// import { Link, useHistory } from \"react-router-dom\";\n// // import { Nav, Navbar, Container, Button } from \"react-bootstrap\";\n// import \"./SideBar.css\";\n// export const SideBar = () => {\n//     return (<Menu vertical fixed=\"left\" borderless size=\"large\" className=\"side_bar\">\n//         <UserInfo />\n//         <FavouriteChannels />\n//         <Channels /> \n//         <PrivateChat />\n//   <div style={{display:\"flex\", flexDirection:\"column\"}}>\n//         <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/calendar\"\n//               >\n//                Calendar\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/listcontact\"\n//               >\n//                 List Contact\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/upload\"\n//               >\n//                 Upload\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/shared\"\n//               >\n//                 Shared Document\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/edit\"\n//               >\n//                 Edit Profile\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/ApprouveUser\"\n//               >\n//                 ApprouveUser\n//               </Link>\n//    </div>\n//     </Menu>\n//     )\n// }\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\"; // import firebase from \"../../server/firebase\";\n\nimport firebase from \"../../server/firebase\";\nimport { Menu } from 'semantic-ui-react';\nimport UserInfo from \"./UserInfo/UserInfo.component\";\nimport Channels from \"./Channels/Channels.component\";\nimport PrivateChat from \"./PrivateChat/PrivateChat.component\";\nimport FavouriteChannels from \"./FavouriteChannels/FavouriteChannels.component\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport store from '../../index'; // import { Nav, Navbar, Container, Button } from \"react-bootstrap\";\n\nimport \"./SideBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SideBar = props => {\n  _s();\n\n  // if (!props.user) {\n  const [usersState, setUsersState] = useState([]);\n  const usersRef = firebase.database().ref(\"users\");\n  useEffect(() => {\n    usersRef.on(\"child_added\", snap => {\n      setUsersState(currentState => {\n        let updatedState = [...currentState];\n        let user = snap.val();\n        user.name = user.displayName;\n        user.email = user.email;\n        user.id = snap.key;\n        user.isPrivateChat = true;\n        updatedState.push(user);\n        return updatedState;\n      });\n    }); // connectedRef.on(\"value\", (snap) => {\n    //   if (props.user && snap.val()) {\n    //     const userStatusRef = statusRef.child(props.user.uid);\n    //     userStatusRef.set(true);\n    //     userStatusRef.onDisconnect().remove();\n    //   }\n  }); //     return (\n  //  <Menu vertical fixed=\"left\" borderless size=\"large\" className=\"side_bar\">\n  //         <UserInfo />\n  //         <FavouriteChannels />\n  //        <Channels /> \n  //         <PrivateChat />\n  //   <div style={{display:\"flex\", flexDirection:\"column\"}}>\n  //         <Link\n  //                 style={{ color: \"white\", textDecoration: \"none\" }}\n  //                 to=\"/calendar\"\n  //               >\n  //                Calendar\n  //               </Link>\n  //               <Link\n  //                 style={{ color: \"white\", textDecoration: \"none\" }}\n  //                 to=\"/listcontact\"\n  //               >\n  //                 List Contact\n  //               </Link>\n  //               <Link\n  //                 style={{ color: \"white\", textDecoration: \"none\" }}\n  //                 to=\"/upload\"\n  //               >\n  //                 Upload\n  //               </Link>\n  //               <Link\n  //                 style={{ color: \"white\", textDecoration: \"none\" }}\n  //                 to=\"/shared\"\n  //               >\n  //                 Shared Document\n  //               </Link>\n  //               <Link\n  //                 style={{ color: \"white\", textDecoration: \"none\" }}\n  //                 to=\"/edit\"\n  //               >\n  //                 Edit Profile\n  //               </Link>\n  //               <Link\n  //                 style={{ color: \"white\", textDecoration: \"none\" }}\n  //                 to=\"/ApprouveUser\"\n  //               >\n  //                 ApprouveUser\n  //               </Link>\n  //               <div>{console.log(store.getState().user.currentUser?.account,'rrrrrrr')}</div>\n  //    </div>\n  //     </Menu>\n  //     )\n\n  const displayUsers = () => {\n    if (usersState.length > 0) {\n      return usersState.filter(user => user.id !== props.user.uid).map(user => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-around\",\n            marginBottom: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [console.log(user, \"uuuuusre\"), user.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn btn-link\",\n            onClick: () => {\n              alert(` user approved`);\n              const accountStatus = usersRef.child(user.id);\n              accountStatus.update({\n                status: true\n              }); // axios.put(`http://localhost:2000/api/auth/${user._id}`, {\n              //   account: true,\n              // });\n            },\n            children: \"approuve user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: displayUsers()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 8\n  }, this);\n};\n\n_s(SideBar, \"sithAN8W7lJ0dG4RmYUGeiHj80k=\");\n\n_c = SideBar;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.currentUser\n  };\n};\n\nconnect(mapStateToProps)(SideBar);\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/SideBar/SideBar.component.jsx"],"names":["React","useState","useEffect","connect","firebase","Menu","UserInfo","Channels","PrivateChat","FavouriteChannels","Link","useHistory","store","SideBar","props","usersState","setUsersState","usersRef","database","ref","on","snap","currentState","updatedState","user","val","name","displayName","email","id","key","isPrivateChat","push","displayUsers","length","filter","uid","map","display","justifyContent","marginBottom","console","log","alert","accountStatus","child","update","status","mapStateToProps","state","currentUser"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import { Menu } from 'semantic-ui-react';\n// import UserInfo from \"./UserInfo/UserInfo.component\";\n// import Channels from \"./Channels/Channels.component\";\n// import PrivateChat from \"./PrivateChat/PrivateChat.component\";\n// import FavouriteChannels from \"./FavouriteChannels/FavouriteChannels.component\";\n// import { Link, useHistory } from \"react-router-dom\";\n// // import { Nav, Navbar, Container, Button } from \"react-bootstrap\";\n// import \"./SideBar.css\";\n\n// export const SideBar = () => {\n//     return (<Menu vertical fixed=\"left\" borderless size=\"large\" className=\"side_bar\">\n//         <UserInfo />\n//         <FavouriteChannels />\n//         <Channels /> \n//         <PrivateChat />\n//   <div style={{display:\"flex\", flexDirection:\"column\"}}>\n//         <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/calendar\"\n//               >\n//                Calendar\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/listcontact\"\n//               >\n//                 List Contact\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/upload\"\n//               >\n//                 Upload\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/shared\"\n//               >\n//                 Shared Document\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/edit\"\n//               >\n//                 Edit Profile\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/ApprouveUser\"\n//               >\n//                 ApprouveUser\n//               </Link>\n//    </div>\n//     </Menu>\n//     )\n// }\n\n\n\n\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n// import firebase from \"../../server/firebase\";\nimport firebase from \"../../server/firebase\";\n\nimport { Menu } from 'semantic-ui-react';\nimport UserInfo from \"./UserInfo/UserInfo.component\";\nimport Channels from \"./Channels/Channels.component\";\nimport PrivateChat from \"./PrivateChat/PrivateChat.component\";\nimport FavouriteChannels from \"./FavouriteChannels/FavouriteChannels.component\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport store from '../../index'\n// import { Nav, Navbar, Container, Button } from \"react-bootstrap\";\nimport \"./SideBar.css\";\n\nexport const SideBar = (props) => {\n  // if (!props.user) {\n    const [usersState, setUsersState] = useState([]);\n    const usersRef = firebase.database().ref(\"users\");\n    useEffect(() => {\n      usersRef.on(\"child_added\", (snap) => {\n        setUsersState((currentState) => {\n          let updatedState = [...currentState];\n  \n          let user = snap.val();\n          user.name = user.displayName;\n          user.email = user.email;\n          user.id = snap.key;\n          user.isPrivateChat = true;\n          updatedState.push(user);\n  \n          return updatedState;\n        });\n      });\n  \n      // connectedRef.on(\"value\", (snap) => {\n      //   if (props.user && snap.val()) {\n      //     const userStatusRef = statusRef.child(props.user.uid);\n      //     userStatusRef.set(true);\n      //     userStatusRef.onDisconnect().remove();\n      //   }\n      });\n//     return (\n \n//  <Menu vertical fixed=\"left\" borderless size=\"large\" className=\"side_bar\">\n//         <UserInfo />\n//         <FavouriteChannels />\n//        <Channels /> \n//         <PrivateChat />\n//   <div style={{display:\"flex\", flexDirection:\"column\"}}>\n//         <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/calendar\"\n//               >\n//                Calendar\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/listcontact\"\n//               >\n//                 List Contact\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/upload\"\n//               >\n//                 Upload\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/shared\"\n//               >\n//                 Shared Document\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/edit\"\n//               >\n//                 Edit Profile\n//               </Link>\n//               <Link\n//                 style={{ color: \"white\", textDecoration: \"none\" }}\n//                 to=\"/ApprouveUser\"\n//               >\n//                 ApprouveUser\n//               </Link>\n//               <div>{console.log(store.getState().user.currentUser?.account,'rrrrrrr')}</div>\n//    </div>\n//     </Menu>\n//     )\n\nconst displayUsers = () => {\n  if (usersState.length > 0) {\n    return usersState\n      .filter((user) => user.id !== props.user.uid)\n      .map((user) => {\n        return (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              marginBottom: 20,\n            }}\n          >\n            <div>\n              {console.log(user, \"uuuuusre\")}\n              {user.name}\n            </div>\n            <div>\n              {/* {user.name}@SoftCommunity.com */}\n              {user.email}\n            </div>\n            <button\n              type=\"button\"\n              class=\"btn btn-link\"\n              onClick={() => {\n                alert(` user approved`);\n\n                const accountStatus = usersRef.child(user.id);\n\n                accountStatus.update({ status: true });\n                // axios.put(`http://localhost:2000/api/auth/${user._id}`, {\n                //   account: true,\n                // });\n              }}\n            >\n              approuve user\n            </button>\n          </div>\n        );\n      });\n  }\n};\n\nreturn <div>{displayUsers()}</div>;\n\n\n}\n\nconst mapStateToProps = (state) => {\nreturn {\n    user: state.user.currentUser\n}\n}\n\nconnect(mapStateToProps)(SideBar);"]},"metadata":{},"sourceType":"module"}