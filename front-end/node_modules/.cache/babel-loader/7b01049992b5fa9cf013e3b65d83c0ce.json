{"ast":null,"code":"var _jsxFileName = \"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/auth/registerModal.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { registerHandler } from \"../../redux/action/auth-action\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Example() {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [name, setname] = useState(\"\");\n  const [lastName, setlastName] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => {\n    setShow(true);\n    localStorage.clear();\n  };\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const registerUser = e => {\n    e.preventDefault();\n    const newUser = {\n      name,\n      lastName,\n      email,\n      password,\n      status,\n      account\n    };\n    dispatch(registerHandler(newUser));\n    history.push(\"/dashboard\");\n    setname(\"\");\n    setlastName(\"\");\n    setemail(\"\");\n    setpassword(\"\");\n    setStatus(\"\");\n    handleClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        backgroundColor: \"#1ABEEA\"\n      },\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"SignUp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter your name\",\n              onChange: e => setname(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter your last name \",\n              onChange: e => setlastName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\",\n              onChange: e => {\n                setemail(e.target.value);\n\n                if (email.includes(\"admin\")) {\n                  setStatus(\"admin\");\n                  setAccount(\"true\");\n                  console.log(status, \"sta\");\n                } else {\n                  setStatus(\"user\");\n                  setAccount(\"false\");\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"We'll never share your email with anyone else.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Password\",\n              onChange: e => setpassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            style: {\n              backgroundColor: \"#00AAEE\"\n            },\n            type: \"submit\",\n            onClick: registerUser,\n            text: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Example, \"HAtx0zEC/rtWoglcvb7F2Dwbuaw=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = Example;\n\nvar _c;\n\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/auth/registerModal.js"],"names":["React","Modal","Button","Form","useDispatch","useState","registerHandler","useHistory","Example","show","setShow","name","setname","lastName","setlastName","email","setemail","password","setpassword","status","setStatus","account","setAccount","handleClose","handleShow","localStorage","clear","history","dispatch","registerUser","e","preventDefault","newUser","push","backgroundColor","target","value","includes","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { registerHandler } from \"../../redux/action/auth-action\";\nimport { useHistory } from \"react-router\";\nexport default function Example() {\n  const [show, setShow] = useState(false);\n  const [name, setname] = useState(\"\");\n  const [lastName, setlastName] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n  const handleClose = () => setShow(false);\n  const handleShow = () => {\n    setShow(true);\n    localStorage.clear();\n  };\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const registerUser = (e) => {\n    e.preventDefault();\n    const newUser = { name, lastName, email, password, status, account };\n    dispatch(registerHandler(newUser));\n    history.push(\"/dashboard\");\n    setname(\"\");\n    setlastName(\"\");\n    setemail(\"\");\n    setpassword(\"\");\n    setStatus(\"\");\n    handleClose();\n  };\n  return (\n    <>\n      <Button\n        style={{ backgroundColor: \"#1ABEEA\" }}\n        variant=\"primary\"\n        onClick={handleShow}\n      >\n        SignUp\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Register</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {\" \"}\n          <Form>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your name\"\n                onChange={(e) => setname(e.target.value)}\n              />\n              <Form.Label>Last Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your last name \"\n                onChange={(e) => setlastName(e.target.value)}\n              />\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                onChange={(e) => {\n                  setemail(e.target.value);\n                  if (email.includes(\"admin\")) {\n                    setStatus(\"admin\");\n                    setAccount(\"true\");\n                    console.log(status, \"sta\");\n                  } else {\n                    setStatus(\"user\");\n                    setAccount(\"false\");\n                  }\n                }}\n              />\n              <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={(e) => setpassword(e.target.value)}\n              />\n            </Form.Group>\n\n            <Button\n              variant=\"primary\"\n              style={{ backgroundColor: \"#00AAEE\" }}\n              type=\"submit\"\n              onClick={registerUser}\n              text=\"submit\"\n            >\n              Submit\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}