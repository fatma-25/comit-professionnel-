{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/view_model/appointments/utils/getSkippedHoursInRange.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nvar getSkippedHoursInRange = (startDate, endDate, viewDataProvider) => {\n  var startTime = startDate.getTime();\n  var endTime = endDate.getTime();\n  var excludedHours = 0;\n\n  for (var time = startTime; time <= endTime; time += 864e5) {\n    var checkDate = new Date(time);\n\n    if (viewDataProvider.isSkippedDate(checkDate)) {\n      excludedHours += 24;\n    }\n  }\n\n  return excludedHours;\n};\n\nexport default getSkippedHoursInRange;","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/node_modules/devextreme/esm/renovation/ui/scheduler/view_model/appointments/utils/getSkippedHoursInRange.js"],"names":["getSkippedHoursInRange","startDate","endDate","viewDataProvider","startTime","getTime","endTime","excludedHours","time","checkDate","Date","isSkippedDate"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,sBAAsB,GAAG,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,gBAArB,KAA0C;AACnE,MAAIC,SAAS,GAAGH,SAAS,CAACI,OAAV,EAAhB;AACA,MAAIC,OAAO,GAAGJ,OAAO,CAACG,OAAR,EAAd;AACA,MAAIE,aAAa,GAAG,CAApB;;AACA,OAAK,IAAIC,IAAI,GAAGJ,SAAhB,EAA2BI,IAAI,IAAIF,OAAnC,EAA4CE,IAAI,IAAI,KAApD,EAA2D;AACvD,QAAIC,SAAS,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAhB;;AACA,QAAIL,gBAAgB,CAACQ,aAAjB,CAA+BF,SAA/B,CAAJ,EAA+C;AAC3CF,MAAAA,aAAa,IAAI,EAAjB;AACH;AACJ;;AACD,SAAOA,aAAP;AACH,CAXD;;AAYA,eAAeP,sBAAf","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/view_model/appointments/utils/getSkippedHoursInRange.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nvar getSkippedHoursInRange = (startDate, endDate, viewDataProvider) => {\r\n    var startTime = startDate.getTime();\r\n    var endTime = endDate.getTime();\r\n    var excludedHours = 0;\r\n    for (var time = startTime; time <= endTime; time += 864e5) {\r\n        var checkDate = new Date(time);\r\n        if (viewDataProvider.isSkippedDate(checkDate)) {\r\n            excludedHours += 24\r\n        }\r\n    }\r\n    return excludedHours\r\n};\r\nexport default getSkippedHoursInRange;\r\n"]},"metadata":{},"sourceType":"module"}