{"ast":null,"code":"var _jsxFileName = \"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/ReadAndDownold.js\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ReadAndDownold extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      url: \"\"\n    };\n\n    this.viewHandler = async () => {\n      axios({\n        url: \"http://localhost:2000/pdf\",\n        method: \"GET\",\n        responseType: \"blob\" // important\n\n      }).then(response => {\n        this.setState({\n          url: window.URL.createObjectURL(new Blob([response.data], {\n            type: \"application/pdf\"\n          }))\n        });\n        const url = window.URL.createObjectURL(new Blob([response.data], {\n          type: \"application/pdf\"\n        }));\n        window.open(url);\n      });\n    };\n\n    this.download = () => {\n      const link = document.createElement(\"a\");\n      link.href = this.state.url;\n      link.setAttribute(\"download\", \"file.pdf\");\n      document.body.appendChild(link);\n      link.click();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.viewHandler,\n        children: \" View Pdf \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.download,\n        children: \"download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ReadAndDownold;","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/ReadAndDownold.js"],"names":["axios","React","Component","ReadAndDownold","state","url","viewHandler","method","responseType","then","response","setState","window","URL","createObjectURL","Blob","data","type","open","download","link","document","createElement","href","setAttribute","body","appendChild","click","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCE,KADqC,GAC7B;AACNC,MAAAA,GAAG,EAAE;AADC,KAD6B;;AAAA,SAKrCC,WALqC,GAKvB,YAAY;AACxBN,MAAAA,KAAK,CAAC;AACJK,QAAAA,GAAG,EAAE,2BADD;AAEJE,QAAAA,MAAM,EAAE,KAFJ;AAGJC,QAAAA,YAAY,EAAE,MAHV,CAGkB;;AAHlB,OAAD,CAAL,CAIGC,IAJH,CAISC,QAAD,IAAc;AACpB,aAAKC,QAAL,CAAc;AACZN,UAAAA,GAAG,EAAEO,MAAM,CAACC,GAAP,CAAWC,eAAX,CACH,IAAIC,IAAJ,CAAS,CAACL,QAAQ,CAACM,IAAV,CAAT,EAA0B;AAAEC,YAAAA,IAAI,EAAE;AAAR,WAA1B,CADG;AADO,SAAd;AAKA,cAAMZ,GAAG,GAAGO,MAAM,CAACC,GAAP,CAAWC,eAAX,CACV,IAAIC,IAAJ,CAAS,CAACL,QAAQ,CAACM,IAAV,CAAT,EAA0B;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAA1B,CADU,CAAZ;AAGAL,QAAAA,MAAM,CAACM,IAAP,CAAYb,GAAZ;AACD,OAdD;AAeD,KArBoC;;AAAA,SAuBrCc,QAvBqC,GAuB1B,MAAM;AACf,YAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;AACAF,MAAAA,IAAI,CAACG,IAAL,GAAY,KAAKnB,KAAL,CAAWC,GAAvB;AACAe,MAAAA,IAAI,CAACI,YAAL,CAAkB,UAAlB,EAA8B,UAA9B;AACAH,MAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,IAA1B;AACAA,MAAAA,IAAI,CAACO,KAAL;AACD,KA7BoC;AAAA;;AA+BrCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,KAAKtB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,KAAKa,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAtCoC;;AAyCvC,eAAehB,cAAf","sourcesContent":["import axios from \"axios\";\nimport React, { Component } from \"react\";\n\nclass ReadAndDownold extends Component {\n  state = {\n    url: \"\",\n  };\n\n  viewHandler = async () => {\n    axios({\n      url: \"http://localhost:2000/pdf\",\n      method: \"GET\",\n      responseType: \"blob\", // important\n    }).then((response) => {\n      this.setState({\n        url: window.URL.createObjectURL(\n          new Blob([response.data], { type: \"application/pdf\" })\n        ),\n      });\n      const url = window.URL.createObjectURL(\n        new Blob([response.data], { type: \"application/pdf\" })\n      );\n      window.open(url);\n    });\n  };\n\n  download = () => {\n    const link = document.createElement(\"a\");\n    link.href = this.state.url;\n    link.setAttribute(\"download\", \"file.pdf\");\n    document.body.appendChild(link);\n    link.click();\n  };\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.viewHandler}> View Pdf </button>\n        <button onClick={this.download}>download</button>\n      </div>\n    );\n  }\n}\n\nexport default ReadAndDownold;\n"]},"metadata":{},"sourceType":"module"}