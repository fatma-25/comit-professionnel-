{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/instanceFactory.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isDefined } from \"../../core/utils/type\";\nimport { ModelProvider } from \"./modelProvider\";\nimport { TimeZoneCalculator } from \"../../renovation/ui/scheduler/timeZoneCalculator/utils\";\nimport timeZoneUtils from \"./utils.timeZone\";\nvar Names = {\n  timeZoneCalculator: \"timeZoneCalculator\",\n  appointmentDataProvider: \"appointmentDataProvider\",\n  model: \"model\",\n  modelProvider: \"modelProvider\"\n};\nvar factoryInstances = {};\nvar tailIndex = -1;\nexport var generateKey = key => isDefined(key) ? key : ++tailIndex;\nexport var createFactoryInstances = options => {\n  var key = generateKey(options.key);\n  createModelProvider(key, options.model);\n  createTimeZoneCalculator(key, options.timeZone);\n  return key;\n};\nexport var createInstance = (name, key, callback) => {\n  if (!isDefined(factoryInstances[name])) {\n    factoryInstances[name] = {};\n  }\n\n  var result = callback();\n  factoryInstances[name][key] = result;\n  return result;\n};\n\nvar getInstance = (name, key) => factoryInstances[name] ? factoryInstances[name][key] : void 0;\n\nvar removeInstance = (name, key) => {\n  if (getInstance(name, key)) {\n    factoryInstances[name] = null;\n  }\n};\n\nvar createTimeZoneCalculator = (key, currentTimeZone) => createInstance(Names.timeZoneCalculator, key, () => new TimeZoneCalculator({\n  getClientOffset: date => timeZoneUtils.getClientTimezoneOffset(date),\n  getCommonOffset: (date, timeZone) => timeZoneUtils.calculateTimezoneByValue(timeZone || currentTimeZone, date),\n  getAppointmentOffset: (date, appointmentTimezone) => timeZoneUtils.calculateTimezoneByValue(appointmentTimezone, date)\n}));\n\nexport var createModelProvider = (key, model) => createInstance(Names.modelProvider, key, () => {\n  var modelProvider = getInstance(Names.modelProvider, key);\n  return isDefined(modelProvider) ? modelProvider : new ModelProvider(model);\n});\nexport var disposeFactoryInstances = key => {\n  Object.getOwnPropertyNames(Names).forEach(name => {\n    removeInstance(name, key);\n  });\n};\nexport var getTimeZoneCalculator = key => getInstance(Names.timeZoneCalculator, key);\nexport var getModelProvider = key => getInstance(Names.modelProvider, key);","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/node_modules/devextreme/esm/ui/scheduler/instanceFactory.js"],"names":["isDefined","ModelProvider","TimeZoneCalculator","timeZoneUtils","Names","timeZoneCalculator","appointmentDataProvider","model","modelProvider","factoryInstances","tailIndex","generateKey","key","createFactoryInstances","options","createModelProvider","createTimeZoneCalculator","timeZone","createInstance","name","callback","result","getInstance","removeInstance","currentTimeZone","getClientOffset","date","getClientTimezoneOffset","getCommonOffset","calculateTimezoneByValue","getAppointmentOffset","appointmentTimezone","disposeFactoryInstances","Object","getOwnPropertyNames","forEach","getTimeZoneCalculator","getModelProvider"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/instanceFactory.js)\r\n * Version: 21.2.4\r\n * Build date: Mon Dec 06 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    ModelProvider\r\n} from \"./modelProvider\";\r\nimport {\r\n    TimeZoneCalculator\r\n} from \"../../renovation/ui/scheduler/timeZoneCalculator/utils\";\r\nimport timeZoneUtils from \"./utils.timeZone\";\r\nvar Names = {\r\n    timeZoneCalculator: \"timeZoneCalculator\",\r\n    appointmentDataProvider: \"appointmentDataProvider\",\r\n    model: \"model\",\r\n    modelProvider: \"modelProvider\"\r\n};\r\nvar factoryInstances = {};\r\nvar tailIndex = -1;\r\nexport var generateKey = key => isDefined(key) ? key : ++tailIndex;\r\nexport var createFactoryInstances = options => {\r\n    var key = generateKey(options.key);\r\n    createModelProvider(key, options.model);\r\n    createTimeZoneCalculator(key, options.timeZone);\r\n    return key\r\n};\r\nexport var createInstance = (name, key, callback) => {\r\n    if (!isDefined(factoryInstances[name])) {\r\n        factoryInstances[name] = {}\r\n    }\r\n    var result = callback();\r\n    factoryInstances[name][key] = result;\r\n    return result\r\n};\r\nvar getInstance = (name, key) => factoryInstances[name] ? factoryInstances[name][key] : void 0;\r\nvar removeInstance = (name, key) => {\r\n    if (getInstance(name, key)) {\r\n        factoryInstances[name] = null\r\n    }\r\n};\r\nvar createTimeZoneCalculator = (key, currentTimeZone) => createInstance(Names.timeZoneCalculator, key, () => new TimeZoneCalculator({\r\n    getClientOffset: date => timeZoneUtils.getClientTimezoneOffset(date),\r\n    getCommonOffset: (date, timeZone) => timeZoneUtils.calculateTimezoneByValue(timeZone || currentTimeZone, date),\r\n    getAppointmentOffset: (date, appointmentTimezone) => timeZoneUtils.calculateTimezoneByValue(appointmentTimezone, date)\r\n}));\r\nexport var createModelProvider = (key, model) => createInstance(Names.modelProvider, key, () => {\r\n    var modelProvider = getInstance(Names.modelProvider, key);\r\n    return isDefined(modelProvider) ? modelProvider : new ModelProvider(model)\r\n});\r\nexport var disposeFactoryInstances = key => {\r\n    Object.getOwnPropertyNames(Names).forEach(name => {\r\n        removeInstance(name, key)\r\n    })\r\n};\r\nexport var getTimeZoneCalculator = key => getInstance(Names.timeZoneCalculator, key);\r\nexport var getModelProvider = key => getInstance(Names.modelProvider, key);\r\n"]},"metadata":{},"sourceType":"module"}