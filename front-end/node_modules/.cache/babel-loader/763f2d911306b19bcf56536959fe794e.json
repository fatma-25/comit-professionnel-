{"ast":null,"code":"var _jsxFileName = \"/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/EditProfile.js\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect } from \"react\";\n// import { Button, Form } from \"react-bootstrap\";\n// import { useState } from \"react\";\n// import { useHistory } from \"react-router\";\n// import axios from \"axios\";\n// const EditProfile = () => {\n//   const [data, setData] = useState([]);\n//   const [name, setname] = useState(\"\");\n//   const [lastName, setlastName] = useState(\"\");\n//   const [email, setemail] = useState(\"\");\n//   const history = useHistory();\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const userId = localStorage.getItem(\"id\");\n//       const result = await axios(`http://localhost:2000/api/auth/${userId}`);\n//       console.log(result.data, \"useerrr\");\n//       setData(result.data);\n//     };\n//     fetchData();\n//   }, []);\n//   return (\n//     <>\n//       <section id=\"cover\" class=\"min-vh-100\">\n//         <div id=\"cover-caption\" style={{ marginTop: \"100px\" }}>\n//           <div class=\"container\">\n//             <div class=\"row text-white\">\n//               <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\n//                 <div class=\"px-2\">\n//                   <Form>\n//                     <Form.Group controlId=\"formBasicEmail\">\n//                       <Form.Label className=\"itemlabel\">Name</Form.Label>\n//                       <Form.Control\n//                         className=\"itemStyle\"\n//                         type=\"name\"\n//                         placeholder={data.name}\n//                         name=\"name\"\n//                         value={name}\n//                         onChange={(e) => setname(e.target.value)}\n//                       />\n//                     </Form.Group>\n//                     <Form.Group controlId=\"formBasicPassword\">\n//                       <Form.Label className=\"itemlabel\">lastName</Form.Label>\n//                       <Form.Control\n//                         type=\"lastName\"\n//                         placeholder={data.lastName}\n//                         name=\"lastName\"\n//                         value={lastName}\n//                         className=\"itemStyle\"\n//                         onChange={(e) => setlastName(e.target.value)}\n//                       />\n//                     </Form.Group>\n//                     <Form.Group controlId=\"formBasicPassword\">\n//                       <Form.Label className=\"itemlabel\">Email</Form.Label>\n//                       <Form.Control\n//                         type=\"email\"\n//                         placeholder={data.email}\n//                         name=\"email\"\n//                         value={email}\n//                         className=\"itemStyle\"\n//                         onChange={(e) => setemail(e.target.value)}\n//                       />\n//                     </Form.Group>\n//                     <div\n//                       style={{\n//                         justifyContent: \"space-between\",\n//                         padding: \"5% 14%\",\n//                       }}\n//                     >\n//                       <Button\n//                         className=\"buttonStyle\"\n//                         variant=\"primary\"\n//                         type=\"submit\"\n//                         style={{ backgroundColor: \"#00AAEE\" }}\n//                         onClick={() =>\n//                           //  UpdateUser()\n//                           {\n//                             const editUser = { name, lastName, email };\n//                             console.log(editUser, \"editUser\");\n//                             const userId = localStorage.getItem(\"id\");\n//                             axios.put(\n//                               `http://localhost:2000/api/auth/${userId}`,\n//                               editUser\n//                             );\n//                             alert(\"edit user profile with success\");\n//                           }\n//                         }\n//                       >\n//                         Submit\n//                       </Button>\n//                     </div>\n//                   </Form>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </section>\n//     </>\n//   );\n// };\n// export default EditProfile;\n//************* */\n// import React, { useState } from \"react\";\n// // import { Grid, Header, Icon, Image, Dropdown } from \"semantic-ui-react\";\n// import { connect } from \"react-redux\";\n// // import firebase from \"../../../server/firebase\";\n// import { Button, Form } from \"react-bootstrap\";\n// // import \"./UserInfo.css\";\n// import firebase from \"../../server/firebase\";\n// const UserInfo = (props) => {\n//   const usersRef = firebase.database().ref(\"users\");\n//   const [name, setname] = useState(\"\");\n//   const [lastName, setlastName] = useState(\"\");\n//   const [email, setemail] = useState(\"\");\n//   if (props.user) {\n//     return (\n//       // <Grid>\n//       //     <Grid.Column>\n//       //         <Grid.Row className=\"userinfo_grid_row\">\n//       //             <Header inverted as=\"h2\">\n//       //                 {/* <Icon name=\"slack\" /> */}\n//       //                 <Header.Content>Soft Community</Header.Content>\n//       //             </Header>\n//       //             <Header className=\"userinfo_displayname\" inverted as=\"h4\">\n//       //                 <Dropdown\n//       //                     trigger={\n//       //                         <span>\n//       //                             {props.user.displayName}\n//       //                         </span>\n//       //                     }\n//       //                     options={getDropDownOptions()}\n//       //                 >\n//       //                 </Dropdown>\n//       //             </Header>\n//       //         </Grid.Row>\n//       //     </Grid.Column>\n//       // </Grid>\n//       <>\n//         <section id=\"cover\" class=\"min-vh-100\">\n//           <div id=\"cover-caption\" style={{ marginTop: \"100px\" }}>\n//             <div class=\"container\">\n//               <div class=\"row text-white\">\n//                 <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\n//                   <div class=\"px-2\">\n//                     <Form>\n//                       <Form.Group controlId=\"formBasicEmail\">\n//                         <Form.Label className=\"itemlabel\">Name</Form.Label>\n//                         <Form.Control\n//                           className=\"itemStyle\"\n//                           type=\"name\"\n//                           placeholder={props.user.displayName}\n//                           name=\"name\"\n//                           value={name}\n//                           onChange={(e) => setname(e.target.value)}\n//                         />\n//                       </Form.Group>\n//                       <Form.Group controlId=\"formBasicPassword\">\n//                         <Form.Label className=\"itemlabel\">lastName</Form.Label>\n//                         <Form.Control\n//                           type=\"lastName\"\n//                           placeholder={props.user.displayName}\n//                           name=\"lastName\"\n//                           value={lastName}\n//                           className=\"itemStyle\"\n//                           onChange={(e) => setlastName(e.target.value)}\n//                         />\n//                       </Form.Group>\n//                       <Form.Group controlId=\"formBasicPassword\">\n//                         <Form.Label className=\"itemlabel\">Email</Form.Label>\n//                         <Form.Control\n//                           type=\"email\"\n//                           placeholder={props.user.email}\n//                           name=\"email\"\n//                           value={email}\n//                           className=\"itemStyle\"\n//                           onChange={(e) => setemail(e.target.value)}\n//                         />\n//                       </Form.Group>\n//                       <div\n//                         style={{\n//                           justifyContent: \"space-between\",\n//                           padding: \"5% 14%\",\n//                         }}\n//                       >\n//                         {console.log(props.user.uid, \"ttfdbn\")}\n//                         <Button\n//                           className=\"buttonStyle\"\n//                           variant=\"primary\"\n//                           type=\"submit\"\n//                           style={{ backgroundColor: \"#00AAEE\" }}\n//                           onClick={(id = props.user.uid) =>\n//                             //  UpdateUser()\n//                             {\n//                               // console.log(editUser, \"editUser\");\n//                               // const userId = localStorage.getItem(\"id\");\n//                               // axios.put(\n//                               //   `http://localhost:2000/api/auth/${userId}`,\n//                               //   editUser\n//                               // );\n//                               {\n//                                 console.log(id, \"yyyy\");\n//                               }\n//                               const accountStatus = usersRef.child(id);\n//                               accountStatus.update({\n//                                 email: email,\n//                                 displayName: name,\n//                               });\n//                               alert(\"edit user profile with success\");\n//                             }\n//                           }\n//                         >\n//                           Submit\n//                         </Button>\n//                       </div>\n//                     </Form>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </section>\n//       </>\n//     );\n//   }\n//   return null;\n// };\n// const mapStateToProps = (state) => {\n//   return {\n//     user: state.user.currentUser,\n//   };\n// };\n// export default connect(mapStateToProps)(UserInfo);\n//*************$ */\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\"; // import firebase from \"../../server/firebase\";\n\nimport firebase from \"../../server/firebase\"; // import { Button, Form } from \"react-bootstrap\";\n\nimport store from \"../../index\"; // import { Nav, Navbar, Container, Button } from \"react-bootstrap\";\n\nimport { Menu, Icon, Modal, Button, Form, Segment } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditProfile = props => {\n  _s();\n\n  const [usersState, setUsersState] = useState([]);\n  const [modalOpenState, setModalOpenState] = useState(false);\n  const [connectedUsersState, setConnectedUsersState] = useState([]);\n  const usersRef = firebase.database().ref(\"users\");\n  const connectedRef = firebase.database().ref(\".info/connected\");\n  const statusRef = firebase.database().ref(\"status\");\n  const [name, setname] = useState(\"\");\n  const [lastName, setlastName] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n\n  const openModal = () => {\n    setModalOpenState(true);\n  };\n\n  const closeModal = () => {\n    setModalOpenState(false);\n  };\n\n  useEffect(() => {\n    usersRef.on(\"child_added\", snap => {\n      setUsersState(currentState => {\n        let updatedState = [...currentState];\n        let user = snap.val();\n        user.name = user.displayName;\n        user.email = user.email;\n        user.status = user.status;\n        user.id = snap.key;\n        user.isPrivateChat = true;\n        updatedState.push(user);\n        return updatedState;\n      });\n    });\n    connectedRef.on(\"value\", snap => {\n      if (props.user && snap.val()) {\n        const userStatusRef = statusRef.child(props.user.uid);\n        userStatusRef.set(true);\n        userStatusRef.onDisconnect().remove();\n      }\n    });\n    return () => {\n      usersRef.off();\n      connectedRef.off();\n    };\n  }, [props.user]);\n  useEffect(() => {\n    statusRef.on(\"child_added\", snap => {\n      setConnectedUsersState(currentState => {\n        let updatedState = [...currentState];\n        updatedState.push(snap.key);\n        return updatedState;\n      });\n    });\n    statusRef.on(\"child_removed\", snap => {\n      setConnectedUsersState(currentState => {\n        let updatedState = [...currentState];\n        let index = updatedState.indexOf(snap.key);\n        updatedState.splice(index, 1);\n        return updatedState;\n      });\n    });\n    return () => statusRef.off();\n  }, [usersState]);\n\n  const displayUser = () => {\n    if (usersState.length > 0) {\n      return usersState.filter(user => user.id === store.getState().user.currentUser.uid).map(user => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Menu.Menu, {\n            style: {\n              marginTop: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Menu.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"clickable\",\n                style: {\n                  fontSize: 16\n                },\n                onClick: openModal,\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 21\n                }, this), \" EditProfile\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            open: modalOpenState,\n            onClose: closeModal,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              children: \"EditProfile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n              children: /*#__PURE__*/_jsxDEV(Form // onSubmit={onSubmit}\n              , {\n                children: /*#__PURE__*/_jsxDEV(Segment, {\n                  stacked: true,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n                    name: \"name\" // value={channelAddState.name}\n                    // onChange={handleInput}\n                    ,\n                    type: \"text\",\n                    placeholder: user.displayName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                    name: \"description\" // value={channelAddState.description}\n                    // onChange={handleInput}\n                    ,\n                    type: \"text\" // placeholder=\"Email\"\n                    ,\n                    placeholder: user.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n              children: [/*#__PURE__*/_jsxDEV(Button // loading={isLoadingState}\n              , {\n                onClick: () => {\n                  const accountStatus = usersRef.child(id);\n                  accountStatus.update({\n                    email: \"test55@gmail.com\",\n                    displayName: \"test55\"\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"checkmark\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 21\n                }, this), \" Save\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: closeModal,\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 21\n                }, this), \" Cancel\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: displayUser()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 485,\n    columnNumber: 10\n  }, this);\n};\n\n_s(EditProfile, \"R+U6V1JbOb9Td/n9tP5jqtRX6bA=\");\n\n_c = EditProfile;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.currentUser,\n    channel: state.channel.currentChannel\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {// selectChannel: (channel) => dispatch(setChannel(channel)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfile);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfile\");","map":{"version":3,"sources":["/Users/fatmaamara/Desktop/projetetude/authentification-main/front-end/src/components/views/EditProfile.js"],"names":["React","useState","useEffect","connect","firebase","store","Menu","Icon","Modal","Button","Form","Segment","EditProfile","props","usersState","setUsersState","modalOpenState","setModalOpenState","connectedUsersState","setConnectedUsersState","usersRef","database","ref","connectedRef","statusRef","name","setname","lastName","setlastName","email","setemail","openModal","closeModal","on","snap","currentState","updatedState","user","val","displayName","status","id","key","isPrivateChat","push","userStatusRef","child","uid","set","onDisconnect","remove","off","index","indexOf","splice","displayUser","length","filter","getState","currentUser","map","marginTop","fontSize","accountStatus","update","mapStateToProps","state","channel","currentChannel","mapDispatchToProps","dispatch"],"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","sourcesContent":["// import React, { useEffect } from \"react\";\n// import { Button, Form } from \"react-bootstrap\";\n// import { useState } from \"react\";\n// import { useHistory } from \"react-router\";\n// import axios from \"axios\";\n\n// const EditProfile = () => {\n//   const [data, setData] = useState([]);\n//   const [name, setname] = useState(\"\");\n//   const [lastName, setlastName] = useState(\"\");\n//   const [email, setemail] = useState(\"\");\n//   const history = useHistory();\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const userId = localStorage.getItem(\"id\");\n//       const result = await axios(`http://localhost:2000/api/auth/${userId}`);\n//       console.log(result.data, \"useerrr\");\n//       setData(result.data);\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <>\n//       <section id=\"cover\" class=\"min-vh-100\">\n//         <div id=\"cover-caption\" style={{ marginTop: \"100px\" }}>\n//           <div class=\"container\">\n//             <div class=\"row text-white\">\n//               <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\n//                 <div class=\"px-2\">\n//                   <Form>\n//                     <Form.Group controlId=\"formBasicEmail\">\n//                       <Form.Label className=\"itemlabel\">Name</Form.Label>\n//                       <Form.Control\n//                         className=\"itemStyle\"\n//                         type=\"name\"\n//                         placeholder={data.name}\n//                         name=\"name\"\n//                         value={name}\n//                         onChange={(e) => setname(e.target.value)}\n//                       />\n//                     </Form.Group>\n\n//                     <Form.Group controlId=\"formBasicPassword\">\n//                       <Form.Label className=\"itemlabel\">lastName</Form.Label>\n//                       <Form.Control\n//                         type=\"lastName\"\n//                         placeholder={data.lastName}\n//                         name=\"lastName\"\n//                         value={lastName}\n//                         className=\"itemStyle\"\n//                         onChange={(e) => setlastName(e.target.value)}\n//                       />\n//                     </Form.Group>\n\n//                     <Form.Group controlId=\"formBasicPassword\">\n//                       <Form.Label className=\"itemlabel\">Email</Form.Label>\n//                       <Form.Control\n//                         type=\"email\"\n//                         placeholder={data.email}\n//                         name=\"email\"\n//                         value={email}\n//                         className=\"itemStyle\"\n//                         onChange={(e) => setemail(e.target.value)}\n//                       />\n//                     </Form.Group>\n//                     <div\n//                       style={{\n//                         justifyContent: \"space-between\",\n//                         padding: \"5% 14%\",\n//                       }}\n//                     >\n//                       <Button\n//                         className=\"buttonStyle\"\n//                         variant=\"primary\"\n//                         type=\"submit\"\n//                         style={{ backgroundColor: \"#00AAEE\" }}\n//                         onClick={() =>\n//                           //  UpdateUser()\n//                           {\n//                             const editUser = { name, lastName, email };\n\n//                             console.log(editUser, \"editUser\");\n//                             const userId = localStorage.getItem(\"id\");\n//                             axios.put(\n//                               `http://localhost:2000/api/auth/${userId}`,\n//                               editUser\n//                             );\n//                             alert(\"edit user profile with success\");\n//                           }\n//                         }\n//                       >\n//                         Submit\n//                       </Button>\n//                     </div>\n//                   </Form>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </section>\n//     </>\n//   );\n// };\n\n// export default EditProfile;\n\n//************* */\n\n// import React, { useState } from \"react\";\n// // import { Grid, Header, Icon, Image, Dropdown } from \"semantic-ui-react\";\n// import { connect } from \"react-redux\";\n// // import firebase from \"../../../server/firebase\";\n// import { Button, Form } from \"react-bootstrap\";\n// // import \"./UserInfo.css\";\n// import firebase from \"../../server/firebase\";\n// const UserInfo = (props) => {\n//   const usersRef = firebase.database().ref(\"users\");\n//   const [name, setname] = useState(\"\");\n//   const [lastName, setlastName] = useState(\"\");\n//   const [email, setemail] = useState(\"\");\n//   if (props.user) {\n//     return (\n//       // <Grid>\n//       //     <Grid.Column>\n//       //         <Grid.Row className=\"userinfo_grid_row\">\n//       //             <Header inverted as=\"h2\">\n//       //                 {/* <Icon name=\"slack\" /> */}\n//       //                 <Header.Content>Soft Community</Header.Content>\n//       //             </Header>\n//       //             <Header className=\"userinfo_displayname\" inverted as=\"h4\">\n//       //                 <Dropdown\n//       //                     trigger={\n//       //                         <span>\n\n//       //                             {props.user.displayName}\n//       //                         </span>\n//       //                     }\n//       //                     options={getDropDownOptions()}\n//       //                 >\n//       //                 </Dropdown>\n\n//       //             </Header>\n//       //         </Grid.Row>\n//       //     </Grid.Column>\n//       // </Grid>\n\n//       <>\n//         <section id=\"cover\" class=\"min-vh-100\">\n//           <div id=\"cover-caption\" style={{ marginTop: \"100px\" }}>\n//             <div class=\"container\">\n//               <div class=\"row text-white\">\n//                 <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\n//                   <div class=\"px-2\">\n//                     <Form>\n//                       <Form.Group controlId=\"formBasicEmail\">\n//                         <Form.Label className=\"itemlabel\">Name</Form.Label>\n//                         <Form.Control\n//                           className=\"itemStyle\"\n//                           type=\"name\"\n//                           placeholder={props.user.displayName}\n//                           name=\"name\"\n//                           value={name}\n//                           onChange={(e) => setname(e.target.value)}\n//                         />\n//                       </Form.Group>\n\n//                       <Form.Group controlId=\"formBasicPassword\">\n//                         <Form.Label className=\"itemlabel\">lastName</Form.Label>\n//                         <Form.Control\n//                           type=\"lastName\"\n//                           placeholder={props.user.displayName}\n//                           name=\"lastName\"\n//                           value={lastName}\n//                           className=\"itemStyle\"\n//                           onChange={(e) => setlastName(e.target.value)}\n//                         />\n//                       </Form.Group>\n\n//                       <Form.Group controlId=\"formBasicPassword\">\n//                         <Form.Label className=\"itemlabel\">Email</Form.Label>\n//                         <Form.Control\n//                           type=\"email\"\n//                           placeholder={props.user.email}\n//                           name=\"email\"\n//                           value={email}\n//                           className=\"itemStyle\"\n//                           onChange={(e) => setemail(e.target.value)}\n//                         />\n//                       </Form.Group>\n//                       <div\n//                         style={{\n//                           justifyContent: \"space-between\",\n//                           padding: \"5% 14%\",\n//                         }}\n//                       >\n//                         {console.log(props.user.uid, \"ttfdbn\")}\n//                         <Button\n//                           className=\"buttonStyle\"\n//                           variant=\"primary\"\n//                           type=\"submit\"\n//                           style={{ backgroundColor: \"#00AAEE\" }}\n//                           onClick={(id = props.user.uid) =>\n//                             //  UpdateUser()\n//                             {\n//                               // console.log(editUser, \"editUser\");\n//                               // const userId = localStorage.getItem(\"id\");\n//                               // axios.put(\n//                               //   `http://localhost:2000/api/auth/${userId}`,\n//                               //   editUser\n//                               // );\n//                               {\n//                                 console.log(id, \"yyyy\");\n//                               }\n//                               const accountStatus = usersRef.child(id);\n\n//                               accountStatus.update({\n//                                 email: email,\n//                                 displayName: name,\n//                               });\n//                               alert(\"edit user profile with success\");\n//                             }\n//                           }\n//                         >\n//                           Submit\n//                         </Button>\n//                       </div>\n//                     </Form>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </section>\n//       </>\n//     );\n//   }\n//   return null;\n// };\n\n// const mapStateToProps = (state) => {\n//   return {\n//     user: state.user.currentUser,\n//   };\n// };\n\n// export default connect(mapStateToProps)(UserInfo);\n\n//*************$ */\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n// import firebase from \"../../server/firebase\";\nimport firebase from \"../../server/firebase\";\n// import { Button, Form } from \"react-bootstrap\";\nimport store from \"../../index\";\n// import { Nav, Navbar, Container, Button } from \"react-bootstrap\";\nimport { Menu, Icon, Modal, Button, Form, Segment } from \"semantic-ui-react\";\nconst EditProfile = (props) => {\n  const [usersState, setUsersState] = useState([]);\n  const [modalOpenState, setModalOpenState] = useState(false);\n  const [connectedUsersState, setConnectedUsersState] = useState([]);\n\n  const usersRef = firebase.database().ref(\"users\");\n\n  const connectedRef = firebase.database().ref(\".info/connected\");\n\n  const statusRef = firebase.database().ref(\"status\");\n  const [name, setname] = useState(\"\");\n  const [lastName, setlastName] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n\n  const openModal = () => {\n    setModalOpenState(true);\n  };\n\n  const closeModal = () => {\n    setModalOpenState(false);\n  };\n  useEffect(() => {\n    usersRef.on(\"child_added\", (snap) => {\n      setUsersState((currentState) => {\n        let updatedState = [...currentState];\n\n        let user = snap.val();\n        user.name = user.displayName;\n        user.email = user.email;\n        user.status = user.status;\n        user.id = snap.key;\n        user.isPrivateChat = true;\n        updatedState.push(user);\n\n        return updatedState;\n      });\n    });\n\n    connectedRef.on(\"value\", (snap) => {\n      if (props.user && snap.val()) {\n        const userStatusRef = statusRef.child(props.user.uid);\n        userStatusRef.set(true);\n        userStatusRef.onDisconnect().remove();\n      }\n    });\n\n    return () => {\n      usersRef.off();\n      connectedRef.off();\n    };\n  }, [props.user]);\n\n  useEffect(() => {\n    statusRef.on(\"child_added\", (snap) => {\n      setConnectedUsersState((currentState) => {\n        let updatedState = [...currentState];\n        updatedState.push(snap.key);\n        return updatedState;\n      });\n    });\n\n    statusRef.on(\"child_removed\", (snap) => {\n      setConnectedUsersState((currentState) => {\n        let updatedState = [...currentState];\n\n        let index = updatedState.indexOf(snap.key);\n        updatedState.splice(index, 1);\n        return updatedState;\n      });\n    });\n\n    return () => statusRef.off();\n  }, [usersState]);\n\n  const displayUser = () => {\n    if (usersState.length > 0) {\n      return usersState\n        .filter((user) => user.id === store.getState().user.currentUser.uid)\n        .map((user) => {\n          return (\n            <>\n              {/* <section id=\"cover\" class=\"min-vh-100\">\n                <div id=\"cover-caption\" style={{ marginTop: \"100px\" }}>\n                  <div class=\"container\">\n                    <div class=\"row text-white\">\n                      <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\n                        <div class=\"px-2\">\n                          <Form>\n                            <Form.Group controlId=\"formBasicEmail\">\n                              <Form.Label className=\"itemlabel\">\n                                Name\n                              </Form.Label>\n                              <Form.Control\n                                className=\"itemStyle\"\n                                type=\"name\"\n                                placeholder={props.user.displayName}\n                                name=\"name\"\n                                value={name}\n                                onChange={(e) => setname(e.target.value)}\n                              />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formBasicPassword\">\n                              <Form.Label className=\"itemlabel\">\n                                lastName\n                              </Form.Label>\n                              <Form.Control\n                                type=\"lastName\"\n                                placeholder={props.user.displayName}\n                                name=\"lastName\"\n                                value={lastName}\n                                className=\"itemStyle\"\n                                onChange={(e) => setlastName(e.target.value)}\n                              />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formBasicPassword\">\n                              <Form.Label className=\"itemlabel\">\n                                Email\n                              </Form.Label>\n                              <Form.Control\n                                type=\"email\"\n                                placeholder={props.user.email}\n                                name=\"email\"\n                                value={email}\n                                className=\"itemStyle\"\n                                onChange={(e) => setemail(e.target.value)}\n                              />\n                            </Form.Group>\n                            <div\n                              style={{\n                                justifyContent: \"space-between\",\n                                padding: \"5% 14%\",\n                              }}\n                            >\n                              {console.log(props.user.uid, \"ttfdbn\")}\n                              <Button\n                                className=\"buttonStyle\"\n                                variant=\"primary\"\n                                type=\"submit\"\n                                style={{ backgroundColor: \"#00AAEE\" }}\n                                onClick={() => {\n                                  const id =\n                                    store.getState().user.currentUser.uid;\n                                  const accountStatus = usersRef.child(id);\n\n                                  accountStatus.update({\n                                    email: \"test55@gmail.com\",\n                                    displayName: \"test55\",\n                                  });\n                                  alert(\"edit user profile with success\");\n                                }}\n                              >\n                                Submit\n                              </Button>\n                            </div>\n                          </Form>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </section> */}\n              <Menu.Menu style={{ marginTop: \"10px\" }}>\n                <Menu.Item>\n                  <span\n                    className=\"clickable\"\n                    style={{ fontSize: 16 }}\n                    onClick={openModal}\n                  >\n                    <Icon name=\"edit\" /> EditProfile\n                  </span>\n                </Menu.Item>\n              </Menu.Menu>\n              <Modal open={modalOpenState} onClose={closeModal}>\n                <Modal.Header>EditProfile</Modal.Header>\n                <Modal.Content>\n                  <Form\n                  // onSubmit={onSubmit}\n                  >\n                    <Segment stacked>\n                      <Form.Input\n                        name=\"name\"\n                        // value={channelAddState.name}\n                        // onChange={handleInput}\n                        type=\"text\"\n                        placeholder={user.displayName}\n                      />\n                      <Form.Input\n                        name=\"description\"\n                        // value={channelAddState.description}\n                        // onChange={handleInput}\n                        type=\"text\"\n                        // placeholder=\"Email\"\n                        placeholder={user.email}\n                      />\n                    </Segment>\n                  </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                  <Button\n                    // loading={isLoadingState}\n                    onClick={() => {\n                      const accountStatus = usersRef.child(id);\n\n                      accountStatus.update({\n                        email: \"test55@gmail.com\",\n                        displayName: \"test55\",\n                      });\n                    }}\n                  >\n                    <Icon name=\"checkmark\" /> Save\n                  </Button>\n                  <Button onClick={closeModal}>\n                    <Icon name=\"remove\" /> Cancel\n                  </Button>\n                </Modal.Actions>\n              </Modal>\n            </>\n          );\n        });\n    }\n  };\n\n  return <div>{displayUser()}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.currentUser,\n    channel: state.channel.currentChannel,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // selectChannel: (channel) => dispatch(setChannel(channel)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfile);\n"]},"metadata":{},"sourceType":"module"}